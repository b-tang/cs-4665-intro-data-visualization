<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' inline='true' name='excel-direct.41865.463928703706' version='18.1'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Documents/Spring 2024 Courses/CS 4665-01/Group09-AoGonzalezCarachureTang-LE04/StoryTelling/studentloans2013.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.41865.463928703706leaf' name='&apos;12-13 Fed Student Loans Campus$&apos;' table='[&apos;12-13 Fed Student Loans Campus$&apos;]' type='table'>
          <columns gridOrigin='A1:N4047:no:A1:N4047:0' header='yes' outcome='2'>
            <column datatype='integer' name='OPE ID' ordinal='0' />
            <column datatype='string' name='School' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='Zip Code' ordinal='3' />
            <column datatype='string' name='School Type' ordinal='4' />
            <column datatype='integer' name='Federal Work Study Recipients' ordinal='5' />
            <column datatype='integer' name='Federal Work Study $ Federal Award' ordinal='6' />
            <column datatype='integer' name='Federal Work Study Disbursements' ordinal='7' />
            <column datatype='integer' name='Perkins Loan Recipients' ordinal='8' />
            <column datatype='integer' name='Perkins Loan $ Federal Award' ordinal='9' />
            <column datatype='integer' name='Perkins Loan Disbursements' ordinal='10' />
            <column datatype='integer' name='Federal Supplemental Recipients' ordinal='11' />
            <column datatype='integer' name='Federal Supplemental $ Federal Award' ordinal='12' />
            <column datatype='integer' name='Federal Supplemental Disbursements' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.41865.463928703706leaf' name='&apos;12-13 Fed Student Loans Campus$&apos;' table='[&apos;12-13 Fed Student Loans Campus$&apos;]' type='table'>
          <columns gridOrigin='A1:N4047:no:A1:N4047:0' header='yes' outcome='2'>
            <column datatype='integer' name='OPE ID' ordinal='0' />
            <column datatype='string' name='School' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='Zip Code' ordinal='3' />
            <column datatype='string' name='School Type' ordinal='4' />
            <column datatype='integer' name='Federal Work Study Recipients' ordinal='5' />
            <column datatype='integer' name='Federal Work Study $ Federal Award' ordinal='6' />
            <column datatype='integer' name='Federal Work Study Disbursements' ordinal='7' />
            <column datatype='integer' name='Perkins Loan Recipients' ordinal='8' />
            <column datatype='integer' name='Perkins Loan $ Federal Award' ordinal='9' />
            <column datatype='integer' name='Perkins Loan Disbursements' ordinal='10' />
            <column datatype='integer' name='Federal Supplemental Recipients' ordinal='11' />
            <column datatype='integer' name='Federal Supplemental $ Federal Award' ordinal='12' />
            <column datatype='integer' name='Federal Supplemental Disbursements' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N4047:no:A1:N4047:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPE ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OPE ID]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>OPE ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School</remote-name>
            <remote-type>130</remote-type>
            <local-name>[School]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>School</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zip Code]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Zip Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[School Type]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>School Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Work Study Recipients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Work Study Recipients]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Work Study Recipients</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Work Study $ Federal Award</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Work Study $ Federal Award]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Work Study $ Federal Award</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Work Study Disbursements</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Work Study Disbursements]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Work Study Disbursements</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perkins Loan Recipients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Perkins Loan Recipients]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Perkins Loan Recipients</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perkins Loan $ Federal Award</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Perkins Loan $ Federal Award]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Perkins Loan $ Federal Award</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perkins Loan Disbursements</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Perkins Loan Disbursements]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Perkins Loan Disbursements</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Supplemental Recipients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Supplemental Recipients]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Supplemental Recipients</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Supplemental $ Federal Award</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Supplemental $ Federal Award]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Supplemental $ Federal Award</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Federal Supplemental Disbursements</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Federal Supplemental Disbursements]</local-name>
            <parent-name>[&apos;12-13 Fed Student Loans Campus$&apos;]</parent-name>
            <remote-alias>Federal Supplemental Disbursements</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Amount Per Aid Recipient' datatype='real' name='[Calculation_5520814112546427]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_7350814111147874]/([Federal Supplemental Recipients]+[Federal Work Study Recipients]+[Perkins Loan Recipients])' scope-isolation='false' />
      </column>
      <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Federal Supplemental $ Federal Award]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Federal Work Study $ Federal Award]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ope Id' datatype='integer' name='[OPE ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Perkins Loan $ Federal Award]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
      <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Federal Supplemental $ Federal Award]' derivation='Sum' name='[sum:Federal Supplemental $ Federal Award:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Federal Supplemental Disbursements]' derivation='Sum' name='[sum:Federal Supplemental Disbursements:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Federal Work Study $ Federal Award]' derivation='Sum' name='[sum:Federal Work Study $ Federal Award:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Federal Work Study Disbursements]' derivation='Sum' name='[sum:Federal Work Study Disbursements:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perkins Loan $ Federal Award]' derivation='Sum' name='[sum:Perkins Loan $ Federal Award:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perkins Loan Disbursements]' derivation='Sum' name='[sum:Perkins Loan Disbursements:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (School Type,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:School Type:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='tableau-10' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Federal Supplemental Disbursements:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Federal Supplemental $ Federal Award:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Perkins Loan $ Federal Award:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Perkins Loan Disbursements:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Federal Work Study Disbursements:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.41865.463928703706].[sum:Federal Work Study $ Federal Award:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.41865.463928703706leaf' name='&apos;12-13 Fed Student Loans Campus$&apos;' table='[&apos;12-13 Fed Student Loans Campus$&apos;]' type='table'>
                <columns gridOrigin='A1:N4047:no:A1:N4047:0' header='yes' outcome='2'>
                  <column datatype='integer' name='OPE ID' ordinal='0' />
                  <column datatype='string' name='School' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='Zip Code' ordinal='3' />
                  <column datatype='string' name='School Type' ordinal='4' />
                  <column datatype='integer' name='Federal Work Study Recipients' ordinal='5' />
                  <column datatype='integer' name='Federal Work Study $ Federal Award' ordinal='6' />
                  <column datatype='integer' name='Federal Work Study Disbursements' ordinal='7' />
                  <column datatype='integer' name='Perkins Loan Recipients' ordinal='8' />
                  <column datatype='integer' name='Perkins Loan $ Federal Award' ordinal='9' />
                  <column datatype='integer' name='Perkins Loan Disbursements' ordinal='10' />
                  <column datatype='integer' name='Federal Supplemental Recipients' ordinal='11' />
                  <column datatype='integer' name='Federal Supplemental $ Federal Award' ordinal='12' />
                  <column datatype='integer' name='Federal Supplemental Disbursements' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Loan Amount by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Average Amount Per Aid Recipient' datatype='real' name='[Calculation_5520814112546427]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_7350814111147874]/([Federal Supplemental Recipients]+[Federal Work Study Recipients]+[Perkins Loan Recipients])' scope-isolation='false' />
            </column>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Supplemental Recipients]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Recipients]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Recipients]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5520814112546427]' derivation='Sum' name='[sum:Calculation_5520814112546427:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.41865.463928703706].[none:School Type:nk]</rows>
        <cols>[excel-direct.41865.463928703706].[sum:Calculation_5520814112546427:qk]</cols>
      </table>
      <simple-id uuid='{D2543443-BBF4-414F-822E-2B4563196AC2}' />
    </worksheet>
    <worksheet name='Number of Schools by Type (Bar)'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.41865.463928703706].[sum:Number of Records:qk]' scope='cols' value='Number of Schools' />
            <format attr='subtitle' class='0' field='[excel-direct.41865.463928703706].[sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.41865.463928703706].[sum:Number of Records:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.41865.463928703706].[none:School Type:nk]</rows>
        <cols>[excel-direct.41865.463928703706].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{EFB6074C-7B13-4693-902C-0ADABC60160F}' />
    </worksheet>
    <worksheet name='Number of Schools by Type (Pie)'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='506' />
            <format attr='width' value='939' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
              <wedge-size column='[excel-direct.41865.463928703706].[sum:Number of Records:qk]' />
              <text column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
              <text column='[excel-direct.41865.463928703706].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[excel-direct.41865.463928703706].[none:School Type:nk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[excel-direct.41865.463928703706].[pcto:sum:Number of Records:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{551106B6-2355-4893-8392-85B5994844F3}' />
    </worksheet>
    <worksheet name='Total Aid (Disbursement) by Loan Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Federal Supplemental Disbursements]' derivation='Sum' name='[sum:Federal Supplemental Disbursements:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Federal Work Study Disbursements]' derivation='Sum' name='[sum:Federal Work Study Disbursements:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Perkins Loan Disbursements]' derivation='Sum' name='[sum:Perkins Loan Disbursements:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.41865.463928703706].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.41865.463928703706].[sum:Federal Supplemental Disbursements:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.41865.463928703706].[sum:Federal Work Study Disbursements:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.41865.463928703706].[sum:Perkins Loan Disbursements:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.41865.463928703706].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.41865.463928703706].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.41865.463928703706].[Multiple Values]</rows>
        <cols>([excel-direct.41865.463928703706].[none:School Type:nk] / [excel-direct.41865.463928703706].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{1EB01837-BFCF-4180-8131-1B4A97B79E5C}' />
    </worksheet>
    <worksheet name='Total Aid (Disbursement) by School'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School]' role='dimension' type='nominal' />
            <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' include-totals='true' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
              <color column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
              <text column='[excel-direct.41865.463928703706].[none:School:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6005545C-0A60-4D98-9F2B-DC8326EDA52D}' />
    </worksheet>
    <worksheet name='Total Aid (Disbursement) by School/Type (Bubble)'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[School]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
              <text column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
              <text column='[excel-direct.41865.463928703706].[none:School:nk]' />
              <color column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{709C4579-17D5-4EC8-B75B-9A3526464147}' />
    </worksheet>
    <worksheet name='Total Aid (Disbursement) by School/Type (Treemap)'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[School]' role='dimension' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
              <color column='[excel-direct.41865.463928703706].[none:School Type:nk]' />
              <text column='[excel-direct.41865.463928703706].[none:School:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EC338531-49EC-4F4E-AD5C-C4BF384641E4}' />
    </worksheet>
    <worksheet name='Total Aid by School Type By State'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.41865.463928703706].[Inclusions (School Type,State)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Private/Non-Profit&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Proprietary&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Public&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.41865.463928703706].[Inclusions (School Type,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel-direct.41865.463928703706].[none:School Type:nk] / [excel-direct.41865.463928703706].[none:State:nk])</rows>
        <cols>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</cols>
      </table>
      <simple-id uuid='{66A49E8F-DCFD-4C63-A424-5E09F8005ADE}' />
    </worksheet>
    <worksheet name='Total Aid by School Type by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='12-13 Fed Student Loans Campus (studentloans2013)' name='excel-direct.41865.463928703706' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.41865.463928703706'>
            <column caption='Total Aid' datatype='integer' name='[Calculation_7350814111147874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Federal Supplemental Disbursements]+[Federal Work Study Disbursements]+[Perkins Loan Disbursements]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Federal Supplemental Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Federal Work Study Disbursements]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Perkins Loan Disbursements]' role='measure' type='quantitative' />
            <column datatype='string' name='[School Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[School Type]' derivation='None' name='[none:School Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7350814111147874]' derivation='Sum' name='[sum:Calculation_7350814111147874:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.41865.463928703706].[Inclusions (School Type,State)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Private/Non-Profit&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Proprietary&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:School Type:nk]' member='&quot;Public&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;ND&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;RI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;SD&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WI&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WV&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.41865.463928703706].[Inclusions (School Type,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.41865.463928703706].[none:State:nk]</rows>
        <cols>[excel-direct.41865.463928703706].[none:School Type:nk]</cols>
      </table>
      <simple-id uuid='{3AE1B03C-89E9-4934-B1BB-E5E9913DE938}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Number of Schools by Type (Bar)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{B2CAC1D7-3271-4B38-9D24-260B9DEE1FC3}' />
    </window>
    <window class='worksheet' name='Number of Schools by Type (Pie)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[none:School Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{3642D1DC-1746-4F14-ACE9-2F9F34F4108E}' />
    </window>
    <window class='worksheet' name='Average Loan Amount by Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{3E6A0FB6-E920-4E06-A57A-1295DC248E15}' />
    </window>
    <window class='worksheet' name='Total Aid (Disbursement) by School'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School:nk]</field>
            <field>[excel-direct.41865.463928703706].[sum:Calculation_7350814111147874:qk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{5F8A9B80-120F-4679-A354-9590614E6DA1}' />
    </window>
    <window class='worksheet' name='Total Aid (Disbursement) by School/Type (Treemap)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[none:School Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
            <field>[excel-direct.41865.463928703706].[none:School:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{9A4D8BC3-C61C-4E2F-B74D-2DACBE064E9E}' />
    </window>
    <window class='worksheet' name='Total Aid (Disbursement) by School/Type (Bubble)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[none:School Type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
            <field>[excel-direct.41865.463928703706].[none:School:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{3272EE8F-A8B1-4D5F-8653-A99F78BD77E7}' />
    </window>
    <window class='worksheet' name='Total Aid (Disbursement) by Loan Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[excel-direct.41865.463928703706].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[:Measure Names]</field>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{BEC21E95-3C37-4FFA-8ABC-7340AD7A3A08}' />
    </window>
    <window class='worksheet' name='Total Aid by School Type by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{3657EF05-6687-4F44-8D7C-3CD43C3D63EF}' />
    </window>
    <window class='worksheet' maximized='true' name='Total Aid by School Type By State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41865.463928703706].[none:School Type:nk]</field>
            <field>[excel-direct.41865.463928703706].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{9DAE9B4D-8044-4F39-BA5D-FD187F9BE6FC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='123' name='Average Loan Amount by Type' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='123' name='Number of Schools by Type (Bar)' width='192'>
      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
      kwAIpf0/yMQKyGCMEecAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Schools by Type (Pie)' width='192'>
      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
      6U9/or6+njlz5jB48GBWrVpFVVUVd999N3369GHjxo0MGDCA2bNnk5WVxaxZsy5eA/gS0Quk
      ImVlZej1epYuXUp2djYVFRWcO3eOFStWsHDhQnS6ju/D48eP07NnTx566CHWr19PcXExtbW1
      zJ8/nw0bNpCbm8vo0aP56quvKCwsxGKxYDD45pBpEQAVGTBgAA8++CAmkwmz2YzVauXEiRMs
      WbKEDRs2cKE1nJGRwW233cbq1atJTU2lV69enD59mjfeeINBgwaRmppKdnY2sbGxZGdnM3Xq
      VMxmM77YmhYBUJnTp0+zaNEinn/+eWJjY1m5ciWZmZkUFRV9b3hDQEAA9913H/v37+eLL74g
      OTmZWbNm8c0335CcnMzy5cuZPn06ERERrFq1iueee47m5mblPpiTRABUpLa2lqeffpp58+YR
      HBzMqVOn2LRpExUVFbS2thIaGkpZWRk5OTmsXbuWiIgIAEwmE5GRkcTExGC1WpFlGZvNxvbt
      25k+fTqRkZEkJibS1NSk8CfsPDEUQkVKS0spLy/n9OnTFBYWcuONN2K1WtmzZw933nknffv2
      JSsri5kzZ1JSUsKBAweYN28e48eP58SJExw4cID77ruP3r17U19fT1hYGIMHD6a2thaDwcD4
      8eO9+q7vjxHdoIKqiSaQoGoiAIKqiQAIqiYCIKiaCICgaiIAgqqJAAiqJgIgqJoIgKBqIgCC
      qokACKr2v4+n10A4IwD6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Aid (Disbursement) by Loan Type' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Total Aid (Disbursement) by School' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Total Aid (Disbursement) by School/Type (Bubble)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd4BdVbn2f/v0Pmd67yUzk5lJI70HEorUhK5c8fqBXBvlXopeQdTPq1gu
      oij6AQJCUEqkJZCQQBLSSJtJmZLpvZ3e+977++PIgWES0KtcQXnyT+bsvddee6/1rvW+z1u2
      IMuyzKf4FP+kUPy9O/ApPsXfE6p3/iOKIpFI5O/Zl0/xKf7XkRKASCSCSqVCqVT+PfvzDwlH
      2MEvWn7BvtF9xKU4ADqVjs9UfIYbGm9Ar9L/nXv4zwvVe/9QKpWoVKoznfsp/gJMBieJS3HS
      den88MgPeXPoTWTeNbd8CR+Ptz+OLMjcMvcWlIozLzyyLNPn7ePxtsfpcHaQqc/k0qpLWVe6
      LnVdJBGh1dHKWHCMLH0WjVmNmDXmj/w5P+kQ3jGCg8EgWq32UwH4G+DQ+CH+ffe/ExNjrCha
      wRtDb6RW/vfDqDby1AVPUWWtQpIlwokwkiyhV+lRKZJj0eZo46YdN+GJelLXKQQFX2r6EjfN
      uolOVyffOfAdOpwdSEgAlJhL+Naib7EofxGCIHz0D/0Jxaez/SPAm8Nvpibr9sHtiLJ4xnOD
      8SDHbccxqU08fPJhTthPEJfilFvKWV+9ngX5C/h5y8+nTH4ASZZ4rPUx5ufN55599zASGJly
      fMg/xK27buXpC56mwlrxt3/IfxAo77333nsB4vE4KpUKheJTYuivgSzLRMUou4Z3oVaoyTHk
      4I/5P/Ca2oxanu18lq0DW3GEHbgjbvq8fewc3okkS7wx9AZRMTrtuoScoMPVQb+v/7TtxqU4
      UTHKquJVn+4CZ8Cns/1viLgU5xctv+CnR36KUlAyN3cul1RdgsCZJ59CUNBsa2b/2P5px0KJ
      EI+1PkYkcWZ2biI48YF9anW0IsnSn/8Q/2T4VAA+BLIsExfjZ5xEMTHGMdsx/DE/j7U+xsMn
      H2YkMEIoEWL/2H5O2E9QaCo8Y/s16TUM+4enGMjvRUSMnHH1ztBlUG2t/sD+v2NHfIrT41MB
      +BDsHd3LF7Z9gR8f/jHhRHja8UdOPsJ1r13HHW/dwat9r0473uXu4qtzvkquIXfascq0Sm6e
      ezPBePAD+9CY1UhNes2U3/QqPf+58D85v/z8D7x2ft58FMIHD7Msy0iyhCRL/LMFBny6PHwI
      ftv6W47bj9Ph7ODskrPJM+aRY8ghnAgTiodSk0ulUJ12ogkIzMudx10L7qLZ1ky/tx9JlhAE
      gVvm3kKeIQ+9So8v5jtjH8rTyrl9/u283Psyvz7+a0RJ5Muzv8w5pecQiod4oecF2pxt067L
      1mdj0Vh4pvMZrqi5YhrVKskSvZ5e3hx6kz5vHwIC1enVrClZQ5ml7J/CbviUBn0Pnmh7gtf6
      X2Np4VJWFK3AG/Wye3g3L/e9TIm5BIvGQqujlcUFixnyDTEZmuTiyosxaUzc2HQjfzj1B35y
      5CdT2qxMq8QRduCNeTFrzNyz6B6e7XyWw5OHsWgsvHDJC9x/9H42920+bZ/UCjX3r7qf5UXL
      uW3Xbbwx9Ebq2J3z7+Rz9Z/DGXbyw0M/ZMfQDhJSAgGBhfkLubb2Wr6+8+sAPHn+k8zOmZ26
      NhQP8fDJh/n9qd9P24FMahPXN1zP9fXXo1Vp/1av92OJfyoBCMVDvNT7EjuHdyJKIksKlrCh
      egNhMczde++m092JVqnFpDHR7+lHQkKtUHN++fl8vv7z3Lj9RpwRJzqljpgUQ5IlGrMamZk5
      k15PLwBmrZlB7yAJOcGywmVsG9iGI+xI9cGgNiBKYorV+fU5v6bAVMBX3vgKw/7hKf0VELik
      6hLuXnQ3I4ERLnnxkinHS8wlPHfRcxjUBhJSgi19W9jYsZFsfTY3zrqRmvQavrzjywz6Brl7
      0d1olBr8MT9LCpbwmxO/4amOp85o2ygFJTc03cBNTTd9oJPuk45/3Nn+PkQTUb739vfY0rcl
      ZXAenjjM0cmjrCxeycGJgxhUBgpMBbQ721PXxaU4r/S+gkVjIceQQygRwqQ2EUqEsGqtXFN7
      Dfcdug9vzAskDdNNF2/CorHgCDt4sefFKf0QJZFVRavYM7qH+sx65ubORafUcef8O/n2/m8n
      HWFI6JV6LFoLdRl1yMiI0nRfQkJK4I/70aq0NNuaue/QffjjfjrooNPdybqydagUKq6pvYYd
      QzvYPridmBhjTcka9o7u/UB2SJRFnmp/ihVFK2jMavxbDMHHEv80RvDhycO81v/aFLZFRmbf
      2D68US8XVlzI9TOvZ8A7MO1aGZlDE4cIJ8JEEhHsYTvBeBBnxMlx+/HU5AdwRVzYQjY0Sg3Z
      +mxKLaVT2io0FTI/b35Sx0Zg5/BOvDEv9x+9H0/Uw8WVF/PoukfJM+Yx6Bvkh4d+yC+af0Gu
      MZf5efOntBVKhLjx9Rv5RfMveHPoTfzxd/0NtpCNQd8ggiBwzH6M8rRy4lIcURY5OH7wtAb9
      +xGIB9jWv+0f2jD+h94B4mKcfm8/aqWaY7Zjp/XISrJE82QzJZYSqtKrSMiJ07Y1FhgjFA9N
      EaBIIsIrva+Qpk3DG/WCDHnGPLL0WciyjC/m4+oZV/NUx1M4w05KLCUUmYr4r0P/lVp9j9qO
      clHlRfT7ksZxm7ONc8vOTalDMjJ7R/di1pppympiLDBGuaWcQnMhm7o34Yl6sIVsrC1dO6W/
      CkGBKImcsJ/gipor2D64nYsrLyZDl8Gu4V0faHS/F92ebuJSHI1S82ed/0nDP6wAxMWkU+q5
      rudQK9SUWErOeK4j4uDA2AG29G0h35jPoG9w2jkqhSoVZ/NeRBIR7ph/BycdJxkLjNHr6eXL
      O77MFxq+wGOtjzHkH6LSWskvz/4lJZYSrt1y7RTVQ5Iljk0eoy6jjlOuU7Q6Wrlpx02pcxQo
      WFOyhhP2E7w18haQ9B2sr17P9sHtuCIuNEoNCkFBmjaNcDwZS5SmS2MsOIYoifR4ehjxj/Bv
      s/6NhXkLeXv87T/7PSakxBl9FO8gLsZ5rO0xDk8c5tyyc7ms6rJPjN3wD6sCjQZGeaHnBQLx
      AO6omyHfEBaNZdp5JrWJyyovI9uQTYYug6/P+Tp5xjyA1MAvK1zGxZUXn/Y+CoWCmVkz+fbi
      b7OscBm2sI1Odyc/O/ozOt2dhBNhWh2tHJk8AnBa1UNC4qFzHuLymsuRSYZSFJuLWVqwlBJL
      CfNy53HSfjJ1/nH7cV4feJ0ZGTP4UtOXyDXksql7E96ol2WFy7DoLDjDTvq9/UTECC22Fq6f
      eT1LC5aiUWrIM+T92e8xU5fJ9sHt/Pjwj9ncu/m0/X9t4DUebHmQt8ff5vsHv88x+7E/u/2/
      N/5hBUCn0k2Jsy80FXLH/DvINeSiEBQoUJCpy+Rrc77GVbVX8eDZDyLKIi/2vMj3l32fW+fd
      Sm16LQaVAVfERUJKoFPqpt2nIbOBSmslXe4uWmwtlFpKMaqNzMudlwqBUAgKVAoVBpVhmh4P
      MCt7Fs93PY8kS1i1VtQKNfNy59Hp7mTAN8Cm7k1TdrCGrAZiUgx32J0U8Ig7dezw5GFcYdeU
      9oPxIC/3vow/7kepULKmZA1K4cNXaJVCxWRokrv33c3v2n/H3fvu5jcnfoMkS0QSEcKJMK6I
      i+bJ5tRikZAS2EP2D23744J/iGA4URKRZRkBIeW8MagNKAQF3e5uajNr+fez/p2VRStZXrgc
      d8TN2tK13D7/dpYULOHFnhfZPridhJQglAixqXsTZo2ZFlsL4UQYe9hOt7ubdWXrGPIPIUoi
      KoWKdG06+aZ8MvWZvD7wOhXWCkosJbw9/jaX11zOWGAMnUqHRWPh0Pgh/HE/tpANUU7SoIIg
      kKnLxBv1smNoB/awnWvqrmFOzhx2DO1gZuZMjBojVq2VpuwmlhQsIduQTUNWA+vK1vFS70vs
      G9uHIAjkGnJTqtDpVulAPMDKopVkGbLIN+bT4eqYRru+HwvyFjAaGE0Z+RISk6FJZmXP4v6j
      9/Na/2uccJwgGA+SkBKE42Eashq4sPJCxoJjZBuyP9QL/ffGJ14ABrwD3N98P9sHt1NgKiBL
      n0Wvp5d+bz87h3cyGZqkPK2cYf8wTdlNDPuHeaD5ATJ0GSwrXIYz7OTOt+7kuP04l9dcTrou
      nX5vP0pByaD/XVsgISeQkIiJMe5ccCdXzLgCf8zPzuGdnHKeYiQwglljZtg/TF1GHc90PoMt
      bEvRp/3efsaCY3S4OlhauJRSSymhRIhALMDasrUEYgEKzYXolDpe6n0JlULFeHCcEf8ItrAt
      ObEqLuS+Q/exZ3QPRyaSKpUv5qMuo45/qf8Xdg7vRBCE00aOqgQVtpCNXcO72Du6F0iqeP6Y
      f5qOrxAULC1cyu3zb2f38G5ckXd3FLVCzWv9r6FRalL9GwuMYVQbWV60nEprJT9v/jkbOzYy
      M3MmZWllH8Go/+3wiXaExcU4N2y/gaOTR4GkcXhp1aXcf/R+4lKcuow6ADpcHQCsLl5NQkpg
      1VnxRr20OdrI1GeSpc/CF/Mx6h/FHXWTrk3nlnm38N0D300xRwpBwS1zb6HP00eLrYVQIkSp
      pRR/zM/KopX0+frwRX0cnTzK8sLl7BrZlern8sLlNNuaKTAVsDh/MZv7NqNSqNAqtdRn1jPo
      GySUCDHkG0Kj1FBkKqLf2z9tYq4sWsnukd0AaJQaPlP+GQDeGnmL+XnzmZc7j15PL3/o/MO0
      d1ViLqEirQJ/LKkGHZ44zO3zb0/aJxNHUCqUCIJAoamQz1R8hvPKzsOgMvB81/P85MhPCCVC
      6FV6/m3WvxGX4vyu/XdJ5ut9WFKwhEHfII6wg1+e/UsW5i/8K0f5o8Una7l/H0KJEMO+d7fx
      ieAET3c8ncq+6vf2o1W+68qPiTFabC2sLl5Nv7cfZ8RJl7uLOTlzuP2s2wkmkiEB3pg35YVV
      K9QYVAaKzcUUmYsY8g8x6B/EHrbT4ezgmtprsGgtvDH4BjqVjqtrr6bYUpzS/3VKHd2eboLx
      IN3ubrYPbqcirQJPxMOwf5jtA9sREBj1j6b6OBmcPC3z0unqZEXRCkxqE01ZTTgjTmRkVAoV
      g75BHjr+EH3evin2ByTtnzRtGrtGdnHKfYrG7GS65I7BHbza/yqOsIMbm27k+Yue55F1j7C+
      aj09nh5GA6OsLVvLdfXXsaRgCd9e/G0+W/dZTjpOnnbyA+wf2099Zn2ScfqYT374hKpAwXiQ
      m3fezE+P/hSdSkcoEQJgXek6qqxVtDpbASgyF/HTVT8lnAiTo8/BH/fjDDtpnmxGkiUC8QA6
      pQ5byMbGUxtRCAo0Cg3z8+ZzzHYMT8zDeGCcfGM+Q/4h9o7uJSEnUgkuaoUaEZE9I3tYVriM
      vaN7abG10Gpvpcpaxbqyddw892YGvAMpfXtD9QYcYQfDgXd5/mA8iEqhIi7F0Sq1CIJw2hTK
      iBihyFRElj6L+Xnz2dy7mYnQBJn6TAa8Aykb464Fd3FB+QVUWiu5sOJCvjr7q3S4Ouj2dKNR
      amjMamTQN4gtbCMiRpCRMagNBGPJBSBNm8aXtn+JNmcbL/a8yOa+zQz7h2m2NWNSm3i64+kP
      pEYjYoRcQy5mtTnFqH1c8YkUgF3Du3jk5CPExBgA9yy+B7VCnZrUoixyVu5Z3Dz3Zh5ofoDx
      4DgRMcIJRzLd0B/3o1FquGXuLVxec3kqhTFDl8GqolV0e7rp9fZyZc2VqBQqzGozw4FhtEot
      X2z8IhPBCeJSnCtmXIFRbaTf248/7mcyNAkkJ3VcivPtxd8mTZvGCccJqq3VmDQmDk0cQkKa
      kuKoV+n5TPlnUClUfKHhC2iVWro93dOee2bmTJQKZWqXGPQPEhWjzEifkbQn4gFyDDl8fubn
      mZUzi1JLKd3ubp5sf5JKlZkLohL/GoxxgWOUy+MC82QNjogLdVoR7pifF3tf5K2Rt+hydxFJ
      RCi1lPLm8Jup+4cTYU46Tn6oF1klqPjK7K/wUu9L7B/bT5o2jRxDzscyuvQTJwDvTPJX+19F
      lEUy9Bmccp3i0MQhejw99Hn78Ea9hOIhYmKMrQNbcYVdaFXaKdv2O/HvL/S+gFpQo1QoMaqN
      eKIe6jLrkGUZW8hGu7Od+qx60rRpVKdXc375+VxadWnKUE1ICcrSypBkaQqrokCBPWynxdZC
      TIoxN3cucSlOniGPpuwmOlwdUyI3ez29BOIBDowd4KoZV9HqaJ0SpWlUGbl3yb1YdVbGg+PE
      pBhqpZqq9CrsITtfmfMVImKEtaVrWVm8kl3Du9jUvYnnTv2eWxWZXNq2nYaRE+R6x1F4BtF4
      hsh3D3NBMMR6TQHtQoIu0YdaqcakNqEQFKgVano8PdPG4Eze8ndg0VqIJCL8sfuPnHSc5MDY
      Ac4uPfu0fpi/Nz45Fi9Jo/fR1kd5tf9VZqTPYEXRCv7Y/Ue63F3Tzp0MTfJa/2usKFrB/Lz5
      +KI+Hj75cOq4XqVnz+iepA4tqNCr9eQZ8ig0FbJ3dC8KQcGAb4CoGOXt8bcpNhfT4erg5d6X
      MWvMmNVmIokIg75Bcgw5rCxamaJNBQRm58xGr9LjjrhpsbXw+sDrzMmZQ7e7m5gYo8hcxDml
      5yAg8ETbE8zMmolG1FCfWU8oEWJ+3nyOTh6lyFyEJEtUW6sZ9A3yo8M/IiElJ+CcnDkICPR6
      e3my/cnUrmJQGfjVsV+RoTHzpLaaomN/RBCnq1QCoJREFMMH+YbGSE39araqRAwqA/VZ9QRi
      ARSCYornuiGrgYngxLQk/PeiMatxihFvC9kY8g19YGbc3wufiB0gkojwnQPf4ejkUTZ1b2Ii
      OIE9bMeqs36g1zEmxWjMauS2ebdRn1lPQkoQjAepSa/hsurL6HB1EE6EsWgtmDVmwokw+cZ8
      CswFrK9ejz/mR5RFnBEnE8EJisxJ/dsetqMUlByePEyhqRBXxMWwf5hraq+hxFJCTUYNE8EJ
      JoIT9Hn7SNelpzj6ieAEoizijXlpyGrgwPgB6jLryDHkUGAs4M2hN9kxmIzrT9OmsSh/Ef6o
      n1cHXmUkMIIz7Ew9nyfqYWbmTNxRNxqFBm80abzvHtnNquJV3KHMoaz59whnKMnyDgRAK8aZ
      HQqw12CgO+ZiPDDOcftxKq2VBOIBlIKS2sxavrnwm9Sk17BzeOdp7YB0XTq3zr0VSZY46TiJ
      JEsUm4txRpw81f4UWqWWKmvVx0Yd+kQIQCge4pGTjwAQFaN4oh6MaiOCIGAPf7DXMRQPoVPq
      aMhqYGH+QlodrSgEBYF4IBk6ULSMpqymVFSoJ+KhPK2c37X/DlvIRn1GPQO+AWSSwW2zc2bz
      Wv9rWLXpBKIJqoxLEGNZIJl4a3QnOaZ03hrZTZG5iDRtGjqVjhH/CEpBSZY+i4lQMoldEATs
      ITuiLKIQFITiIZptzanMsrWla9k1sotDE4dQKVTcteAu/DH/FNvApDbxjYXfIJKIMBIYodRS
      SqmlNBmfNONzVO36CULEc6ZXMx1RPzkKHS+qYmhVegQEsvRZLMhfgDvq5q4Fd5FnzKPIXESV
      tYojk0dSPgcFCorMRWiUGl7pe4VOdyeNWY1cW3ctWqWWV/peYTw4zlsjb3Fe+XlYtda/cBZ8
      NPhYq0CSLDEZnGT/2H6qrdXctfAuutxdPNjyIJdUXcLOoZ0f2kZEjLBndA/uqJuKtAp6PD1E
      EhFUChV93j5mZs5kVvYsnj71NJIskanPZPfI7hTT0+5qp9RSylhgjDJLGbIsU2SoxRS6CPWE
      gV3dAnFRQhBkUM5hTNSSbXRiD9mJilFsoSTTEkwEKTDmcqOlnsGIAzl/Nscdx9EIGtqcbczO
      nk2BsYAB/wAJOcHhicMpVSeUCDERnMCqtZJvzMcetqNT6ri27lpOOU/xx+4/IspiSh2LiTGi
      HS+Bb/QvfucN7lGasuaw39uPRWOhMauRXk8vk8FJNrZv5NDEIbRKLRdVXoQoi9Sk1/CFhi9Q
      ZCpi68BWNnZsTLXVPNnM1+Z8bUpwYUyK4Yl6yBfzeb7reY7ZjrG4YDEXVV70d0ng/1gJgCiL
      BGNBtCotaoWa47bj3LLrFjQKDQk5QTQRZf/oflpsLWiVWhqyGlKOoTPBqDbS5mxj5/BOtEot
      X539VfaP7afIXIRaocYT9fBM5zM0ZTWRY8jhsurL+MHBH6Suz9Bl8Ln6z/F81/NolVq2dbeg
      c/0rW0ejyO9PKImnsbcdSjKvRp37PDrTCFqVloiYLGtS5Xfzte6jJFRablCpKTQV0mxr5qzc
      swjEA1g0lpShHk6EWVWwlMmwHQmB/z763wBcOeNKmrKb2NixkTZHGxaNJeWsk2SJs0vO5vKq
      y6jY/r3/0RhoYiHKA272KETCiTCjgVH2j+1Hr9LT4eogEA8QiAd4rus5gvEgSkHJ+WXno1Qo
      eaD5gSltxaRkxYwScwkqIRlN25DVQH1GPU+0P8HPm3+OjMy2gW1IssSGmg3/oz7/NfhYqEAy
      MsO+Yf5z73/yi2O/YEvfFkYDo/ys+Wdk6jOJSTFC8RCHJw8Tl+KMBcbI1mezung1+8f2E5Ni
      p21XrVBTn1mf8gSLsohGqUGlVGHVWgnFQxycOMhoYBRH2EFVehUHxw8yL3cekpSgQJPGbWf9
      O4+0PUabs40iQx3uwUvpHD9zpTcAb1hEGanlvnO/wOqyeUx4+piV3cTN+Ssx9b2FoDEy01LO
      ucEQ1eZS9kftzLBUcEnVpRwY2w+yzNX6Iu7yhLhINtCqSNAVTaZVlqeVI8kSWwe2plbWDF0G
      kYiHUkspN8+7leq0MoS3HwL/+P9oPNTFC3FkV3JZ9WXsHtmNPWwnIkZSdpJepecbC75BeVo5
      GqWGHk8Ps7Jn0eXu4qTj3ahVpaBkIjTB5r7NSEjoVDqiYhSz1syWvi3YwrbU+CsUig+tcPFR
      4GOxA0QTUW7ddWuKzXGEHfR4emjKbuKU61RKzzxuP06aJo1raq/h2a5n+c6B77CqeBVvDL0x
      jZtWKVSsr17PutJ1HLcfxx/zoxAUlFhKmAxOMuAbSGVIQZLaG/GP0OnqZJ4mg8c8MZQTbSht
      3+KqgmpeyJ6N5FlK/+SfZ7w5/DK/22vjZ8u0LPNJxDUWFG8/CpWrENyDVHdsBaAImNN0Gekn
      tpGmzGdjIpOgJZeqvgOovcNogBuyK+krrAKlimuMFbRNnkCQQRag2lrNfzTeSPzJSzBbizFa
      ykBKwF8RhGaPOFg3az0bqjfgiXp4rPUx1Ao1kUSEuow65uTOodvTzcHxg3S6O4FkCMQNTTfQ
      4+nh6ORRtEotF1dezNaBral2tUotKwpX8NCxh5iVPWtKJYumrKb/cX//GnwsBKDL3TWNypSR
      GQ+OTwvs8sa87BreleLIZ2bO5MKKC3mq4yl63D1ExShF5iIur7mcNSVreLz1cebnzidDl8HM
      rJm0OdvYPridm2bdhIzMkG8IZ8RJkbmIW+bewtGRPXx2/xNo3X/SWwOTrJ9sZ83VL3PZSxFk
      PriGz3uxp3OC3tAfacm4msdPWrBEq/lmWZC5nXdNOa9i4BBYiyGnnpL+3RBLQPhd47VCEnh8
      3l0Ip7ag2/Mg9fEw8QVXsctxnH5fPwpXH/nGfIgGYeMVoDWDLu0vGYIpmFN7BeHs2dhD9tQq
      n6ZNI0OXQUyK8frA6zjCDswaM2qFmjxjHlv6tnBd/XVcU3sNXe4u7ll8D6uKVjHgG0gl4CSk
      BHtG93DL3FtoyGogx5DDntE9zM6ezZUzrkxG9L6HHZJlGRk5FdbxUTBHHwsVyB62s6l707Tf
      zWozgXhg2u+X11yOVWtFIShYVriMFUUruLDyQlYXr2bn8E5mZc/CGXZyaOIQr/S9QigRYlHB
      IiaDkxjVRqozqvFEPWzs2Mj8vPnoVDpunnszne5ObF2bOWe4deoNZZF2r5rHx0sRpT8/PzYm
      CUiV5/BQSxRbUGIsZuDAuMxVwg7UwnvUKF0aWAoh+CdGS04k/3b1gVKNULoMdcfLqGMBBK0F
      hcbIrFiCORNdmAJ2mg4/iSp3JlhL4eSz4OiCjMrk9X8pjNl8RR7lyT8lE73Y/SLOiJNgPMiM
      9Bm0u9rxxXzIyETECJIsUWQuosfTw5a+LbQ6k6UYcw25zMiYwZqSNRydOIpCoWBR/qJkamha
      CdsGtlFgKqDF1kKPp4cB7wAL8hegU+mQZZmx4BhPtD/Bxo6NHBw/iE6lo8BY8DcPr/5YCIBV
      a2Xf6L4plKZGoeHeJffSYmuZ4hHN1GVy75J7CcQDbB3YyhtDb6BVaRn0DbKpexM6lY5j9mO8
      Pf42bc42lhQsYcA3wK7hXRyzH0sZneeXn09UjKJRJlmYl3tf5u3xt5mlzmC5fXpK5En1LF7x
      VfGX5odLssCE791dLKbQcnnuBGmh99xj+W0gxqH5CTDlgj4Dee51tKrq+XH8Kh70LmFnuAJz
      3EFJ5BSCvROUGtIQmOl3oixdgpA1A9KKYHAfmHJg7XdgrAVCztP06gNw1hc4mV2BLWzn0MQh
      TGoT3pgXtUJNKBE6bS6xJEssLVxKMB7k8prLaXe1s21gG28Ovsmgf5C3Rt8iEA8w6B/klnm3
      8PtTv8esNrO5bzO+mI+YFKPX04tVa2V2zmw6XB18eceX2TWyiwHfAB2uDrYNbEOtVDMre9bf
      VAg+FiqQLZQ0huoz63FFXJjVZr4292usKlpFoamQe/bfQ7+3nzk5c7h57s1k67M5bj+e8lBu
      6dvCsH+YqBglW5895cMQrY7WaaXFn2x/knm588g2ZPPHrj8Sk2Ipp85+QpAzE2zvqbSm1KJv
      +AyKcZEPNn+nY1FFBo5AFJs/KQTzcwQKFm1AFi/kSHs3rwcquFHW4rP5ac34AtURDzPSNBzd
      /ge+Mnkx9qgKiHCCDN5SXcz3jBEuT3Qj2DoIrb2PIVcQ/cheisf+gCIRgewZcPGDIAiw5h74
      4w0QD31oP2XAZspke3omb4+8QTQRZWXRSjxRD1pVMgbq6Y6nU2P1XnhjXlodrQmCiiwAACAA
      SURBVHS6O1EICoZ8QwAMB4YZDb5LxcbEGHtG9yBKIq6Ia4p6KyMz4BsgJsb42dGfMRYcm3KP
      mBTj0dZHWVKwhLrMur9wFM6Mj4UAvFP3piajBm/US4+nh05XJ8sLlxNOhBnxjxATY9Rm1KIU
      lDzQkkxoyTXkIskS5ZbyFCOSkBJcW3ctL3S/wLzceYwFxtgxtGPK/URZZP/YfqxaK2eXnk2B
      sYAdQzsY8Y+wrupSOOczsOU2GDmSVCVW3Ul5znIse/bhDJ6ecTod1EqBs+tyuXZhKc8dGWbc
      G8EVjHLFQTPn1BfQb1rE810jxPKzeG08H0dYxqgW+Ld8M4eEKPboVPsnkpD5Rfhc1uSM8kKg
      nl+/loknnoNCLmGm9Uq+U3acJmsMnroMQm6oOhvWfhfe+C5EP7gKhJRdyx3GOLbhHSTkBMuL
      lrO5b3Nqkv725G/PWFig1FxKiaWEieAEiwsWo1FoaHW2srRgKfawneP246lzZ2XNIteQiyvi
      osfTk4rkVSlUBONBtvZvTbF274c/5qfZ1vw3FYCPhQq0bWAbW/q34Iv6OOk4iT/mp8fdQ0JK
      8ELPCwz4BoBkfM/rg6/z1shbdLu7+enKn7KqeBUHxg6wtmwtkUSE1SWrOTp5lCH/EHcuuBOl
      QpmqpvAOjCojGqWGOdE4N4z1sXD8FJdUXMiQ3sS2oe2cbyzDdHIThN3JFXXZrRj0elrHfHRP
      TrdJzoTaPAtfXlVFgVVPbZ6F+7d30TbmY9wXY1+vk4bCNK5bXMoLJ+yMeGPIQEyEE3aR8aBM
      LDG9CkVQ1uEsv5j/N5hHMKFAkkFEwURExRvBCtbyNlb7EZAlcPYwOvsWnosswBcIUizYUEwJ
      ixBArQeNCcGQQW0oQI4o0qmQ8MuJKauwL+bjqtqr6HH3TKk/pFVq0al0nLSfRBAEEnKC447j
      XFd/HYsLFhNJRFAKShSCgosrL6bT3ckrfa/Q4+nBrDFTm1GLSqHigvILeGvkLdqcbYQSodNm
      tQEsyl80pcTjX4u/iwCE4iG29G/h0ZOPsmd0DyftJxnwDZChyyAuxYlLcfJN+ZSnlaNVapkI
      TqAUlFxZcyXNtmaiYjTpJQ5N8vtTv2ciNEG+MR9/3E+ro5X6rHrcETdmTTIe3RfzMeJPBm/p
      VXpWl6ymQoTPHv4Dmsl2BPcAqp4dKDMr0eQ2sObQU6icPclJ5B4AQwYKQaBIGmfHqIpQ/MMN
      Aa1KwTcuqKWpKA1BENjf62DjwaEp5yQkmdvW1vDInj4i8feUSpFkVAoFMXG6AGhUCk7ZQiRO
      Y4wHYyKEHKwimS4ZUJi5rH0lr4waeCU2l5IFF1PXeBbk1ELpUihZBOMnIOpFCEySHfbR6HNw
      maRnJLeWY4F37RSVoErVOM3UZ1JgLGBu7ly+sfAbbOnbQjARJC7FWVW0CpPGxLB/mE5XJ33e
      PtZXr8cWsnHzvJt5+MTDU1b9irQKOl2djAZGubr2am5ovIHj9uOnVbV0Sh3X1F6DUW1MXf/X
      MkP/6ypQTIzxs+af8VzXcylXv1qhZl3pOm5supHbdt3GrKxZhMUwT7Q9gSRLVFgr+Naib9GQ
      1QACPN76OMWWYg5NHEq1+3Lvy1RZq7BqrRwcP8iIf4QfHf4RAgIFpgK+OuerqViZ23bdRp3X
      jyb6ntVcElntHGd17nwITE7tdNc2eOvHNCaifLPkTr472IAnfOYAM61KwZdWVnJ+Yz4y0DHm
      o+s0O4dJq0KlECjNNOIOvWunZJm0LKvOYlPzyDSjuyTDSPfkmb84c9y6FhoMMNlBd/4VDG9L
      FrQSZYFdNh3rm+bBwptAisPvLj2taqRzD3JNfzOH82vo9PahU+rINeZywnECAYFiczG/O/93
      6NV6jtuPU55WTjAeRCEokJFRCkqGfEMszF9Ip6uT35z4TcrfsjB/Yao8ZaGpkP1j+4mKUexh
      O0cnj6a+e/bNvd+cEr6uEBQUmAp4oOUBHGEHBcYCPj/z85xdevafVeHiTPhf3wHane385MhP
      pmxxkiwRk2KsLFrJM53PkG/K55jtGDEphiiLOMIOLBoL/pif35/6PY6IA61SO40inZExg9HA
      KOPBqR5Qf8xPp6uTGxv/DxXNv2dp124a9DkYPO8L6U0rIt7xGn5zJQQdqEgkWZnMKphsRZDi
      lNbNQyxdzrArTDQhTaFFVQqBAquexqI0avMsVGSb6LMH+dfHD7Oz04ZJq0qt6iatipU12Rzo
      c6JTK3EGo8RFiSyTltvW1XD94nKcwRiDziAJUUajUrCgPINbz6nmlRPjZ2SjKnIsrL/8c3Tl
      nMcBt4XuyQCBaAK1UuAm815qT/44+UzOHnj7V3CGzC5T0EV7USMKQyY/WvEjGrIa2D64HRkZ
      k9qEP+6nyFzEbbtuwxfz8atzfsWB8QNk6ZNVJxSCglZHK/aIHRmZ+sx64lKcirQKCkwFpGvT
      0aq0jAXGUsJRnlZOMBGkMauR5YXLCSVCqBQqytLKaMhqoNXRykRoglAixGRokrfH36Yxq5Ei
      c9GfM/VOi/8VAYiKUSZDkxhVRlrsLbzW/9q0c8KJMM6IE0/UQ4GpgD7vVA7bG/OypX8LaoUa
      IJkA7u2dck5CTKSysk7XB2HkMMuPPE16NIAh5IGM8hRNGNXn8nT+XdxtW8lvAst5PraYiYwF
      VG74Dv+3WcOQqoynoss5oW7i0RY/giBw69oa5pZYESUZnVrJ7efOINOk4aVjY+zushNNSGSa
      NDx3dIS4KHNhUz53nV/H4spMjFolzx8dpWXYQ9ekn/p8C9+9pIEbV1awqCKTF4+NYvNFmFOc
      jiMQ5cdXzOLyuUW4Q3GOD3vwhE6/A30uswuvIo1HD47z+P4B7r14JkuqMlEpFXTHsiCzmupD
      dyP0vQmxMzv1BGRGimZTU34Oq4tXU6Y0MmusjcV+D7U5TbxoP8TRyWZ0Kh0LCxYyGZxkMjSJ
      O+Km39fPtbXXEpfiDPuHsWgsSLJEj6cHT9TDqH806fz0dGHWmJmZNZO5uXOpTq/m/qP3Y1Ab
      WFu6lnRdOrNzZnP9zOvZP7afU65T08cUgTUla874HB+G/xUV6OmOp3mi7Qk+P/PzeKNeNErN
      NCNHp9Sxd3QvcSlZz7PAVMBoIEmhGdVGLqq8iJbJpNNkccFiej29qcJXAgINWQ1ExEgq3Ph0
      6A3bQKFKhgooVIACFtxIQpfJt/vq+cNhJaAGJGxk89BENpv/MILNn0NJZhmDiRClTgOReABR
      ilOeZSTLpOGhXb1EExIvHR+jKF3PO5vCqYmkqrKqJodIQqSpyEp5lpHqXBM/2daZ2g1koM8R
      pNCqo3XUS/dkgJ++3oUrGKPAqsMdSt7rjk0nODLg5py6XNzB2DQ1rDhDjy1zPj94ppsLm/L5
      7MJSGgvTODXhY3v7JLIMu5QlFC67l7nZAmy+lTPtAAgKNhSuQltxEYpYAF7+Oku7XwdkJOcY
      ibrVHFZosIfsHLcdp9XZSkJKMD93PkqFkvuP3o9enQyp9seS6aLnlZ3HeHA86dcRkuM2I30G
      31n6HR5vfZx9o/tYXrScusw6PvvqZ1OLYEVaxRm5//dT3H8pPtIdwBfzsbV/K6OBUcaCY0yG
      Jul2d9OY3cigdzDFvStQsLpkNdn6bDxRD5dWXcqG6g2M+Eeoy6ijMbuRzX2bmZszFxmZHk8P
      g/5BVIKKh9c9zBcbv0iLrSVZxOkM1QoArBnVpJeuQLAWk774ZnB0Qt3F7AqW8IMjp58KvkiC
      axYU88tr59I25mPCG2FGrhmrXs1V80vomvSz+URS5QpGRe44bwYd4z4yTRo+t6iUl46NYdGr
      aR50s61tkj8cGkaS4eiQm7j47h0FAVoG3fx23wCvnRxnRp6ZkgwDWSYtk94I3bYAkiRj90f5
      4rJybj6nmpgoIcuQblSjEMCkVSMr1ZxTn0ttnplnj4zw4rFRhlwhRl1hEECUYVFFFrWWCJJr
      ACFoO/0n/IrOQu3sRTj4a7B1QOeryYUDEBJRaqwVHEzPo9PdiUFtoMhchFFtZDw4jjPi5Kzc
      s0hICeoz6im2FGPWmMk35rNzeCeuiItzy85lScESTrlOMeIf4fnu55kMTWJQGejx9NDqeNcb
      7466CcQC08q5CwhsqN7wV7FCH5kAhOIhnut6jv8++t94o14C8QBjgTE0Sg0XVl7IvNx5iLJI
      pbUSg9rAwYmDLC9anmRzYn5+c/w3jAXH8Ea9VKdX4wg76Pf20+vtZWnhUkb8I8zKmcV1dddh
      0piAZEjF6QrbvoPzys/jafsh0iSYFReT8Tbd2/iNfyknnWdmEwRgTV0OL7SMYtSqmPBG6HUE
      2XnKxnWLyzjQ50StVJBmUPPysTGyTDp+fvUcSjINuIIx9vU4Uv6DhCTTMe6jOMOAM/CuT6E4
      3YA3EscfSSDJ8H+WV3BeQx4PvNFNXJQZdIZYXZtDbpqOZVXZ6NVKjgy4WFCeVG+ODnlwBWP0
      O4JY9WqGXCFOjngJRBNkmbUoBQhEE+jUCtIUERK2Tn4eXMtS8Qg66X2qkMYExmwYPw6+EXD1
      Jif/e6prH1Ek+Gmwk4iYLBdfZiljQf4C9o3tIypGkWWZfFM+Y8ExSi2lqBSqVFl5s8ZMtiGb
      YDxIui6dTH0mJ+wnkJHJ0mcx4h+ZFtxo0VhoyE6mY8rIKAQF8/Pms6FmAzExlsphhr8sZugj
      E4Cft/ych44/xIz0GZxyn0qVz/PFfOwd3cu60nXcseAOqtKqUCqU1KbX8tboWwz5h2h3tqdi
      6CNihFAixINrHkxSm1oz66vXs2tkF6F4iIUFC9k5vJOHjj1EY3Yj4XgYd9Q9rT/5xnz+66zb
      uSyuYu54R5Lm1JpBlngusZxez5k/FiHLsPHgEH2OILGEhDMYQ5YhHBdpHfXRZw9y34Ymnnp7
      iGBUZMwTxhOKsavLjkmr4sSol+gUTl/g2xfNxOaP4I8ksOhUGLUq0g0aInGR2nwLGUYNg64Q
      RwfffZZxT4QTI16ah5K7yd4eJ/t7nfTag0jvsYp94TiLKzM5NuxBEOD6JWXct6GJY8MeBpwh
      2j1KotmzGI2bkGovZCysIsugRK/VQNNVSaN/aD9YyyDsgvpLIb0EHH/KRjPl8ErFAo6E3yUb
      ZGQuqbqEN4beQJIlMnQZOCNOJkOT9Hv7aXW2MhIY4fzy8/nesu/xzKln6HZ3s7xwOcF4kPl5
      8ym3lHPTrJs4ZjuWCpV+B1XWKn559i9pym5CpVAlBS9kZ1PXJp7reo4tfVsY8g9RllaGRWP5
      s4XgIxGAqBhl0D+ISZ0sA/L+3FEZmS53Fxqlhjv23MG+sX0A3L34brxRLx2ujinXCAgE40Ge
      7XqWieAEhyYP4Qg78Mf9dLm6mAhNoFfpiYpRCk2F+ON+wolwaqVYnlbNT8o2kHtyE4b+PSgl
      mc70FZzIuQRhyVeZiKo5PDBdaN6BTq3EE0o6qmRkVtRk4whEKcsyUpxuYF5pOhqVgt1d78Yy
      NRWlYQ9EGXSG0GuUON6z2lflmLj7wnokWaYu30K+Vc/OTjuT/giXzSlkSWUWv92X/Pj12ro8
      euwBzqnL5bI5BfQ7glw8u4BBZwh7IGlHpelVU/wI5VkG7tvQxOKqLCLxJLO0qCKTh3b34gnF
      kWUoSjcw7AqxpTvEq4FqdunWsFLfT1pGVlLdWfEfgAQTxyG3Adz9yV1h5Z2w5lsYihbycu/L
      KQbn7JKzWVu6lj5vH1XWKvq8fUyEJigwFRCX4oTiIRAgTZPGSz0vUWwuZnXJat4cepNDE4dS
      TM6s7FnMzJ7JjsEdqba1Si13L7qbSmslB8cP8mzns9jDdkKJEHEpTkyK4Y15Oek4ybaBbZSl
      lVFqKf2zhOAjEYDdI7u5d/+96FS6MxqlETFCn7cPZyTJwthDds4uOZtgPJgqFfgO5ubOpchc
      xFHbURSCglnZsxjyJ51KOpWOVkcrZ+WdxRtDb9Dp7iQhJXhg/jf5vNvFl3IWc3kwQtqBhyCn
      nsBIG1+Lf53/21PBiz0iGw+PoVEpsPmjJMTpVoAA3H/1bGIJiYk/sTLfvmgm587MY8wTZkf7
      JDqNkueOjLCmLodgNEG6XkNtvgWbP0YsIfH9yxoIRBKE4yIJSaY614ROreQ/njvBgT4nGUYN
      A84QggAqpYJjwx4umV2ASauiecjNmDtCcbqe3x0YpLHYyp3n1fLskWF0agWfX1zGTasqaRvz
      EYqJWPVqavIsNBWmYdGreWRPH0cG3Qw6g2QYNdh8EUozjYRiIv2Od1UfZ0iEvAZWup5DyJ0J
      iVgyHso3Blk1EHKAPgOKF8C2b9IcmaRF9LGmeA1X1FzB4YnDbOzYSKmlFGfEiSiLZOmzksF0
      US/1mfWsLl5NriGXN4bfIBAPoFFquK7+OgQEXux5kQ5XBz3uHq6uvTpZ8CweYk3JGu5edDdz
      cuawuX8z9x26b8rceD9CiRAHxg4wO2c2eaa8D/xIOXwEAhATY3S6Oml3tbMwf+GUDKH3wqgy
      0pTdRL83udKZNCZqM2rp8fTgjXmptFYSE2PUZ9Zz54I7GfQNMh4cZ331er658JuclXsWPZ4e
      Ck2F1GXUERWjKVo0ISe4qG07c4daMA4dRDBkJLf1vCb+y7OWTWPpyH96MZIMg84QC8szCEQS
      U1ZStVLg9vNqufKsYi5ozGdxRSaP7O2nY9zHoX4XhwZc1BekYdGpUSkFss1a1s8pos8RZFvb
      JIsrM6nONfPmKRvXLCjBqFVxoNfJoCvEgT4nRq2KNJ2auCTTWJjGnOJ0DvQ5mfRFaRvzUZiu
      p88exBeO/8n2CCc9wRM+hl0hCqx6Oif9lGQY0KmVfHF5OXFRZsvJcQ70JdWjxZVZVGYbaRny
      YPNHqMu38MDVc3ixZXRaXJNVFaMp0cr/ky7hl8NlPBtfygnDYqyljeSlmxHkBPgnYPwE4cA4
      1rCPLEM2B4JDRMUoNRk1LCtclsqvnpU9C1vIhl6d3J2/v+z7qbpGecY8hnxDrC5ejYzM/rH9
      f3rnat4cfjP5ccGIA71Kz4aaDQRiAb6171tTCvWeCRExwlhgjHVl61J2wZnwNxWAuBTnwWMP
      8mDLg3hjXmxBG0pBedq4jjUla/jGgm8QToSxaq2sKFpBm6MNURZJSAnm5MwhLsexhWw4wg42
      ntqIN+bFFXFRmVaJVWdl68DWVEWELH0WzrCTqBgl35jPDaIeo/9Pu4+gSOqyYoxbh5YSOU1d
      pyyTlqe+uAiLPskMF6UbuLApn39ZUoZerSQclxhyhRj3RqjONbO1bYJAVGTMG6ahMI1BZ4gj
      g2729TgozzIiSjLr6nMZdIU4PuzlleNjHBl8l/mJJiQWV2biCsYIRhPcsLyCxZWZvNA8iijJ
      KBUCSoVAXb6FwnQ9I+4wVbkmInERfziBUqlgdrGVowNuvOE4W06Oo1YqUAoCrmCMuaXpjHoi
      7Dpl4+SoF4teTZpeTTgmcfm8ItrGfSma9h0YDUZ+5ZzDAaeRkbCa0aCCEwELLwxoCKvMLDRO
      oCxbArYOcifamRfwMmusHYPOwtPBvmShYUMW44FxSi2lKBVKBn2DlFvKGfINsXtkNzuHduKJ
      eqhMr6TD1cGQb4hh/zBlljLKLGUUm4vZP7Yf+U//xgJjyZpI/kFe7n35Q79W8w7sYTtLC5Z+
      aGnGv0oARElkwDtAu7MdSZZwRVz84OAPCCaCyMgE4gFmZMzAorWkJFdAYFH+Iu5ZfA9apZat
      A1sxaUwcnjhMs62Z0cAo5WnldLg6iIpRcvQ5jAZGU7kCwVgQV8TFaGCUcCJMj6eHUkspmfpM
      ABbnL+aWrIVUCBoEjRHyZiEvuolen4JdiUa2OrJOm9Ri1aupzjXzQssobWM+Rt1hjo142No6
      gSjBvl4H39vcTlmWkRyLlvYxP9GEiEal5Or5JRzodRKMiUjIfPOCOlbWZPNfr54iHBcxaVWY
      9WoaC9MYcAaRZGgsTOPsulz29TqwGtTs6Jhka+sEWSYt2WYdrmAMRyDKqXE/I+4QaQY1nnCc
      YVcYi16NzRdlwhtBBuKiRIFVTyCSYNQTZm5pOpO+KMeGPUhycpdzBWPMyDOTY9Hxdp+TDXML
      6XcG8YTiaNVKcsxa+lxR4vJ0lUGUodmlxWTNZN7EczB8IHVMQKbEM85k9Rq0xmzK08pZnL+Y
      V/tfpc/Th1ljRqlQkmvMZWXxSoxqI5IscWTyCCuKVtDn7WM0MIpCUPDDFT/EHXFP+4TTovxF
      tDvbaXO2cWXNlak6Su6ImwxdBueWnYs9bOfcsnOTHxnRWfFEPdSk19CY/cFfuPwfO8JESeSp
      jqd49OSjBOIBzBoza0rWpOp1vgOLxsKvz/k1zbZmTthPcGDsAN6ol2/t+1byKyiuTswac4q/
      j4kxrFprquaMVWulMasRlaAiISeotFayvno99+6/lyx9FtFEhFjMz3hwnHAsQGbQRUKdTVil
      waA2gFJFPOjh68OraPdq0JzhiUMxkVueOUYw+p7tQYRee5Dvv9pBVbaJxiIrw64Q29snmV+W
      jlGrYnennR9vPcV5jXm0jnqpL0hjeVU2W9sm8Ibj/H/a3js+jvrO/3/O9ippd9V7l2XZlgvG
      DQM2YIrBhJbkTAghnYTkkssldwlJSL3cpfwSSC4hDS6XwwktlFBMMQY33G1Zvfey2t5ny8x8
      /xh5sSzZEB6P3/sfP6xdy6PVvD/zLq9iMWpZVppLrkXPy+0z3L2hGqtRx96eWfb3eVhf66Jv
      JkJprpm2iRDWfB0Oi56+c/qRtKQwExJpLLIjywpTwQTxlERobhE2G0kiAAV2I1c0FbC8LJeB
      2YXKbb5YitI8M+2TIUZ9cXJMev6/D7VSkmvma0+1XfRslRX43UgRt1Y7yD/vNa2URgiM0JsK
      kGfM47XR17IH1lRsimg6Sp4xD6fJyTP9zxDPxLmt4Tb2TexjJjaDXqOnxKZ6syWlJDa9LQtz
      yTfnE8/EsweoWW8mno7jNDq5vPxyrHorBZYCrq2+FoPGwPU119Pj7yGair6nJdn7ToDB0CC/
      O/O7LEPIL/rZPbw7S48DFa23oWQDFr2FJkcTPzv+s2zND/D21NtZ2e39k/t5ovcJWvJbSGaS
      2bIpmFSFqi4puiTbOD8z8AwNjgZKbCV8UpvPRvcAqZU76HZHEHo7sdi7QTurUguH3kLbv4dG
      8/cZihfxL9c08vixCQY97+CIinNNeCJJEunF6S6SrDDgiXL/2mY6pkJMhRI0FNmJiGkUIJbK
      4I0k8URSHOz38vczUyRSEpsbC7CbdBwe9LGtpYjVlXlYDFq6pkK0T6oJ31xipzrfis2owxtN
      cUm1g+dOTy24hmRGZjIYJ5mWiacWXqeCmggH+r1UOy0YtAuf5KmMzJ7uWWKpDLeuLmfYE2U6
      KLK0JOc9wby90RSn05Vcff4LOjMfXfMlhiNj5BYu5e+Df5/38sdaPsaZ6SM81/UY7sgEKRSa
      nc0ExABmnRmrwcrR6aPsHdublarcVLoJv+gnlAoxFBzKytzPxmfZO7YXvVbPh5s+TCgZQito
      iaai6DQ6IqmI6oCj7cZhcrzrz/S+E2A0NDqPqgiqhOGdzXfiF/20e9s5Mn2E3575LaPhUWRF
      nnfzgzpSPEtdPIsBsuqtCAgYtUaSUpJcQy6KlGLA28mK4kt4yd9DMpMk35xPLBVji96Jxj3G
      L97w8lxkCTGpHvtshp3WY/xzURsmKYlWTnNNdYTXgsVMBBLctb6Sn76qkvD/+aoG+twRnjxx
      Ya1LUJPgjweHKcsz852bWnhoTz8Oq4GrlhSSlmT293uzEOXvPt+ZvfnjyQy+WIpwIsOH1lby
      +V0nybcZUFAnTDMhkZ7pCFqNwA8+sIzlZbk8fXJxQauImJm3PV4spkMiBwd9NBXbCYlphjwx
      NAK0lOZQnGtmd4faFx3o95CRFfb1eWgqtr/Hyhrc+RtAPgTjRwEFtAZY8UGq3/wJ1b5BlPK1
      3FR+Kf83/hqyItOoy+GWqT52jvYiJCOMaBSOFdbx5/Y/0BHsR1Ik1havJZaOveMzpmRIZBIE
      xAAz8Rmejz7PlootaARNFkcmSuI8rdfz46z5yLvF+06AMnsZJp1pXhJY9BZW5K+g0dnIz47/
      jDfH3yRBgif6nshiuM8PSZH4+YmfMxYZy4rKbqnYwraqbTgEPVuCs6zoP0YyEcDnczNsK6Wq
      eA25o4cZ1Vp5Nb+ESPnX2dVbnsXghDI6/hDdSGN1JfVFTizOEnotG4gl3bzcPkM8nSGWVE/R
      3pkIA573RnIJxlPYjTp++mov+TYjigKnx4NsqHPNw+eLGZm11U7+dGiEcoeZb25vZnfHDN9/
      oYvb15Qz5Ili1mtprcjj+EgAhTQZWeHQkI/tK0oozzMz6l846nuvhHxfNEVxrolxXxy7UccP
      b13OpjoXx0YCHB7yEU9KXNFUyI3LS/jS46f51nMd7/5N58Jl0ULpaihero5HKy6F9qdU/jEg
      DL7BlxuvZf3Wm/FPn+CKI38mr/932X+/FGj2T7G8Zh1f1OiJzfUc5ze3oWQIq8EKcdBqtCr+
      KzR40U3/ubGqcBWNjsZ3fd/7ToBGRyN3Nt/Jn7v+TDKTxKQzcdfSu6jLqwNUheKzcdZ4InYB
      SRGr3qoqh81JIb40/BL+yCSPU0p+/x5QZAyAfeo0X89vBEsTnH6GmaKlpLV6/t3/ac6/N9KS
      wu9GSxgI34F11sCfPl7PpKinsdDGf+1+B1U44ostWlJcKMwGLUOeGOUOS3ZSs7khn5mwyPG5
      Zdol1Q50GoHJYAIxLXH10iJ63REiYoY8s57iXDPlDgt6rUCVy8JMWN16h+JpHj82zr1b6vj+
      C13ZJBWA1VUOBmaj2br/YuGLJXm5fRoxIyNmZAxaDRaDjiubCvj1nav5wQvdnBgNkGPSMe6P
      o9dqKM4xZa/jQpFnUFjZ9WPwHQFbMXxmH9iLoPccdK8goDPa2VyyDo78tQTTYwAAIABJREFU
      CbwL5dUFOc2q4SM8sPaf2CVEuaPxDnp8PfOYZtfVXMe6knU83aeagf+x449sr9nOrp5d7+pP
      4DQ5uW/VfZh0C109z4/3PQUSEKjJrSEpJUnKSbZVb2Nn886saO0S5xLGImMExAA319/MEucS
      znjPLLwAQcuqwlUUWgoRMyqaM5QM8aOCy2hufxbhfHf3uA8EAaX+GqxaA/bhgzxv/gCjsYXz
      3ooCB8FEBp1WQ1qW6ZuJsKHOxVRIxBNJYjPpuG11Od5okonAxT9UUDEm/mhqrh5PMBFIIAgC
      d66r4ubWUmYjInetr+YbNzSTkRXiSYmMLPO3k5M0FtnZ0VrK/gEv/bMR1lY7ODToIxBP88Wt
      DVS5LLzcPsObc9vkm1aUUZNvxaDT8K/XNnHvlXU8dWKCaPLi2vyg9jSNRTlM+OM4LHp0Wg3/
      ubuHvT2zGLRa/n5miumQSIHNyPYVpTitBjbWuzg2fPEZ+yc2VnCNfBAhMKLCSKo3Q26FShv1
      D6vk+4ZtsOFzEHHD69+FC9ysgiIjZUQeEyK0+zq5peEW9Bo9Vr0Vi95Cvjmfl4df5ujMUfWA
      1KimGzW5NbR52i5ImSyyFPG9jd9jbfHa/383wUOhIb6090vsHd+LN+GlzdPGsZljrC1eS44x
      hwOTB3hj/A18oo8efw+ehIeMnJln/aMRNFxWehlvjL/BeGQ8q9QmKzI3+2epDC+O7VcUhUnX
      ev4rvoNH09eQtpYyHUrMe4gadRq+fdNSvnptE6V5Jn6xp5+GQhu/2z/MqkoHlzcW8LXrlnBs
      xE9YTDMZSLxrHSzJygIqYkqSOT4SYCIQ56WOGT66oZqXO6bpd0cxG1TO7rA3xoryPPQ6DW/2
      ekikJKZDIutqXQx6ooz7E0iKwpg/jqyo0IviPBPukMixkQAf3VBFnsVAx2SIIe+7C3OtrXZS
      4bCgADsvreThNwcJxNOM+eOMeGM4LHpkRWFHaxm7O2fY1+9l0BPlptZSuqYWJ8/vaC1lwJOg
      y9hKY/NKxPKNWDv/AjWXQyYJni5IRtUnQk45iAE49X/zAHTnh8Nexv78csZi09gMNo67j7PU
      tZSZ+Awn3ScZj45nHX0e3PIge8b2kGvM5aMtH0VWZCKpCLIio9PoKLYUY9KZWOJcgoy6zCyz
      v7sfwftKgLSc5tsHv82p2VPzvu5JeFQfXFnimwe/iTvuJiNnsiA4BYVNpZtYW7yWjJzBoDVw
      efnlJKUkTpOTDzV9iE5fJ82uZj5hrMDgXrw2Teid3Ovfye6hFOMxLVPBBNX5VrSCQEqSybca
      2LKkkOJcM95oSl0QaQTumhtBPnNqkpNjQfrdUbY2F5JISwiCgDu8+KkCYDFoF4VKgIqyvKm1
      lOJcM7lmPT96qQdZVnizz4PTaqC2wEo4oWL6e2cipCSZPIuetokQ4UQGTzTJiC9OY5GdS2uc
      HB8JcGzYj1Gv4dJqJz/e3ctfj41z39YG3uhxL8oHPhsOix6jTssrnTO4w0naJ0OI5wDxzHot
      v/voJRwb9iOmZc5MBElmZMS0xD2bamguySEjKeSY9TisBjbUurh/ezM3ryzjubYpIlj4UZuZ
      XWNObmzOQXvmr+hP/hGh50WITMFMh7p0jHlg5kwWQr3o7zGvkpPFjWi0eo7OHEWURMbCY9zW
      cBtVuVUMBAeyIlt/6fkLh6YPsXd8L7Iic//6+9EIGvr8faTkFEatEYteNTXfM7aHE+4T3Fx/
      MxORCdJSOluZnB/vKwE8cQ+/PPXLRR9D3oRXNZhbZAZ7Fs99/7r7eWHoBSaiEwyFhjBoDAwG
      B7N7hNHwKAZZYrlvDGER7t9IwRYeci+fNxGpzbfyh7svwWUzMBFIcHIsyMsd07zUPs2rXW4i
      YhqLQcvKSge729VJiC+a4thIgGMjARQFmktycIeTC54EdQVWPr+lngMD3gW9BoBGEPjqtibe
      6Jnl0YPDfGhtBTe1lpKSZArsJl7vcjMZFCnNNbGqykG1y4oCjPnmN7piWqbcYc7yh+1mPVua
      Cjkw6EUrCNy6qgyDTsPAbHTRJMgx6fjWjS0k0hk6507y9bUuZsPJ7PsrXRbaJkL442kK7UZq
      8m3MRkSWl+dxZiLEs6cnSaZldq6rpH82yjduaObUWJBvP9eBJ5JEoxGYDSfRaTUM6+t5xl/F
      B8K70Jxb6qRiIGhBZ4ToQnK7GgJP5Nh5NNJLIBlAr9WTltOYdCa6fF2c8Z7hkqJL+Le1/4bL
      4spCJUAdhcbSMX7b9ltCqVD2KRFIBii1lWLRWSixlfC/Xf/L79t/z66eXUxFp9hQumGBBPv7
      SoBIKsLjfY8vWHqBWp7EMrEF5IWzkcgkuLz8cryil9HwKE2OJtJyGm/Ci06j462Jt1RLUSXF
      dudyrIFR5lFV8hvJbPsRz/Qm59XDLaW5jAfi/PHAMDPh+cA2RVFHiMdHA/S7o9hMOjKSzCXV
      TgY9UWRFbZp/tXM1m+rzMeu1pDISlU4Ln7uynn/Z1kjPTIQTo4FFlBqU7Bb5tS43wUSaUV+c
      F9qm8UST3LOphjMTQdKSQlW+hb+dmGTIGyUtKfOXbkBGlim0m0ikZUx6LUuK7Tx1YoJ/2dbI
      0pIcvv18Bx2TYXa0llKYYySWktBqBBwWPZfVF/DdHS1ctaSQFeV59LkjTAQTmPRaJFlBkhUu
      a8inrsDGkCdKlcvKidEA7nCSW1eX889XNfL7/UPEUxKJtESOSc94IIFGEPj1m4P442nEtIw3
      mqK1PJd/vbaJ3pkIl9e7WBV8BSFxTv9gLwGjDS79NIzsh8wizXXVJl6oWU17eBCD1sC3Nnwr
      60O8d2wvKTmVvbGX5y+f5wWRa8ilxz+/aT4b4WSYn175U14ZeSVrbCIrMj3+HnKMOQvIM+8r
      AQxaA0emjzAVXbiwqbRXEk1Fs1DW8+OsPsymsk0cnT5KJB3hhpobEDMiGkFDMBkkJaeoyqvj
      lm2/wOSsA2T1Q7S4YPO/YGnait1ioG0ihDyHriy0G3nqxASpd5mT++MpCuxGHr3nUu7aUEWf
      O8pkMM7WJYXctaGaJcV2gokUz8yBxW5qLUWn0fDA851srHPhDovz9HrMeh02k46/t02h1Qjc
      s6laLTvSMmJa5rL6fNbWuDg9HmD78lL6ZqM0FNqpLbAy6Jlfzxt0GsJihlAiTYHdyJevaeTA
      gJdjw356ZiKE58gypXlmrllaRGgOJHfVkiLu21rPkhI7Go1A+1SI/317hFhSwhtNEkupKFRv
      NIUAOK0G3ur1Ek1miIgZumfCXL9MVbAY9kSpybdi1uvItxkR0zJd0/P7goykcHTEz+nxEJUF
      ebg1RTSI7eiUtCrP6KgBZ63KIyhdCdEZEEMqJsvsoLd8BX8sb2RMSXJdzXU0O5vZM7qHHfU7
      uLz8cvqCfYyERjBoDSiKQpunDZPOhE1voya3hjua7uCtibcWNes7i0LdP7l/0UP4prqb5v39
      fSWATqOjKqeKY+5j87QiiyxFrCpchTvuvuCoqsBcwM31N7N/Yj+7R3YTToWZic1g1pvxJXws
      K1jGqoJVTEYn2TN1gMaWD1EoSeqoLeGH/lcRFImlG7dzg6Wbpvo66kucPHF84oKb3PPDH1P7
      giubCkmkJLpnIliNuix5ZU/3LH3uKJKscGosyOPHxogkM3x0YzVXNhZwaNBHUY6Jm1pL+eb2
      pXRMhpgIJNBrNbhsBkx6Lf5YiqIcEyExw1t9HkKJDHaTjs7JMBvnUKIDs1FVywcwaAXMBh3B
      eBpZgWAiTZ87wrg/TjQpkWvWo9dqEAT1+l9sn2bYG2MmJHJyNMDBQR8rK9Xx68cePbpoP5OS
      1KQsyzMzeE4znZEVGgpViHZJnpmd66p4+K1BBjxRHFb9ggmZy2agsciON5oklZHZNWjA3riJ
      WUMZX4l+hEO0ssE6ia7rGVJJEd2GzyFc8nFAATGE5KxmtyAympjluxu/SzwT54neJ9BqtCQy
      CR7teBRJUQ061havpT/Yz9aKrdy78l7uaLqDfHM+zw0+d0FfiO212zk6fXSB1/KK/BVcU3XN
      vK+9rwSQFAlfwpdteg1aA9uqtrGtehuPdDxCqa2UcDK8YLmhFbTsqN/BH9r/QLe/GzEjIikS
      S11L+fmVP2cgNMCrI6+i0+joDfQyE5vBGxjkhrbn1RMEQJFRps+QWfERNOkoj7TF6XAnGJh9
      74ptAJPBBC2lOXz7uU6mQyKjvjg902EGZqN4oimC8RRajUCexYA3qpJh3GGR17rchBIZzAYd
      D/3TKgxagVc6ZyjNNVPpstA9HSGYSLGyIo/pkEg4kSYtKxh1GopyTJTkmpAVeO70JLFUhroC
      K1uWFPKR9dWEEuqk5mw0FtpYUpKDL5rkYxur+Y9bljMRSHBqPLhAFsUXTTHkiSJmJF5qv7Aw
      gJiWsJt0+GOpbD9jM2qZCCR4vm2K9skQsWSGq5cWoQAVTgtTQTHLaNNqBJxWA7GkWiqlMrLK
      M8DJ39wljEQE+kJaDK5qngw18+hYAbZQLw3JDoRDv4LoDDZ3N5tzGziam088k+A3bb9RyS1S
      mmAyOE/tY6lrKRtKNlBqL+WHR37IZGSS62uu5/Ts6UWdKstsZXxlzVdISIl5vGK7wZ71ODs3
      /uFFmCRL7OrZxcNtD887/Q9NHWJZ/rIs0dlpciIrchbkZtAauLH2Rj65/JNMRifp8fWwoXQD
      1bnVuEwuBATuXno3pdZSQBW1VVAoNuZBen4NGUvDt55u45RXS3NZHtOeCwtFXSi8kSRHhv3z
      lmBhMcNEMDF3SprwRlPk24zZk25VRR5PzUEmQokU7rBILJXBH0tT7jDzVp+H1vJctBqBE2MB
      wokMDoueRFpCTMsEYim+d/MyvvG39mwvMeKL85M7Wvn9viE8kSQGnYZURsao03DPZTWM++Ps
      6/Pwx4PDOG0GDg9dWO25bTz4np6CRTkmrlpSyPNtUwTiaa5uLuT1rnea1bbxIF/YWs8Tx8c5
      MRrAbtLxqc21jPpivD3km0ekCaKesiouSp2yaAWBtriLfaNeQE9E28iV+mexnVMWW6bOUFN+
      O6+PvZ5VgZuJzbC8YDnXVF3DWxNv4TQ5EQSBX7f9mlsbbqXYWkxVThVWvZUvr/ky/oN++gJ9
      2YP27ALMZXbx5TVfxmVy8ezAs7jMLr646ou0FrQu+Cz+4SfASfdJvnPoOwtEqRKZBG2eNoJi
      EL/oRxAEHtz6IFsrt1JmL6PN08ZwaJjZ+CxHZ45i0VvQa/R4E16e7n8aWZHZM7aHveN7GY+M
      s75kPXc03sFdKz+LcbYHPO8Ipg46NvH9ydX44hn0Gg2hROYf2uaejSsbCyiwGxn2xrCbdHxk
      fRWDnhiJtMSqSgdGvRaLQUcwniItyUwHRcQ5rR+HxcDuzhmmgyJLiu34Yik+sr6K03On85oq
      B6F4iq1LipgKicRTEjlmPetqXLza9c5+Q5pTetjd6cYbTXHvFXVc3phP51SYjKTQMRVSrykl
      EUtJjHhjF4REyIqCSa+7qGodwOpKB9+8cSkCAm/0zDLijZFr1me3zGuqHFS5LDx3egpZUQW/
      vrOjhde73Qv6lrMhpmUEQeCWVWV8bks9tQU29vbOIitQ79Rzm2sU3cxpzg40Oh2l/EkIk5El
      RElEQaHQUkiRtYgqexV9AVUzyKwzs7l8M0OhIaKpKAoKBeYCBoIDnPGeodhazLXV12bH6fsm
      9mHRW1BQ+J/O/2EiMkEopR7ClxRfgkFrmHfd//AT4LnB5y5ISYukIpRaS3GanNTn1aMVtKwu
      Ws3b02+TyCRIkODw9GEqcypZ5lqG3WDnmf5nqMuro8PXwQn3CYCsQNa/Xfpvqrv4yp2g0aqu
      h9FZyswKm4L9tBubqS2w4Y29O0tosbCadHz/5mWsrMjjqRPjlOSZ2L68hJ6ZMDqNgEWv5ciw
      L1tuuOckzu1GHdFkBnc4STiRZnNDAafGAxTmGJkNi3z8shr63BHu2VRDS2kOY/44S4rtXNtS
      TJnDzOpKByfHVNjEstJcTHpV2k8jqMjSx49Nk2fR47IZKMkzcXwkgEYjcNWSQvrdEZLRxWtf
      nVbDliUFPHrw4suyDbUuNIKAO6yWNmlJZnNDAbUFVppLckhJMg8818nKijx8sRS3rylnzB/n
      6LtsihMpCYNWw3UtxSQzMhExzamxINdVpImPR9Bf/jW0A69BSSvfjZ5mYE7353MrP8fesb34
      RB/JTJKn+58mkAwQz8S5tPhSdg/vZnvtdqLpKL3+Xr7wxhdIZBKk5TQGjYEfbPoBGo2G37f/
      nqSU5C89f8GkVcepoALnnu5/mpb8Fm5tuHX+Z3bRn2iROKv9fqE4S0J4rPsxPvXqp2hwNLCt
      alsW3XlV5VXc3XI3X3nzK0xFp/CJPmxpG/7E/A83mAzS4e1ADAxz9YvfQldxKVz9HfjTDnJ8
      A/w3bzO24cf8YDQXq0HLxd2CF4ZWI1CXb8Vs0KIoCl1TEf7v8ChDnhhWo44PXVLBIweHF5Ug
      HPTEKLQbybPoqXZZCYtpVlc6KLSbcFgMRJMZ9vZ4ENMyfz02zrA3Rm2+ld/tG2I8EOf7Ny/j
      5pWlmPRaHj82xgtnpsm3GbAZ9dTkW8kx6/jS1Y08/NYgxbkmHr1nLUadKpa7utIx7wlybiwp
      tvO5K+vpmgpz5AI3a12BleZSOzMhkZUVeWysc+GJJHmlc4aMrDAeSHDr6jJcNgMf21TNtS3F
      6DQa/vPl7osu4M7G6fEg0VSG4yMBXumcoXcmwhs9CnnmO7hWa+LeKj2uUAfLQx56TAICAiEx
      xHhknGg6SoW9gnAqTCwdY1n+MqKpKPFMnFOzpzjjOUOBuYCvrv0qvzjxC3yiD42god3bznRs
      mlxjLvF0nNWFqxeoD0qKRIe3Y0EC/MMl0IHJAwskCc+N2txa3hhTIRAZJcNsfBanyUldXh1D
      oSEGggMcnT7KYGiQIksRiUyCRkcjTpNznqanQaPn7qrr6B54iabyjRgG34KRfVnnQz0S09oy
      fjtewfLyPIYu8Gi+UFQ4LHz2yjrMei31RXasRh2Hh/z4YyniKQkxI10UH7Sq0sEf717LkWEf
      e7pnGfPHqc63Ek1meKN7lnU1Lr5+QzOvd6ulTUmuGa1GIJRI4w4nebF9mnAijUGnYSIQp9xp
      YdCjgt3EtMxsRERSFEpyzdy1oYrdHTN84S+n0QgCFQ4zs+dNecryzPzHLctpLLJzeWMB3dNh
      JvzvXL+AqkZRV2Bjd6eb17rc/H7/EOFEBkEgWzb5YymKc0wU2E0cGPCy68gYlzfmc2jQl+Uw
      XCxsRh16rYZvPdvBsDeOmJZJSTJhUeLUdJJTUi1b5UO0OKuIla3h6qqrebzvCfRaPZvLNjMV
      m+LozFHyTHnU5NZwYOpA1ppVUiQKLAU4jA7K7eWsKFiBWWfmib4nODx9mHg6zsrClXx17Vd5
      c+JNvAnvOT+/wLXV17KqcNW8631fU6A9Y3sW5WaatCZuqruJg5MH581ow6kwHd6OLBZoNjHL
      VZVXEUqGKLQWYlHg00Wb6PD3EJSS6LUGvp4ycfmBh1k1cQbDTDsUL4PVd0NgGCXuZUZXhuWG
      75MxOTHoNMyExOxI8d1CACqdFn795gCvdc0ST2VoLLIzGxEZ8sbQawW2NBVe9BdeV2Bj57pK
      Xp8bmQJUuSycHFOhBRaDlhyznlFfgoZCKx+/rIZQIs3OdVU83zZFLCUx5o9j0Gmoclm5uVWV
      Olk3t7mtK7Rx39YGzkyoOqCvdbkZ88dZWpLDwx9ZQ77NiEYQKM4xUV9o49bVZVzZWIBBp8Vq
      0LKhLp/JYIL6QhubG/LZua4SrUbg2dNT+GMp7lhTzpEhP2aDBoNOOw9l2lqeh1YDb/Z4mAqJ
      jAcSxJLSe8IhuawGDvR7CSUWh0BMhVJQfRk3xPaw1dHMqvE28rQmujQSvYF+rq68GoPWgFVv
      xW6wZ50kLToLD219iHJbOQ+deoiJyARfXP1FdnXvmrcQm4pOsaZoDWuK13B4+nBWX+qSoku4
      b9V9KkvwnPiHE6DKXkUgGaDH3zMvCfQaPXe33M2Hmz7M4enD2c5eQKDB0bBgaVaXV0cik2Cl
      b4IfDJymoutF/ing59qqq/jsys+x+tDvEc7iSOQMRD2qmUMiwMimH3NN5zb+dCbGwGyUPneU
      zY0FDHsu3CCeG1c3FzI4G8MXSzEdEoklM/zl6BhhMcOXr27kM1fUcdvqch4/Pk7iAkl16+oy
      LqlyMuSJ4o+l2NxYwKqKPMJiGofFQE2+jUcOjjARSDATEklmJF7qmKG+0EYqozAdErEatZTm
      mZFlhaPDfgw6DXt7ZqkvstE1GSaYSPHE8QkmAgmaiuysqnTwZq+HjskQ/3JNI5fWOinLs/Do
      wRH2dM/ijSZRFNh1dIxdR8bY2+shEEsxGUxweMhHSa6Zrukweq2GWEr9bH+5czXra1280TNL
      SpJpKc2hMMfEE8cnqCuwkmcx0DUdRhDUBZi4iGnH2RAEVUxg2HtxS6bZpI7bVxZh2vsAGncn
      S30TFNVdjb5wKSdnT2LRWQilQug0OtUnWkrhNDnJN+ezqWwTZ7xnWFGwguX5y3m6/+kFC7Gl
      rqUoioI34UWj0XBn8518/dKvk2vMXYAH+ocTQKvR0lrQikFrIC2ncZldtBa0ct+q+7i94XYs
      egvL85dz3H0cQRD4+LKPs3PJTvaM7clmo1Fr5J5l91Aqw6fbX0WfjCCgEqyd7m7MkRmE4Hm9
      hpwBjQYyIr7GD/FYl4ggCHzzxqW80jlDx2QYs16L3aS74ChQpxG4qbWU7+5ooW1OJU2vFbAY
      dHOJIHHL6nJaSnMJJdKU5pp5q292wbOuwmHm9FgQu1nHIwdH0GkEEimJJ49PMBUUKck14bQZ
      6J5WTyZJVrhmaRH3bKrh721TFNjV0zsQTzMVTDAbSSIpCrKsEEtKrK50UJRrxKDTUp1vQacR
      GPHFOTYSICJmGPHFeaF9mt+8OciJ0QCBOaXotCSrr52ZRjv3/TUClOSZiSYz5JjUZdrmxnxO
      jARwR5KsrnSwo7WUKxoLmAwmsBh06LUCJoM2m/wNhTZ+8eGVmPU6jo34LyjNvqnORVW+le7p
      i9sxKYrCLfq3yfOqQw9BkaituYqVJWs5MfIabkHiqqqrESWR4dAwX1r9JUbCI1kHmQp7BWOR
      MbZWbOXIzJF5SoAGjYHh8DB/H/o7U7GpbPXR4Gig3lG/8J646JWeF7F0jF+f/jXPDz6fZYI1
      OBr4YNMHWV+yPptdXb6uLHNHp9FxxnuGZlczGkGDmBERMyL7xvexPhJAn1xkhh9YjPUjoFzx
      b0yOD/PkgXaaixu5vKmY4hxTFpogyQq/+cgaXuty81q3G09YTRKrUcuyslxuX1PO2monx0f8
      9LgjfPXaJvrcEeJJibQkMxMS+d7fu4iK6jZWpxWwGLSkJQW7Sa1to8kMZQ4L4USan77ah1Gn
      ypOcS2NsmwhRW2DDYdETiKcpzjFRW2Dj9/uGyLPoOTToW4Drj4gqLGFrcyFfu66Jex49Rv/c
      cm9djZPffGQNX3vqDIeHfJj1WvKtRiYD6jLPatQxHUpwU2spZXlmDFoN915Zx49e7uH0WJD2
      iRAKKl0SYDYiUp1vZVOeGXdY5Inj47xwZpr9/WrNrJ2bONkM6vdtKLLz9MkJXjwzjcOiJ5WR
      CZ+jLWPQabi6uYhvbm/mr8cuPiQ5+35T83Uw9oy63bcWIAzuxXHwIX4mCLxWs5bHJg+QY8gl
      nArzvcPfQ8yIWPVWJEViNj5LOBkmkopw78p7+eWpX+KJe7DpbZTbyxeglEVJ5Ocnfs7G0o3z
      DBThH3gCiBmRL7zxBV4afinrDysrMp6Eh9fHXqc+r56a3BoATrhPsH9yP6BS2465jzEaHqXA
      UsDHl30cn+hjJj5Do7mQ5tHjC7W7Lv20Sq4416mlcClRQyFfbKvk2WkHM+EUJ8cCLCvLJRBP
      EZobR969sYrJQIJTYwGSksLS0hx+ensrH91YzduDPh54vpOu6TA1+TbsJj1/OzVBWFT3CJGk
      +mdGVpAUhbSkkJIUZEVhS1MhH7ykglc71Vo8EE8RS0lZPE34PLGhDXUuPnNFHXWFNopyjARi
      KY6PBEikpaxj5GIx5o8TTqTZP/BOA+eNJtm+vISrlhRl/7/Pb6knnspwy6oyfFG1zJEVhVc6
      3ZwcU/uGEyP+RUsWMS3jiyZZVpbL821THBn2M+x9x3ZJUcBhMZCRFTqnwrjDInt7ZvHH0sRT
      Ep+4rIZtLcVkJIVrW4q5a30V915ZR1TMIMm8K2R7bbWTD1+zEW3dlVC2BppugNOPIaQTaGSJ
      CkXgeZuNjZVXsr12O7uHd6uG2YJASkrhMrtYnr+cJ/ueZP/EfjRoaMlv4evrvs5kdDLrXn9u
      xNNxrq++PiufczbecwL8teevPNH3xKKvZeQMnb5Obqq9iZ5AD8dmjmHRWyi0FNLh7ch6wU5E
      Jtg7vpeAGEBGJqjVsknveMeVHVSGkd4CNVeoHl0RNziqQFHonZzlV6HLsh+urKiP020txdiM
      evb1eUikJf577yDes8ytgCohsrbayVeebGPcn2AqKHJZQz4TgThFOSb63REi78K06p+NEkyk
      EdMSkqxQ6bQQiKcRBLiioYBQIp2lMBbnmJAUmZlQkqPDfl7vnuX0RJDtK0ppn8PfXygUBWbC
      ImlJzkIVjDoNHZNh9vV7cFqNdE6H8MVSapIIcHI0gE6jwWE1YDXqENNqw3qxoYCsqNCOszIq
      Q97YvH5naWkOd2+swaDVsLIyj+PniPQmMzJjvjgFdlWp4eG3hjg9HuS/dvdyaNBH4Zyu0WJh
      N+n47o4WHFYjIV0+lKxEb8tD6Hg6C3fJFDZzqLCKqJTgQ00fYs/YHhKZBNtrt3Nj7Y28PvY6
      h6cP4xN9RFIRQqkQo+FRznjPYNQaF+UNm3QmdjbvJNeYO+/r76m8LiqLAAAgAElEQVQEkmSJ
      V0Zeueh7xiPj7B3fy+/bf89oeBSLzpLdyJ0bsXSMutw67ll2D3vH9/Kr6jy2WnNYm5LROmtg
      7adU44b2p1Sncymp/mmwYr30s5gOqSptZ0NBXd0vKckhEE8xOBtd0AMcGfLjjSSxGfW4SWLU
      aZBlJVtOXKyxOzdOjakQgRfOTLOpPp9tLcWM++MY9VrW17rod0dpKLKxvtbFA891EinOZOVG
      FAVe65pZ8KRYLLQagY9vquG5tkkMOi3JtMTpcZVf0VBop37Oeumr1zZRnGPizR418YPxND/9
      YCtGnYbPPXbyXf8f/9wQ4NVON9tXlPBq5wwRMUNxrglBEHjsyChmvZbewTCleWYiYpqW0lxK
      ck281efhptZSBj1RinKMvNnnQVFUfaWafCsfWFnKK53u7O9CAApzjLSW5/Hg6/0Me2MkMzJm
      vZaWUjs7a7/G5f6nkY1G/l6+lN7Zw+SKufzn0f/Ek/Bg1pu5o+kOnup9aoEF1tkYDA6SyCTQ
      a/QLgHAbSjZQZlvIEHtPT4C0nOaRjkcWdQk/N2rzajk1ewpREsnImQsiQk1aE6ORUfaM7aEj
      2MdeJUb95q9Rs/qTqiujtw88vWp9eDakNDmVraTLN9A5GURBoDrfytoqJ692udFrNAx51FM6
      cJ59kMtqoNcdIZZSmVuJtMSRYT+XVDvpc0fe04IH1Js4mZEJxtNq0y4I7OmZ5fR4kN6ZyJwa
      tKr8dv3yEj6yrooBT5SpoIhGUMkpI753N602G7R8ZVsj5Q4LH1pbwcsd01mohzea5IblJViM
      WjwRldAz4lP7MUlRSKQlyvLMvHaBZdn50VhkJyymuW9LAy2lOXROhRGAQCzNdEikbSLEbCRJ
      ucNCc0kO91xWzY0rSlAU+MXr/ZwYCyDJyjyexNVLi/jujhbW17qodllZUZ7HlU2FjPriHB3x
      MxlMEEtJJDMy0WSGYW+cFycsjJdei3HdSr7R9jM+UP8Bbm24lV+c/AUZOUNSSjIZneT47HHE
      xfgFc5HIJPhI80dU0kwmhkln4vKyy/nWhm9lfSTOjff0BNAJ6jhqMfTdudFa0IpNb+PZgWex
      G+xMR6fxit6FbxSY16hE01FeHHqRLRVb4JnPqje+vPBU1iWDfG6NQksqxsuxRtbVOHn8+DhL
      iu0cHPASSWZwWQ2U5JqyDd/Zk2dVpQNZUXjxzDRGvUadpnhj88Rw30sEYil+fedqHtzTlwXG
      nRtiWua1LjeTgQQ3LC8mx6RnbbWTT19eQ3W+lQMD3nfV9pFlhU/973G80RQ5Jh3FuaasvPr6
      WhcZWWYqmKCxyI72vAZKgAuObheLVEYmImbY1+/hudOT82DUVsM77osFNgNblxTy1Sfb+NTm
      WvZ0z2Zv+rCYYVVlHsm0igz9wtZ6THNPxfW1LmLJDB979Ch9F3G3lBSFv53xEJWc7FxyFzvq
      dmAz2Oad5kkpSTR1cdRvRs5Qbivn6qqreWXkFa6rvo4vrv7iAgzQ2XhPDHitRrsAR31+lNnK
      aHA0cEfjHSzPX063v5tIOrJAnlojaFhTtGaB51NWRuX6/4LG61TNmXMirbVwTL+GvwwZOSk0
      oygKP3utlxOjAQ4NeinONWE1qiwqh9VAjknHtqVFWAxajo0E+N2+QVZWOFCAb25fyk0rSrhx
      Rel7+fHnRSwlcWzEz5u9FwdfdE2H+cbf2jk9HsSk12A26IiKGVZXvrtaWaH9nRs+LGa4urmI
      /7xtOT+5fQU3rijht28NcWwkwO7OGRqL7ZTmmjDrtVQ5LXRNh9l1dAyj7t1/tVqNQK5Zz4Y6
      FxaDdgGHQFbgznWVbKxzIaZlbEYtTcV2AvE0uvMyrzjHRF2hlYiYzmKbQO3R/vz26EX9F86N
      17v8ZCItPNn3JHqNns+2fpZmZzNri9eyoXTDu8qdA/QF+vhrz19xx908N/jcosSt7GfwbiWQ
      oiik5BTVOdWcdJ9c1IXRqDWytngtD516iGcHnmUsPEYkHcGoNbKzeWcWP1TvqCeQDNDt66Y6
      p5rwnEetw+Rge+126nNr0CaCquyGnFabYI2OmKWUr4if5D/6K9jb6+XYaIi0rJBIqTKBAgL3
      b2/GbtKzf8DLZEC1ML1xRSknx1VF5mRGpncmjC+Wons6zOFhPzX5VjouoIJwoXBaDfRMh/HH
      3l2fJxBP8ZVtTbzSOcOf3x7liePjWA06khl5URNsUJGY37ihmZc7pklLCgathjyLYU4KPYpG
      o5puZ2T1tf39Hi6tdvG7j65hdZWDk6NB7CYddpM+a6BxoahwWBjwROmaCiOm5QW6QGaDFgU4
      OuzHpNfQ645yZNjP6fEgN64oZSYkIqYlCu0m2iaCFNhMfH5LPXUFNjRzI/FEWuLf/9b+nvSM
      QO3p0ikTS6vD/Pfp/+btqbdZXbSamdgMByYPYNKZLloCmXVmbm+8nUNTh0jLaXKNudzWcBs5
      xpxF33/RBEhkEjx85mG+9/b3+J/O/8GkNeE0OUlKSSRFQiNoWOJcwnc3fpd9k/sYDg0TSUZo
      cjZRbC1GzIhcVXkVfYE+ZGTqcuuIpCIkpST5lnwUFG5rvA2bwcb/df6JzaNtFL3+PYTRQ6qB
      XSoKzTv4bcHX+dPQ/PrNH0uxpNjO1c3qaPC1bjfhRBoQiMw1mhvr83GYDXiiSTY35COg1tAf
      vKSSltIcRv1xpkOJRYnuF4oql5XJYGIeLfJCkZFVb69zMUX+WIpPbK4hnEjPm5RoBLh2WTE/
      u6OVo3M3WZnDzA8+sIxnTk9ydNjPwQEv+TYjO1aWksqoBnkWg5aImMETSfIfL3Wr41wxQyoj
      47IaLnjjOa0GrmwqIJaSqHSa+ddrm2ifCGWvSQC2LS2iMMdIz3SE6nwryYyEJ6oS4j+9uZbV
      lQ7G/AlcNgNleWY2zLnQtFbkYdZrkRRVyPeXbywUx7pYRBIyBcU9HJs9hCiJ9AX6KLWVZiuR
      dm/7BWXSb6y9kU8s/wTltnIMWgMmnYmJ6ARV9qoFEyC4SA+QkTM8cOiBeai6SCqCTqPj51f+
      nEp7JRa9hSJLEYIgcNx9nFOzp9BqtCx1LeXU7ClkRebJ3icZDquaoG9NvMXX1n4Nk87EDw//
      kIyS4dTsKaZiU1xnKmV554sI52a3lIL2J3hVvhQWaBKro8l/v76ZvxwdIyMr+KIpVlXkcc3S
      Ik6PB/jVG6rB3PpaJze1lvLXo2N8fks9L56Z5uOX1XByLEhZnvk9NaZnY0drKT97beGc+ULh
      Pu9UVVC9CF784mYOD/nonAzTORWiONdMmcPMkWE/v903lN0VdE6FqXFZ+dTmWp45Pcnzp6dY
      OptDWExnsTn1hTYsBi0CAma9lq1LCpFkhTvXV/GrNwY4MODJ9jp6rcDysjzK5uxcv3x1A9ta
      ijk9HqTQbiSRlqgvsJFr0dM5GSIlKdy3tZ7jo346p0J84rIaVlXkkUhL3P9Me5aDrdcKlOWZ
      0WkE/vz2CEeH/dhNera1FL3nz+psZGSFcOKdPuasVqyYETHpTNxSfwvPDz4/X2MKDUvzl5KW
      0vz46I+5a+ldnPac5uXhlzk8fZjD04d57IbHFmCBLpgAnd7ORUefGTnDIx2P8Mi1j8yTmPj8
      ys/T7GrmJ8d+wsGpg9j0NhKZxAJyvN1gp9BSSIW9gtnELK0FrXjiHq7LGNAs9miTUpCKsFgC
      LBYGnQYNMBUQs83m4SE/I944M2GR+iI7yYzMkWEfHVMh7tlUw1PHx9/TeHLrksKsvdF7bZ6v
      aCzg5Y53KIpGnYYNtS70Wg2BWJq/nZrAqNPyZp+HiJjBYtBSX2DDF0ui0wo8uEc1phsPJMg1
      60lmVJJ6jvkdJTxJVvjL0TE21ru4ZVUZ//zX01zemM/enlnuXFfJmF8lvFQ6rdhNOj5xWQ0f
      +O+DlOaZ+czltRwY8PC1p84wFVQ//wc/vIqfvNLDwBzCdtfcwVGaZ+bwoI+JQIJYMjNPgCAt
      qfimBz+8ijv/cER98oREAvHF9wEXC0GAEruLsmQZ8XSclvwWDk8dZl3JOgothdj0NtYUrSGR
      SWDUGrHqrVxbfS27enbx4vCLAHT7u1VfsrmYik4REAPvPQF6Aj0XlDYZCA6QklLzEkCr0WLW
      mZmOTaMVtFxVdRVTsSkKLYXIikwgGaDB0UCHr4NTXadUrHc6yoqCFbw++jqZiwgobbMN0x6u
      WfD1XLOex4+NsbrKwZAnSlGOiY9uqOZXewcWQA22LCnk9HiAVztnkBSF2XCSf93WxEc3VFGT
      b+WHL3Zd9Ka+rD6f7StKuG/XKaxG7QXfd264rAYK7UZWVebhneMZX91chNWozvb7Z1Wlh5Jc
      HUU5JiJiFEGAbS1FVLgs2I06/npsHFBHsPdeUccv3+jHoNPgsBg4MxGitSKPPd3q5vXggJdy
      h4UV5bnoNRoe3NNPTb6VYW8Mo07DZCCBP57m5FiACqcFSZZ54PkOjg4HOLf1Gz5vKZZMS3RN
      hRj3J/DGUhTmmBYtGxVUVppyDlgox6RHzEiEL4AOXSyKcw1MJLpUdxhHA+uK17HUtZQyWxm/
      afsNMzH1QNFpdKwpXIPdYGeJcwlTkXea3fHIOB9s+iCjHaNk5AyXFl+KQWsgI2fm37cX6gGm
      olO8OvrqohdYYC6gwFzAT4//lCd6nyCSilBgKeCXp35JQAxQnVPNcfdx4uk445FxanNreWjr
      Q+gEHQ+3PUyOIYejM0cZDg/T5mmj0l4JGi3rvWMI8nkjPI2e2ms+w/F4ITOhd54Q+TYD7kiS
      rjlp8Uc+tpa7NlQRS2V4+sQE62pdTMxJDpY5zAx7Ywx740STqjK0qu0ZZ0V5Ht9/oYuSXDN1
      BTYiYnreprY238oXtjZw//ZmqlxWdHNE+SHv4uJUZ0MAbl5VyjOnJsm3GVUHFm+MnpkwL56Z
      5uCAj+dOT3FZvYv9/V78sRQ3LC/mysZCfrtviO7pCL3uCFuWFLK0NIev39DMpbVOJgIJXul0
      0+uOEE9lyEgySUkmLSlYjTr63BEMOi3hRJrb15Tjshroc0cosJv40W0ryLPoebljhlgqw+e2
      1OO0GnBY9Xzm8jr63VGubCrgd/sGqXRZMeo0xJISW5YU8mL7NGP+OLUFVlZWOHCHRaZCiSww
      TiOoOwWzXkdRrpGpoIjLqkq76DWaBdIqF4utywWmpf34k35cZhexdIz7193P472Pc9x9PPu+
      s5xzv+jn8PRhWgta6Qv0ISBwVeVVfOWSr7ClcgvRVJRufzdP9D5Bp6+T5fnLs5igRRMgJaUw
      aA3sHdu7gPt7NgGeHXyWscgYM/EZ3p56m2MzxzjtOQ2oLh7nKsOFkiGurLySHn8PftFPOBXO
      LslSUooiaxFtiRlqc6ooD7mzgriKRs8Lttv5fO8KRv1JFBQ21Ln44NoKJgKJrMmb2aDlE5tq
      +PuZaR7aMwAKOK16vLEUdqOe1opcTo8vxPaH5oRzV1c66JoOMxsRuXV1OZdWO/nkZTXIikIi
      JSFmZGpcVnrdEX7ySo9alxdYs2SP80MjgMOqyqM4bUYKc0zs7VH5saqhhkQgnqIox4jdpGfY
      GwUELq1xqpapPZ65XzC0lucy5otzeMiHQavhx6/0ZhNUQSWyLCvLxWHW44+lKc0zE09lsBq0
      tE+GOTUWRKvRUOE0MxMSOToSoLHIhkmn5emTE5weD7G5oYBDAz7ap0J4IkkqnBY+vrGGYyN+
      PNEkYlol6UuyOtXZ3+9lPJBgZUUeVU4LpXkm4imJ7ukIe3tnSaRkHrhpKb0zYQ70e1lZmbfo
      hn6xcOYkmbE8yPrS1Zh0JnwJH6IksqNuB7t6dmVP/2wIcEX5FXT4OnCZXXxi2Seoy6vjmqpr
      KLWV0uXr4g/tfyCQDBDLxBgMDjKbmGVr5VY0gmZhArT72vn+29/nse7HyCgZ0lI6W8drBA3X
      1VxHIp1YYH8qSiLX11w/z7X9bFh0FhRF4YXhF4ikIixxLsk6ftfm1hJIBpBQ0Fdvxqo1UCLJ
      ULqSwbqP8emB9fhEdVGioNr8bGkqzGJOmopt1BbYeOrkBF1TYTbUuShzmOmajjAVFEmkJLyx
      1AXLG5Ney42tJUwGElQ4Lbze7cYdTjLojfFGzyyzkSR97gi7O6bxxVJ0TUeQZIWSPDMPfXgV
      SUkmLKreuzlmHasrHXxnRwsluWb29XuYDYtoNUJ2MXc2jFoNZQ4zVoPaT+h1GhIpidmwSFhU
      WWEuq4FIMkP3dITJYIJjI4FF1aHTczLooUSaeEoVz8ox6RmaI9BnZAWX1cjmxnz293v54lUN
      dE+HGQ8kSEkyybTM4WE/kqwQS0mUO8wIGoE3ejzIirpYW1GRl5VEObsv2FDr4pOba7lqSRG7
      jo5luRi+WAp/LMXhIT++WApfNMm3b2rh0KDvoklQ7jDgqn4OoymqmmzH3KTkVHb4kpbT9Af7
      5/2bQksh96+7Pzv2dJgcPNb9GC8Ov0gsE6M/0L9AlTySirCjbgcWvWV+D+BNeHng0AMMBt+h
      PBaYC/jk8k+i0+hocjTRkt/Czhd3Lrh4naDjvpX38eDJB4ln4rhMLsKpMGadGaPOyJN9T6Kg
      oBXUXqHYWsz6kvWU2koZC4/R5Bv7f4y9d5xc5Xn+/T3Te5/tvWtXq7aqSEJUgejGYIMbAWOM
      Y8f1R4jflNfOm8SO48Ql+dmJ7QRTggsGAzYgigAJ9YbKStv7Tt3pvZ7z/nFGg9YS2M9/+uxq
      dvfMPOc8931f1/fi3pmzSFoHqI3g6OBIoY1kcfngI1Mo8x9vTRJOFeiuNfHtD6/iph+8U5UK
      1Fl1nFmMoVUp6XTL0UMalZJjs5f3yKqVAj/ZN82oL8m/fXQ1uaJIm8vIEwdnl31fNFMkmi5Q
      b9WRzpfY1O7g6aPzNNv1fGLTWv6f355Fr1byTx9aSZ1Vx88PzuKLy8HXmzocnPXEl5l1NGoF
      Y/4ka5ptlCWJSFomT1zd106r04jDqKHOquP184Eq86jdZbysyExV6cCIkoRFp5Z1UX/wffFK
      i/imwXrWNNtI5poY8SVRCHJna9SfqDYN0oUyTx+Zx23SEkkXWFFv5sxinHi2yIPb2nGZtMQy
      Rd6ZCPHKsI/NHU40KkX1yaRSCPTWmTk6G6FQEqmz6rmqx80zD2/hX18dY99EaNlGdqiL3Kg7
      x+c31fIrbSv7g3LCfK+jl/HIeDWH4p6+e+i191bVnipBhYDAV97+Clqllju67uAnZ35SdYg9
      P/E82xq3XXK9DCpDdTK87AlwJnyGX43/alnxmy/nuavnLm7pvIU6Yx0KQUE4F+aY/9h7ryjJ
      KGq7zs5j5x7Dn/bTYm7hH7f/Ize23cjumd1ky9nKt0rE83FMahNFqchvJ3+LU+/kIVUd5rFX
      UHZeK/t+FUpm82ZeCV46Of3EplaUCuh0y17e35/xVrvCDTYd9VY9TqMGrVpBMCEnuk+H0pcY
      ORQC3LpaDqRO5Uuc98Y5NBXGrFNdNqFlQ5sDq17N9f21rGy08t3Xxjm7GGcimOSsJ0Egkef4
      XJTXRwIICCxGslUaWypfIl8SUQoyl2ddqx1RlAdfByZDSMiyBFGS2H3OT7Es8cyJBXzxHLet
      aeATm1v5zPZ29owElnWsFAJcs6KW3jpzBXOYZGopRYvTQK6SJ6ZWCjTY9bxwysvpBVkqfeNA
      HaP+BNFMgbFAErNOjdusZaDBwleu72EunOGL13WztsVGMldiRYOFWKbAX9/czwPb2tGpFTx3
      0kNJlIhni3z+6m6ml9JolAoGm6zoVEp6ak04jVru39pGOFWg022is8Ykp1eKcGd7mUdXhPiS
      /mVuDT+GZX4PQaWSd1XQae/EoDJUI5Ty5TzH/MfQq/Rsqt9Er6OXXCnHQmqBWD5GOBfmbOgs
      aoW6ugFqDDV8bs3nZFxP5UiuVWr59OCnWV+7HkEQlj8B9Co9SkFJiYsvsAK1Us18Yp6l7BJG
      tZGP9n6UYCbIyzMvI0kSg+5BwtkwPzr1o2o3J1FIVFPCdSodXDSU1Cg15Mo5TGoTJrUJp87J
      blsXnxTvgbGXKIWm2TdwNwl1Ha1OA3MX9ek73UZuXlXPK8M+js1GeWXYh8OoIVMBxQrIJpZs
      scyR6QglUaLBpuemwTp2D/urdzm1UqDGrOXJw3PVwZmA7J760rXym+mJZS+6DrC2xcZ/7Zsm
      kZXJytu7XYz5k1XZAsiAqKmlFOvbHCgVMBlMMRlMoRCgr87CF67p4uBUmKcOz9HfYGFlo5V6
      qx5PLIvbrOWeDS0Ek3n8iRy5oohSkDizGCOdL7G1y8mmDif58SUKJZF0oYRFryaVK7F2pZ2n
      j8gT9wuZBLetbqCn1kxXjYmXzvqq7P+znjhf/OW7VcDVBfFgb62ZYFIGC4uSxKO/OcPGdgcN
      Vh3hdAFvLMczxxdZjGYIpws4jTIBY1WzDbtBzQPb2lndZOXrz53l8HSEOouO7loTf/v8MKFU
      no9vkrlJpxfleuxQUMmXbSO40hOABGKJHqUBvVrAm/IiIGBUG/n5uZ/jS/uqN+al7BIPrHyA
      12dfX3aDiuQi3Nt3L+dC5yiUC3xh7RcYqh3iB9f8gF+O/pL9i/tZX7eeO7ruqJq3lj0BnEYn
      49Hxqp5aQKDX0UsgE+AHJ3/AbyZ+w++mfsfJ4Ek+vuLjzCXmGHQPck/vPayrXcdcYo5mczOi
      JHJXz138zf6/4eWZl9nVvouZxAxlqYxD5+DhVQ+zmFpElERuar+J+1fez++mfsfQyKvosnGe
      M36UvxhdyZseBdu6XPIjVqngqr4a/uGOQZ4/5eHNUdlzXBYlmux6fv7ARo5MRzg2G2XMn8QT
      zdJkN8gRo4kcnliW7hoTN69qYG2znV0r63h7fIlUfvmZNJUrsbLRSl+dmZPzMRQKAZNWxcpG
      K/54jgarHn8ix6vnA/TVW3h3PlYx47iQgK9d34PDpOWN84FlMmu5fsnT4TYxG06zEMnQW2fm
      8HQYAeivt3DvxhaGvXHemQiRzpfob7DQ5jLS4TKiVAj8+vgCe0aDlCW4qtfNmD9JplBGlKTq
      WT+QkCNTt3Q4+er1PaxqsnLemyCRK5HKy3zSOqueM4uXNgUi6QIKQeDNsSCTwRT5kshSMk9/
      gwWVQsHd65s5Mh3mzbElPLEsTXY937x9AF88x3+8Ocm+8SUWovJkPZSSi+n7t7bx4mkvhZKE
      WiHhi19E9VaouLNXja2xFykTImKpY27VXbybmufO7jsZj4xjUBtw6p3MJ99zmhXKBTbWbeRE
      8MQlsud+Zz9j0THSpTRDtUP02HuwaCy8ufAmR/1HmYhNUGuoZaVr5aUbQK/Rc0XTFVi1Vuxa
      OzuadxDMBHnH807VBVYUi3jTXg77DtNj7+Hd4Ls8Pfo0JamEVWPFm/bKaOtyEX/Gj06lo8Pa
      gUVr4WMrPsbWxq00mBp44vwTLCQXOBE8QbwQ53fTL1Hqvo6tli6eD9ZwIiNPEJ0mLZ/a0sot
      qxq4a30TFr2ak/OxZYhAk1aF3aDhpbO+amuyJEp89fpe2UxS0boEEnm+fecqru+vZd9EiINT
      l8cMzkcynJiLolYqaHbIkuQ9I8HK8SKN26ylu0aWEfvisu1yR68bhSDw4mkv5z2Jyw7WJORQ
      vsVoBpNWzVw4U5FvwFggyeHpMCqlAn9c9uZeqGGOzUbxx3OE0gWyxXL1b7zQBTNqVSyl8ggI
      DLXZGWq1sxDJcGI+ysn5GP+8e5Qj0xE63SY+uqGZSLrwvspMh1FDNFPEoFFREiVancYKKj3D
      X+3q492FWDV74PY1Ddy5ronvvjZWpUDEs0W+cdtANTft+VNetne5KYoif7HBRJ3DxilPAoVC
      4MNrGrg5/zLKprUsbrifh4Nv8Yx3Lxqlhr0Le2m2NDMTn6EoFpf5fu1aOw+vfhhfyldVGQCs
      cKxgMjaJJ+UhXUwzHB5GEATemn+LU8FTLGWXECWRZktztTa4pAtk1BhZV7uO69uuJ1vM8sT5
      Jy6ru0gX06xxr6HF3MJIeIQOWwcHvQfxpr0kC0nmknNc33o937nyOzw2/Bi+tI9oLspTI09x
      InCiiquTkBiqHWKtexW3esZwTb5FsyrOSc0QOr2RSKbIzw/O8stj87hMWl4d9lfPy0vJPA6j
      hu09bsaDSXLF9wYuGqUCi07FeV+i+kFRCDLZ+G9fOIeA8L6YD4NGxYNXdtBfb2HUL5+P352P
      VYc/DVY9a1tljbtCEBgPJDm1EGc2nCFTKNNdYyb4PoFzmzqcrKizcHJBzgzQqBRc3VfDOa9c
      hH54qImN7U66akwcmgqjUAh0uE3sHKhjbYudmVCazhoTn9vRyULF7bay0cq78zFC6TyeaBZP
      NItRp8Jp1LJv4r2nXDJX4v6tbYz4ElXD/h+uDe0OAP7+tpV015qZDaWJZAr01ppJ5ErsHvaj
      UyvRqpQsRDKsbZHDwy9cyw6Xkc0dTlRKBZF0gblwhqmlNN5Yjr1zOe7f1smntrTxIbeXuzzf
      Rju3D2b2EQwO88vMLGmpRJ+jjyZzE9F8FJVCRb6cZ417DeFcGIvGwkd6P8JR/1H2zO9Bp9Kx
      pWELK10ruablGiajk4Rz8o1NKSjZ79nPieAJNtRtoCgWaTI18dlVn8VtcF9+A1wshnt+8nlO
      Bt/fWZQpZqoDhTU1azjkO7Ts62WpzEOrHqqGGEdyEYKZIFsbt1IsF4kX4rj0LnrsPfRpnWw9
      +QxCJoQ97+FjW3u5yjDDf8/XUhIvnGtTnFqIM7OUZqjVTo1Fxy2r6vnpvmmmQ2m2d7krU1I1
      n7+6i2dPLmLVa1jVJFMeVjVZiaaLTC+lWN/uuOwxAOTjyM2D9cwspXlrNEimUMZt1rKUyqNT
      K2mw6vj9GdmV9MZIgIvl/ZIES8kcCoVwSdGtVAj82RVtFEWJ894EZVGir9bMmhYb/niOepse
      g0bJ8dkoB6fC/OtHVtNg0/M/B2bor7fw8JWdjPqTnF6I8eUaukgAACAASURBVOZokDXNVgoV
      U8lAoxWtSkEgkSdbKPO163v50nXd7K0cS0CenL8y7Od0xV32h7c1q15NOFVgZ38db44F+cXR
      BTrcRmrMWt4YCXJsNiK/VgUY4E/kKUuwok7GKV7Z7aLequdfXxvnxdNeLHq5I3WyYqcslERm
      Qmm+uCJF04sfRRWZlHMf8kmc4WkGiyIj9Su4f9WDqBVqwrkw9cZ6zBozmVKGRlMjLr2Lg96D
      nAqeoiAWKEtl/mHbPzASGeFnZ37GvSvuJZQN4dQ7+ZvNf4MgCJTEEl8d+iqfHvw0d3bfSb2p
      /r335IM2wGHf4Usc9hevfDnPWGSMcC5MUSwSzoaXPS1WuVexuX4z3zz0TU4vnabJ1MSjGx9l
      z/we+l39PLDyATbUbeD7J7/PQd8R7lDaMaaWQGeFrV9EnQ3xe5+FaFGu1e9c28gjN/Rx3pfg
      pbM+pkNpjsxEqnfmYDJHLFPEolPz6e3t1Fl0RDIFBuotnPXGmQikmAmlZapBtoRWrbwkpcWk
      VWHWqfjJvmlmwxni2SKJXJG1zXYMWiVfvLaLqaUUgiCQypcua3CXQI5BqjjIQC6617c5ODAZ
      olzpnHxkfTP7p8LsGw/hNmtJ5ouM+pJ015pocRqYruiXasxaimWJyWCKJw/PkS+J5Esi4wG5
      2+OL5xj1y/OJFQ0W+ustIMDPD86iVytpthvodJtY02LnyHSYsgirm21oVTLlQq1UYNOr+fOr
      uhj2xlnXaieRKzERTHFltxtX5ec7jBrCqQK99WYeuaGXxWiGQ5Nh9k+G8MdzslTcnyJUkWEH
      EzL76GI1bK1Fxz2Bf0NxEez4wmooFijVr+Jbk7/hgPcAZo1ZTokpJKkx1HDYdxitUssn+j+B
      J+UhkotgUpvIi3m8KS+99l5GwiOEsiGub72eLQ1beGv+LabiU7w29xolscRQ7dCfJoUAmQTx
      2txr7ys93VS3qZrqeHPHzTSYGpiMTSIhYdFYMKgMHPIdYj45X4Ubddu6OeY/hllj5oXJF5iM
      TdJoaqTZ2sEd67+EqlyQfQCnnkZTP8D28hESlm4WMhoimSKBRI5sUax2hrZ1uSlLUgV/oiKc
      LhDLFjnvSzDsidNbZ+bxQ+91ei6sWLaI06jhym43yVwRUZJY1WTjh/espbvWRL5Y5q6hJmKZ
      IiqFwIn5GIFEHk8sJ3d+0jKJ4v3UEAMNFpodBqLpAreuaeAL13STKZQ464kzGUyRysvtyQtK
      1GSuSCJXIlcUqbPoyJXK7BkJMuZP0uwwcGw2ynwkc4m8uVgSSeWKlCtT5m/dOchsOM3/Hp5n
      tnL8KEsS0UxRHhR2ONGplXxobSOvnZOPM3UWHd54jvPeBN+8bSWPH5plIZLly9f14I1lefrI
      PN54DkmClY1Wzi7GCaXkrtDFJOr5qMxZugAHqDVr+ebtA5ycl9lFZp2Kf7y+lrazP0S4jLNL
      AI4WY7yjli9qKBuSoWppL8VykTU1a9jZtpNwLowoiQy6BrFoLbw6+yqelAer1srp0GkypQwz
      cVlmc8h3iHw5T6aU4dTSKVotrcsCtD9wA9QaavGlfczEZ5bNBgQE+p39/N2Wv2NLwxZO+E+w
      d3Ev0/FptjVuqzLad8/uZi4xx7qadTj1TprNzTx+/nE+u+qzfG7VZ1H6TnGDb4K/iMS4JR5F
      I4lgdMH5F6CYhsAwxhXX8WygjvGYQCRdYKQyib0QHHFdfy07B+p4dz5KJFOgwabn1lUNIMjp
      jYFkDk/s8ufxRLbI/VvbuKLTxaHpMBqVgv4GC8+cWOR05Uz/8I5O6q36atHd5jKQK5YRJXkw
      FXofUnOz3cCByuRzoF5ud7pMWqKZYkV3ZMRl1pLOlzBqVRg0KhpteiSg0WYgkZMZoiqFwO1r
      Gvnazh4i6UK1AL2wumpMWPVqFIJAY0UI97N3ZpZ1oBLZErUWLX11FgxaJWcX4wQSMurdqFER
      TOYoibKfeDacYcQnh3orBPkufmGKXSiLxDIFkvkS4VSedKF0iR7q1lUNdLhNlESR29c0VuOc
      Wh0Gai1abhXfxJRZhOSlIR4ScNDdzCmliIRUTXZUCAqazLK+XyEoeGb8Gc6Fz+FP+3HoHHhS
      MpNplXsVIGuEuu3dzCXnlpHMRUnEprVxVfNVf9oGUCvVzCRmUApKagw1CIJAvpxHr9Kz0rWS
      HkcPvxz9JccDxxElkZJUYjYxy7nwOWYTs9Qaaqk11GLRWjjmP8au9l1olVo21W+ixz/K2je+
      TVvcjzIdRJHyw8JRWDwGeod8ORrWsdRzD985IXJxtzJbFHFV0iBPzEU5700QTOYpliU+va2d
      XSvr+I+3JlEIAplC+QPdSE12A7PhNCcqLJ3D02HO+5Jki7L548hMmA+va0KUJB7Y2k5DxT8g
      SRJDLXbyJfESE/6ulXV887aVzEfSmLQqPLEsP3tnhrfHlhgPpFiMZtjaJcuVt/e4mY9k8MVl
      +XaT3VDBLRZpcRr4zJUdnJiL8tiBWaKZAnajhlxRxpD3N1gIpwosRjMyx6cs40pCFf3OhSVU
      PrzBZJ5gIk84LSNj1AoFNRYtLpMOq15Ng03Pp7a0cnYxTqEkYjNoqLfqSedLSMAtqxq4osvJ
      YjRDX52FOqt+2fHGZlCjUgqcXoxh1Kp5a2yJXx9f4KUzPix6NXvHQmzrcdG4+lqEcy9cEqHq
      d7TwbYueewc+xdaGrRzyHuKm9ptYTC5yMnCSAdcAt3Xexmtzr5EuptGr9KytXYtNayOai6JU
      KPnYio9RFIsMugYJZoLLPOkKQcGtHbfS7+yvWnL/qCXSqrXy5Pkn0al0WLVWFpOLFMQCU7Ep
      9i7sJZQLLRfMSXB1y9XolDoC2QBqhRqT2kSLpQWFoOCl6Zc47T/G7WdfRZu+jGFeEqF5owxM
      mngd7ewe3pA24C/qq99Sb9WxssHKiF/uZKxvs3PjQB3eeJaFaIZRf5IRfxJJArdF+4Egqp5a
      E8OeOJs7nPTUmvDElkN21ZU5wLMnPYwFkrwy7CecKpDOy9lixbLEHWsbqLPqaLbrsVecVhvb
      ZRPO2orQLpkr0WTXk8qVUCkUNNkNrG2xMdAgw6lArhfuXt/MeFA+R6sUAqIksWd0iVS+RDhd
      QK9W0uIw4DRp2dbl5p2KyT5fKjPQaOXobAS1UkFZlBAl+cNv1qkwaJR0uE04jRrKksQtqxoq
      jQEbG9od7J9cIpDIE0jk+ecPr+L0ojywmgml2dzpxB+XadWZQonTi3Im2op6C2VRfj8GGqw8
      vKOT35/xspSUN9iFdEqAu9c3MxlMcjJQord/NbVOu2x9LWVBZ2Wstodvupxs6LiB6fg0iUKC
      dms7o5FR8mKeXkcv0VyUF6ZeIF/O025tx6qx8vbi2ywkF6gx1jCXmOPN+TeZjk9zPHCcWCGG
      WW2WjUIqPVc2Xcl0fJpzoXNsadiCQlB8MBUikA7w7Piz1ePPycDyjlA0H8UkmlAKyqpgzmVw
      8fEVH+fZiWdpsbQQzUWJ5qIc8h1Cq9Ri0pjoUFvQpz7AVRUah8AwiEXUmQD/tG6Jr8604o3l
      aLDpKJYlfnfGi0KAh67s4FfHFlAIsuDMG5MLwod3dDLiTTAWSKJWCpclMTTa9HTVmNk97GdL
      p5NMoUyNWda/lEQ58Gd7t5vPX92JL57ljZFLM29TeblYfPZzV/Cfe6f4zu4xTi3ECKcLfHpb
      O4Iga2M2tjvYN75U8QbkefG0FwHY2C6nus9HMjgrZv4mm56yKLKm2c5ceHmrNpSS7+C5YplU
      rshgo5URX4LBRisKQe60bGp3cGWPm9+cWGR7l4vHD82SyMqBHk6jhkSuyKvn/HhjOVQKBS+c
      8laHUyfno3zvjfFq8V4SJU4vxIlmisSzMVwmGYYlIStDA4kc929tY22LjXPeJD21ZlK5ErlS
      GbVCnqPcvrqBk/PRarrM/7z0Dt9L/RBl/UooZpG2fZlxVwPjx77DkNqEP+2nKBb5+IqP40l5
      qqaXtxbeql6HTCmDSf2eTbZYLl4yFCuJJew6O3+35e+waq0YVAa+8OYXKJaLVV/AB26A34z/
      hidHnkQpKHHoHJcths0aM49seIS3Ft5iODTMCscKDvsO88zYM9zedTsKQVFluqsVall/oTJQ
      RHj/Hy6WwNaKlE8yWm5m1roRg0bBPRuauWdjCzf/8J3qB7pQFllRLxueL7QdJUm+s7c5DQSS
      OWwGNbOhzDIlYo1Zy45eN+l8ic0dTn5+cBabQcNntndQLHsw61UgwXQozf99a+oDU+TPeWUW
      v/eiWuO1cwGeO7FIKl+ip6LTueBFWKo8kSRgainF1X01tLuMZItl/nn3KKIkA2mvW1HD4ekw
      o/73evZWvRoBGYRrN2oZarWzqd3Bp7a0Vp1aH9/Uyn+8NcGYP8lgo1UmzFQ0hc0OA3q1kgab
      jleG/WgqnaCL12w4wxev7eLxg3O0uwz01pr5xdEFNCoFTXY9KqVQdcWZKoF7X/rlKTKFMjaD
      miaHgTF/ElEU2dHt4vSiPC2/IGus1ZURimaZANi8kbxY5KD3EEO1Q9QYatjRtIPTS6f5h8P/
      wCf7P8lIeIQzS8sVndlSlk5bJ1atlWwpi0FluCywwZPyyLlzArw6+ypuvZsWSwuLqUU6rZ0f
      fASaic9w2HcYjVJDl62LheTCJT9ghXMFX173ZVrMLTw38RxT8Sk0Cg13dt9ZzQvOlrI8uvFR
      FlOLnAufYzEX5kp01Gbeh78/eDeYG4io67kr8jmeGS3SYNdz3iu3PxWCQLZUxqxTc2xG7o5k
      CmWa7XrS+TKdbhMtDgM2gwZfPEe0Ej2qVyvZ1uXCrFNxTV8NRVFiTbN8RPFGZXP3l67rZsSX
      RKdWMhZIMhfOcHYxTiJfWha+ffESkAdsb44GiWYKDLXaqbXoGK4Mt5SCgFalQKkQUCgERJHq
      h25Dm4OpJdmxdWYxXrUZRtIFumtMxLNF8qUyOpUSlVJAqZA1TF+6tptRf4IXT3s5vRin2WHg
      X14dY9ibYO/4EhadHM5XKIuoKkcijVLBjSvrGA3If99AgwVRAk9UNg5dWGuarOjVSjyxLL11
      Fl485aXBpieaKTLsSSACjoojTa1UYNWrqxkJuaLImmYboijR5DCwqcPJb0966HAZWdVs44Y2
      BQ/ZjmNQCyCW5dir8VfY725Bq3egV+n58ekfM+gapNfRS76UZzo+jYRUBTJfWP3Ofm5ou4Ej
      viPkyrnLRnfplDo21G3gbw/8LS/PvFz9DL698DZ9jr4P5gLd0XUH37v6e3x29WcRBIEVzhXL
      vm5QGdjWuI2l7BIapQaDyoBSUFJvqufG9hux6+ycCZ1Br9bz1be/il1rp85YxwpnP+/0XUvS
      6Lj0h7r7YNPnYPEYmsgYLrMWq17NjkqxOB5I0VVj4l/vXs3DOzqqb1y2UOLxBzbyy4c2Y9ap
      +NYro3zt16exGzUsJfIsJeWjg1at4KwnwX/vn0EAvDGZ399gk2uM/+/355kMJpkNyQUsyEOf
      eqvufa+TTq3kJ/umGQskESX44rXdrGqSo5uUgsCd6xq5fU0jwWSeyWCKkigy1GrnuhU1zIbS
      pHIlru6rQa187+0QgCcOzfHCKS+5Qpmret3EMkUKJZHNHU6MWlVVGl0oiZyYi1afQKlcCYVC
      4Gf3rcekUdHs0HPjyjpWNlp55sQioijLpiUJjkyH+dxVnTiNGnRqBT21Jq7uk11p787HeOrw
      HHqNsrIBCiDI11ohCCgEub7Y3OGocoiMWhU3D9Zz25oGUvkS0XSBx+7fyEQwxfBilM+4hrEv
      vgmeE5DwQstmxN6bySrVvDT9ErtndrO9cTtug5vj/uMcDxxnW+M27ui6A7XiPR+0W+8mXUzz
      83M/Z3PDZoxq42Xfmw11G3h24lkmY8vJFIFMgO+d+N4HPwFUCpVsR9v/10zFp3DpXdzVcxcq
      hQq3wU2mmOGQ7xAvTr6IIAh8evDTJItJTgRO8Orsq3TaZAyKVWslno8z6B7kzwb+jH5nP0/O
      vsRv1WUMaiNdllYUlkYZjlq7EuxtcO55tJS4pVOF1LKF0WCuypppdxt5/OAsx2ejdLiMKASB
      NS12LDo1CoXAf++foVQpAlO5UnVoJQBqpaJaFJcliUNTYfrqzYBQlR3UmLUcnY2iUsj6+RqL
      jnF/irIoXnIIVAjyB356KU0sK/P4RUnilWE/N69qYCaUYmopRaksMVuRC1zo/zfY9Ax74yRz
      JVyVI9l5bwIk6K03o1IKJLJFXCYtm9qdnKhMVI/MRNg97K/AwFR0uGWfgE6tJJ4r0mjXMxVM
      odcocZm07B72c96XJFAZqmUKclbwUjKPLy4HfA+1Oehwm7hnQzOhVIETczJPyaRV0VNrZmO7
      gxX1FiaDKT60tpEPrW3knCfBzoE6bhlsYDyQZFOHk2v7anh7fIn9kyEWIlmmgmmaHAYmAkla
      HEZ2Bv8bXS6IYHLLwYdGF8XAOR4rLxGsyJiva72OQDrA5vrNRHIR6o31DLgGSBVTmDQmrm25
      ll5HL5lihkwpQ6KQYCY+w43tN+JL+yiJJZSCkkH3IF8Z+gpPnH/ikqcHyE7FP9oFOuI/UqVD
      FMtFfnzdj9nVvovX515nPDpOSSyRK+cYDg1TZ6zj91O/J5aPEc1HGYuMIUoinpSHmztv5rFh
      2StwMniSkcgIMcocMhjYettPqdn6NbkNqjHC4f+EdBDyCYTgCP8ZXc+JINy/rZ2VDRYSObkT
      kS+JXNnjptVp4LVzAV4elsVwmYIMigU5EtRqUNHlNvHRjS2UKshFm0HNozf2cee6Jk4vxOit
      M8syB5ucjpIriqTzZVodBiLpApIELouWeOY9bo5Nr+YzV3bS5TYhCPIU+ZEb+nCbdQx744z5
      k4TTBZI5uW/+0JUdzIUz9NTJEuUvX9tDX50ZnUYeTP3v4Xmu7atBq1ISTuV55IY+FAqB0UAS
      byzLo7v6MGiU1VlAq9MICKxrtaMQBE4txCiJEsWSxPYeN0Otdp44NFuFCYsSqFUKVjZa+fpN
      ffxgzwT5kswuGg8kq7DcHb1uDFolhZLIRzc08/IZH4lcCa1KSSidZ9fKev7quTNEMnIK5PG5
      CJ5olpIo8do5P711ZrprzMyE02QKZfaOLxHJFJkNZ3izsJLbOhXoWtbD3H6Y2YegNXGmvhet
      3oVL7+KQ7xDBTJAWawvvLL7DfGqec+FzmNSmqoV2KbOEQW3ArDVzPHAci8ZCt62bH1zzA7Y1
      bkOr1HIscIwjviPEC3Hy5UtrOJVCdfkNkCqk2O/Zz6ngKTqsHXhSHkLZEDadjfnEPFatladH
      n1525pKQSOQTBLPvdUoKYoH7Bu5jqG6I/Z79dNo66XH0EEgH8Kbl1p9aoeaOrjuo0bvkPACj
      Gybf4IJSRSUV2XDthzE29PLDPRPsHQ9h0MitwFqLtjqwutC6tOnVPHxVJyqFwM6BOrZ1u/iv
      fdNs63KRypdoccgS6Q1tDq7qreGzT53g2GyU6VCa8UCKYEIW2C2l8lh0KlocBmLZItf317J7
      OIBeo2Rdi51ErshDOzo5NR/lR29PccYjQ6W2djn5yPpmUvkSw5549axv0Kiq5/zFaJZgIs9t
      axr50dtTHJoK8/bYEgqFQG+dhb3jcktyS6eTl876WEoWCKcLLEbkTfDa+QBmnYore9yEUjLt
      +r4r2nj+lKeabSBKEmP+JKlCadlMoNGup7/eQkmUGK6oVi06FfduapGfppUgvycPzbGUzGPW
      qWmy61nfaidTKMuq1FS+ikwBWeP01et7+MXR+eqG+u7dq9nU4eTFU8uxhJGiCpfLxTprAsZe
      ldvexRzJrmu4ZfWD/GrsVwSzQRKFBJFshJs6buLO7juJ5+Mc9R2lxlDDa3OvMZ+cr1IjVAoV
      HbYOdrbtZO/CXvQqPb8Y/QWRXIRoPopepa+mE128VrtXX7oBIvkIX3n7Kzw2/BhvLbzFnvk9
      PDj4IP60n4nYBMPhYUYjo3K8ZWF5EburfReRXIRkQX6U2bV2BpwD3NB2Awc8BzgZPMlsYpZB
      1yCiJKIUlFzReEXFIJOnpvsmFN53Ie6BjDx5zZlbiW38GmPhUjXBJFuUjeo3DNQxuZRCr5YR
      fk6Tlia7nscPzZEtijx6Yx8b2hyYdHIEkt2o4bEDs5z3JWRpQTjDWU8cUYKSKPL5q7s4640T
      yRTY2uXi09vaefLwHAuRLOOBFC6TlltW1ZMviYz6kwx74owHUtVjUbEsMeJLctNgPS+e8qJS
      CKiVCsx6FZ+/uovfVcLxLnzvfCRTxZ7nSyL/Z2cPuwbrWd1kI5EtoteoOLMYq9o9TToVB6ZC
      TC3J7rbNHU5ECV487eX5dz3UWvSURYmeGhO3rm7gI+ub0SiVnPXEqxS5+69o5/XzAX59fBGj
      VsWD29sZD6TYNx5iIpji/q3tPH5otipx8MWzZAolfPE8530JPrO9na4a07KW8JYOJw/t6OT3
      p30kcyXsBnVVVr1/8tJZT6dqiasUZ0BrRMqnOOVu4U17DTnKnAqeqgITrForboObV2dfpcHU
      wKBrEEmQKItlNtZtpNveTaaUIVlIEs6GeW7yOY76j/L63OvkSnL4tlqh5jODnyGUCxHNvSep
      brO08fdX/P2lG+CZiWd4buK5asszV84xEhkhmAlWHyOiJPKJ/k9wNnSWQlk+EnRYO/ClfTSZ
      m+h19LKmZg19jj4eO/cYc4k59nv3UxALpIopApkA393xXZotzTwz9gyvz73Oy9MvIwgwlIwh
      ONqg+wbG9av5qOcj/N+jMc5549gMavRqJTcPNjAXSdPiMHLfFW28MxlCAdRZ9QSSefzxHPFs
      kS0dTtrdRp48PMfvT/tY3WTj0EU+gkabnsFGK95YjhsG6qix6HjpjE8mQRTLJHKlqmw4XxL5
      8LpGPLEsAnKtYDWoL4lSlSSJYW9CJkTHsrQ4DexaWV/tJF3w6grARzY0c8Yjy6J1KgWeeI7v
      vzGBRafm6GyEfeNLbO92EU4VsOjVrGm2sa9yEyiWJcYCyaoITu5yKfirXX1Y9RrKokSuKPLC
      KQ8Pbu+gUBJRKmS5xL6JJfmoVBZptBmqmcJyx0hAq1awEHlPQZrKl6m1yD7goTY7HW4jaqWC
      uUiGTe0Oai06fvrONEatqsoMffG0j4lgimJZvCS48CHd63QrAxBfYKFpLZ9VJzgVHWE4NMyO
      5h1EchEcOgd1pjo8KQ82rQ0BgXPhc4xHx1lXuw6H3sFL0y8xFh2r1gkXEyNqDbXsbNuJP+3n
      kO8QqWIKh87BtS3Xcm/fvXxx6Iu0mFsubcUvJBcu6fdnS1nW1qxl7+JeQDYehHNhnDqnfBdv
      uIJPrPhENctpMjaJQWVgc/1mbuu8DU/Ss+z1koUkoWyIl6dfrvo3C2KB58//L/f7I2gR4MZv
      88MRFbM5CZCIZ0ts7nDxjdsGcBjVqF4RePLwHE8dnmN1s41hTxxvXO75d7iMFMuy9PacN8H6
      VjsmrYpYpkCjTbYf6tQKOtxG6qw6ruhy8cIpD7PhdKW/XabZYaDhos6PTq3gwGSYiWAKtVLA
      btDIZ+o/GLK1u0xVqyHAfDjD3UNN/PPuUQrFMl01JvIlkVWNMqfyttUNBBP5KqyrLMo8zQar
      DpVCRh0mcyUUCpZxkUD2PKh0QjU5XgBePCVHHikEgcEmK9limbYKHCucLlRN7CfnotRadTTZ
      9WgvMrRrlAp6a+V6qCxKlTpijtlQhjUtNgDue+wY61psFEoiCkHgV8cWlv29ugpW3aRV8uC2
      Xr73xjiZQhmFAB93TbLTNAsKC/TdSrEQpZi6YOUUMagMrKlZQzQXZSI6QSwfo9/Zz/nwee7q
      uYsTgRPMJeZotbRWj+BlqXxJkVuWyrw+93r1NHLhc+xNefn6xq9X6SWXPAGihSjvLL6zbBMM
      ugb5p+3/RL+zn1XuVRzxH+HthbeJ5WPkyjnmk/PUGmu5r/8+DGoDuVKOZDHJqeApYvkYkVxk
      Wb1g09qYS8wRyUWW8YMUKh3bhj6LzdKE8uQTPJtZw0xGW/16T62Jeza2EE4V+MbvzpPMlSiL
      8ni+yaYnni1Sb9WRLZbxxXPsnwjxu9M+JAlyxTK/O+Pj45taUSoEvr6rj43tTkZ8CU4txJgL
      Z6ixaGl1Gml26FnXbMcXy7GpYsf886u6aHUaeXc+hkWv5pq+GhQC1Fh0VYparUXHxza1oNco
      qyCoDrcJhUJgailNriSytcvFijozb4wGZZeZL8nGdid7RoKk8yX+/Kou5iIZREni+/es5eWz
      vqrNsMVhoFCWje6aSv/dYdRSb5O1PH9+dReHpyMEKqmTF+qd43NyiEW+JGv2v3XnKgKJPIem
      w5xZjLOx3YFZp2J7t4uznjh7RoOURJFsoUxvnZk3R4OkC2VmQmnqrXrqrTruGmpiS4eLN0cD
      yxShuZLILavrCSUL7OitYXu3iwOTYXY1l/k32zN8yDKKqn4lxBcgMIw1MIJp48PExDwDzgE0
      Sg2vzb3GQnIBu87Oavdq9Co9Lr0Li9bCfEJWFt/YfiPH/cfJlrJYNBa+tv5rBDNBSmKJAecA
      dp2dmfh7brELK5gNsrZmLa2W1stvgDZbG/F8nPnkPAICNYYadrbtpNZQy/q69bw1/xZvL7x9
      yW4bi4zx7tK7vDD1AmWpTKKQoN/ZT7qYJllM4tA5UCqUrHKv4tqWa+UgA3MT07FpmTSNgnW1
      6/jJ/G606RCN/iViNRs4mbBSEiXsBjUtTiP/vmeCxWiGaLpYdXo1WPVc0elkqNXBOW8CXzxX
      3b6Fsiydvn6glruHmnnuXU/VlD3qT3JsVu5gXGDcBOK5SmC1A188x4k5mcXTWWOiwabn9GKM
      Bquek/NRJiqy5m/dOUgmX2I8mGLPaJCJYIo6i467h5rYO77E3vElQqkC/37PWnb0uknkSlX9
      jyTJUuhopoiAQKEsY0QsejXTS2nCKbkz4zBoWErmfc5j1QAAIABJREFUWd9q54Ft7YwHkjTY
      9LS6DHhjsmKzv96CWqXAE8ti1KiQkJgOya/RXWdGp1Jww8p6Vjfb+Nn+GRajMuW6u3LH3zcR
      YkW9Wf573SYWotmqPujCunZFDd+4dYDeOjOrmmy8PhKoHpdAbgsnciU8sSxnPXFyxTJTS2mu
      qUtzg3kGxejv5f5/MgBDn0KhMdA0eC+v+49w1H+USC5SZQDZdXaUgpIOW4dsa1w6RVkqc3vX
      7Tx5/kmMGiMqQcXHV3ycx889zlxijqHaIb5/9ffZPbO7qhK9eImSyFDdEAPOAeAybFCj2sij
      Gx/lnr57eHvhbZ4aeYofn/4xT5x/gr9Y+xecCJy45EVBpkBMx6cRJZFkIcmN7TIOpcHUgFFt
      xJfxUSgX6LR18ovRX5AsJNEpddzedTv+jJ9cKccj6x/hO8e+Q8K4lgcW65mY0tDuNvLg9nZa
      HQbuf+wYyYr25ivX9WCbWMKgUXJFl4t/2S0PzYKXkSyURLk4/dr1vewZDeKL5zg+G8WfyKFR
      KtjcKSfNuM2yhXBqKU2H28juYX/1aPD91yew6FWEUgVseg3FChEuXywz6kvw1thSVRpcKIl4
      Ylmee9dT/f/pfIljcxGaE3Lub4NNhzeWQ6tScPdQE2+OBtm1sp7JpRSvnPUt8xSrlQJX99XQ
      W2vmicNzMv0tX6bFYeDL1/VUDDEJvvvqGPU2PVu7XCwlc8tEgF1uE4emQvx47xS/ObFIvlSu
      iuS6akzo1UqKZRGjVsVQq4OyKBJOFYhlijTa9MQyBZodMlj2K78+hT+ew6xTy9nDCoGiKKEQ
      4M51TUwvpZgLZ5AkGVpw59p6PlJ8A3pvBr0dxl8FRzt4T8HEqwSstYxGRimIBQKZADe03YBb
      7+aVmVeYTcyiVqqrWrOiWKTV3MramrXYdXb2Le7Dl/ZV04vOhs6SLqZpt7ZzxH/kks+CWqGm
      ydRU/fdl26BKhRKTxsRPz/6UidgEoiRW3V8mtemymguVoOK+gfvQKrU4dA4OeA5g1VqxaCwI
      goAv7ePu7ruZjE1WH00lqYRNa8OqsXLAc4BWaytWUeS0v8yx6TqKonx0+cLVXbS6jPz2XQ/x
      bBGdSsl8JI1Fp+a/PjXEinoLOrWCcKqAN3b5XDKnScOphTh7zgew6NWsbLQyF85g0qkoi3In
      48bBeiaDKeKZIla9uireAnloNtRqx23WUm/VodcoserV3LG2icmldDXT9+JVKIloVLIMwaJT
      sRjN8tThed44H+CGgTo+taW1mgo57k/R5jLw9JH5ZSGAIPfvR/1ywvvUUoqeWhNX9dZwejHG
      00fmeWcyhEoQ2Njh5LbVDbxa8e1+76NrGPHJrc7uWjN3rG3gpTM+fPEcqXyJnf11/PVNK/j+
      GxOM+pPcsqqBY7NRlpJ5Gmx6ppZS1Ji1/PDetWzucHJgMsQrw37GA3Lu2UwozWQwhUqh4IaV
      tYgS3DXUxK7Bet4aC9JVY0KUYPdwgC11ZepH/gdFcBihXIKOqygBb9trGavrYTYXJlPMUG+s
      ZzY+y9HAUZw6J522Tq5tuRaD2oBWqUUlqNgzv4doPkqHrYPjgeN02jrJlDLkSjnqjfWUpTIl
      qcRUbIqCuNyvsa1xG5/s/yRqpfr9NwDI6Ilfjf2KUHa5nvqGths4vXT6kkLZrrPT7+xnODTM
      2fBZVtesxp/2U5bKNFuaAVk6kSwm30v5k2QxnSAIdNg6eEjfzhVvfpf1OisHFUMkc2UGGiwM
      NFqZDaUZbLTSXWvmS9d1IyHrad44H+S1c34KJZHD05Hqh/UPV1+dhd+d9lIoyyHPVr0alVLB
      lk4X8WyRyaUUzxxfwGXScue6JoLJHIuxbLWDoVYKPHJDH55olleG/Swl83zuqi5uXV3Pq+f8
      zF8GpKVSKvivTw7hNmvZ0O7gwGS4+kTIFsvcd0UbB6fC3DJYT7vbyHMnPcvO0xcvCVkf9L2P
      riGYzPNf+6aYDWeIpAsEk3nOeGSu562rGzhYgXuN+pO8UcnyOudNcGAyTLEsT7PNOhWf3NKK
      PyHLv9e12LlzXRO3rWlgPJDinYkl3CYtd61vYmuXi7989syyG8LFqyxJzITSxDJFjDoVzXYD
      zxxfpCxJ3H9FG2e9cQ4k6zicb6XHUsYZOkpZrePXZiP/XvKTFGAxuYhT7+Rr67/GK7OvUCgX
      KItycfvQqoe4u+dutjdt5/Fzj5MsytGowXSQGkMNN3XcxKcHP82p4ClGI6Mc8R+pfkYbjA2o
      FCr0Kj03td/E/1n/f7Dr3oOtva8gU6fScU3LNYxHxylLcgxRn6OP8cg4VzVfxUHvQXIlGQnS
      bG7mwcEHCWaCqJVq9Co984l53AY3HdYODvsOs71pO0e8R+i0d9JibiGYCdJkbiJeiHM+ch6X
      3kWhoEWVCdOUPMv/fGotPzvo4Xenvdz3P0erv1eb00B/vYWvXt/Dx356uHqeb7Dp+PpNffzi
      yDznfUnEizbBYKOVB7a2s2/8vWOKq0JrXohmMGpUjKeT1YKxr87MYjRLk00vC8pKIvdsbGZL
      h5MfvS1jI4tliZfP+viPNyewGy4fwCbLDkqcXYxzzpugxWmomnMabXo+8p+HyBZlUO43bxvg
      h3smLvs6F1Y8W+TYbJQnD81dlnU6E0rzz7tHaXcZKYsSz/5BiF+2WGZzhxOrXs2wJ87f/HZ4
      WYzpy2d9/NkVbcyE0lU0Sl+dhZ+9M1PFM77fkvmjGg5UIqrMehV2g5qT8+9plKaoIai6m6fb
      U+iCJynqFXTau7BqrUTzUSQkOm2dXN18NccDx7mm+RpOBE+QL+d5ZvwZXpt7TZ4RSPIv3GPv
      IZqPst+zn7JUvoQBeiEiaWfbTp6deJZ2azu1xuWBHe/7BBAEgQHnAG6DG71az87WnXxx3Rex
      aq0c8x/jrzf9Netq11ESSzSbm1nlWsVTI0/hT/vZ0bSDb23/FjatDVESeWT9I7K5XoAzS2fo
      tnfTbm3nG1d8gzNLZ/CkPOhUOia0Omq1NuqtbbxRWs1398xe1sv72vkAJp1KBkhVOjBqpYK/
      vKG3kpJewKpXoVIokJB5oUNtDtxmLf54jhaHgQe2tuOJZXlgWztnK3fPsihRb9Xz7kIMb0VF
      eu/GZkZ8SfrqLKxpseOLZQkkc6yot1QFelf31bCUzFXZOPL1k4vBl8/68SdyfOm6bv7qxhX4
      4lkQoMWhr0oa0vkS1/bV8sIp7x+Na4qkCx+Y/RVJy/jCrhoTz5+6NBzObtCwEMmwGMteYmdM
      5UscnArRV2dhoMGCBKxssPLEodk/KUAkWyxj0CjZ0Obgym4XJUlOmr+YZ5osCqxpy3AyM0Ks
      boCTGS9zyTmaTE1sqd9CvpznqZGnZIJ4OUutoZbnJ5/nlZlXqkWtWWOmLJWxaq0UygX6nf2c
      DZ1dxrS9sOL5OIVygfnkPFqlll3tu5Z9/Y9aIle6VrKzdSdt1jYeP/c4z08+jzflZSI2Qb2x
      ntHIKMPhYYZDw0zGJsmX88wl5zCqjTw9+jSTsUnW1qxFr9Kze3Y3m+o3MROfkVGLmSXMGjOd
      dvmc9+up52lUm+mcm+QzwwOkSpcPopAkOL0Y4/r+WsYDSRSCIOM35mMEk3k+PNREviQyHUpR
      qCSX7K2kOtZYdBydjXB4JsKYX84IVivlwImyBJ/a3MpoQPbECsAnt7RxzhtHAv7l1TEOTobR
      aZTctLKeXxyd5yPrm1EqBEZ9Mq/fqldjr4TahSv9eUmS7YSDTVaeODTHOW+CUKrA2hYb8VyR
      BquedyZDZPKlD4xQVQgCZr36Ay2eUiWX67mTiwgCy7IOABK54gcG/ElQ4QqpObMQp7tWjqD9
      Y9GuF/+O44EU4XSB0/MR6oxK/Kn3Nk+jWUlL/QjfEedJ6UxolBp67D0c9R9lMjbJaGS02hqP
      5qLc1H4TVzRcwUHvwSpZcHvTdsaiY/gzfuqN9fzLjn9hz/yeS8jRILOBPtn/SYZqh7iv/75L
      csL+pKDs8+HzPPDqAxzyHSKSi5Ar5whkAhzxHUGtUPO3m/+W+eR8FV+nFJSEc2Hmk/OkiinS
      xTSZUobh0DDT8WnShTRXNV/FV9d/ld2zu3ln8R2azc3oSwUeiWfYq9vJs6GWD7zQhZIoA2Ov
      7GDXyjr2jAQ4MhMhkMxx82A9CoXA8YuiOXMlkT+/uouPbWphKZWnzqJHkiTWtzm4a6iJ/94/
      QyiV59hshEdv7MMby/K5q7pI5mV15VxFio0gE6ovZH+d88Z5/ZzcCxclyBdFVjZa+dimFt4c
      DSJVhmWBRI5fHJ0nmS0RzxYxaJQ8uL2DUwsx2l1Gru6tQRD4wLyy1c022l3GDzyOqJQC162o
      JZIpcFfFhnhhCLWqyUogkf+jTxlRkmsESZIjWycCyT95A9w11ESHy0in28TtLi9/1uRlrOAi
      XhBosKr5f3sWuXnDLpJqLVqVllQxhVJQMp+cR6VQ0efoq3Z09Co9bZY2puPT5Mo5ag21tFnb
      2FC3gf2e/QDUG+urcUkHvAcuvR4KFXsX9/Lhng8zVDd06df/2B+UKqT4y31/uawYvnh5Uh5e
      mX2Fh1c/TDgbJpQLcUfXHWgUGn50+kfVX+L3U7+vtrJERPZ79vPAygdYW7MWjUKDRWtBBAym
      OmZjNX/SxfbEsty2uuH/5+294+Oq7rz/953eNEWa0aj3Ykuy3LuNMRhjDBs6BAglu2EJqRue
      hP096ZtlN/vKZksqCdkkEEIoIYSAY8AGXLAN7pKsYsnq0mhGI03v7d7fH1ceW8iUZJPn85c8
      I8+M7pxzzznf76fw63cW7olriowIwgWVmFopUFNkoM5h4tNbG3i128PyKis/ePMcBwdm5rXr
      /bH0nK44zNFhP5mcSLFZO+/1V1TZuGNtFff94ti8coCEPCm+fdMSfnr3So4MzrK8ysY3X+rB
      F0tx55pqFMOzaFVKHtnVC8gVqk9uqWdwsZNRX3xeJ/k8HAVa7llfQzqXY0/P9LwzzsUoseg5
      NRag2xVmOpTi+mVl7On18unL6/GEk/kz0wfBHUpSZNRgN2koMmmJXeKQ/24oBDgzGeKMK4Ra
      IfDd5jEagq/x5MqbmZ0cxJxyY+r6I0nxJk6qAswm/dzbei89vh521Owglonx9fVf5+Whl+nx
      9XDUfZRn+p/Jv75KUJEVszzR+wTbq7ejFJR0+7q57vfX5Z8XEfMSXqfBSSwTY1XJKlY5V13y
      M3/gCrB7ZDcvDr74vn/4RGSCu1ruYkvFFmYSM/T5+kjmkmyr3sYi2yIEQaDP1zevciQhsahw
      EY/3PJ431Trt60FVuhRDsoT9Mwtj7d+Nq1qcWPVq/r8XznDbqkocBVq0KiVvD/kY88epsMn2
      IkaNkrvXV3PLykpCiQwalYKXOqc4ORaQXZyVAumsiEGrQqeSqRCFRg1XLiqmslCeNBqVggl/
      nExOwmbQ8JVrF5POijx3YmKBRiArStywrJy2cgvFBVpKLXraKyzU2I0E4hneHvZzVYuTykIj
      Xa4Qfe4wiXSOXWemKLfpaXLKEkpBAJtBzYoqG75omj90THFsxI/TrM17il4Mg0bJ2toi+ZwQ
      SaEQBE6PBwnE5UpRgVZFl+vDTQCdSkGjUy4GtFdYPlSecrlNz4Q/nucmBXJablUfRhWewJyY
      RFvWgqDScdTZgLJ4EW32Nk5On+Sk9yTj4XEGg4M0WBu4a/FduGNuDk4enPf6IiKRTASFoOCL
      q75ISkyxd2zvvOcfaH+ARYWLyEk5tlZtRUSk2FDMpvJN6FX6d3/kD14B3q3FvBRSuRT7J/az
      a3gX5wIX9mE2j40bGm4glolhUBvmuUcUaAoIJoNUmipZU7qGfRP7EBGxBF0sC0+gFj5GRnpv
      wZpSELDq1fz3G+cwalQE4mke3FLP3T8/SmCOe762tpAN9UWcHg9yZMhHW4+H77zaTyYnolPL
      QXUScq/BqFXhnZX5655wcs7aW9bC9rrDSJJETZGRJRUW9p318q2Xe3n4mkUUGjULvIGKC7Ts
      7Zvm6cfHCcYzKBSyodS/3dQ+169IYdFr8MWiSHOGVk8eHSORzqFRKfj4hhpKzDp0GiVvDcwS
      jGfyTa1QIoOjQMv9l9Wxq8uNfy63t2yODnHGFeKutVVsb3GyuNTMj/cP0TsVxqJXo9d84Ned
      h2EuJDuczHDd0jKOjvgvuTKdh1GjZHmVda7UK1+PpthJyA7JAidrpRx8Mv42Typ89M9quKz8
      MuqsdSwrXsZoeJR+fz8OvYNgKvie406SJFqKWhgODXPWf3bB82PhMU5Mn8jfiJcVL+Oo+yiu
      qGte+fM8PnAFeGP8jUu+0bsRTUcX/F4yl0StVCMhsbpkNTPxGXJijhJTCdXmal4aeolgKsgV
      1VeQE3OsdK7EGpxgXWYWT9FGei4d6gLIW5A/dE7R7ZItR7omQxwZmiUQz+S3M3IjRq5ETIdT
      HB8J5JtA2xY7WVltY1eXGwnZWuVir9BYKkskmeXwkC8/SAPxDLORFMFEhtlYmkFvhFgqN0en
      lt9Tr1aypNzCC6ddxNK5ueREmch2eHCWs54Ib5z1cnIsgNOsI5kVUSkEtjQ5GPXJXJsJf5x3
      hv0sq7KSzYkkMuK8iCW7ScM3P9LKhno774z4aSkzo1MrKTLJVa7bVlVyw/Jy+jwRwskMy6qs
      vHnWSyIjh2h/mP2806wjJ0lsrLfz432DIMjngUsl1BSZNFzeXEyxWSdHO5k03LaylM85OtDG
      JmHj5+HYT8kaCnlTDLPqikfQaAt4buA5fAkfj2x6hKuqr2IiMsEPOn7As/3P4k/6L6niUivU
      uGNu9k3so9hQnD8vnMe60nUcdcsdYAmJClMFP972Y2osNflMgIvxgbeERYWLPvBiqRSq97RP
      9Cf8qJVqJiITPLTyIfZP7meVcxVHpo6QlbKIOZFfnPkFM4kZHHoHU7YGqoqX8LWBR0lU3Msf
      XYZ5hzaFAFc3FlBmVXNyfP42YNQXZ1W1jVPjAcqsev5hWyN7eqfZN1cBaiiWdaOlVh0H+mdY
      WW3jzrVVuIOJuXCNC4axCoXsfPButJaZGffHKTbraHCYCMYzFBo1+e7wmtoifnN0bAEFGOQ6
      /Xk6tIRsRX5Zo51Xuj3sm8vjqikycPPKCp47McEvDo3w0dWVbFvsZGgmKnfB1QpKLTpu/cnb
      WAxqIkn5GsRTOTyhMJc1OfjMb06zvdXJH7vcpLIiJXM+SluaHTQWR/ndqYUcmYtRoFPR6Czg
      4MAMgViGqZCcc/a5KxoY9cXRqBR4I0lyOYmMKGFQK9nV5caiU/Gdug5qVmyjIXoYXvk5SDk4
      8G9QuZaRpiv4QuI0W0Z349A7KDGW0GBrIJPLMBQc4tn+Z/PnxBAhFIJiQVRvkb4ItUK+qX56
      2aeps9axa2hXPrjl2rprOTJ1hOHQMCqFigZbA6F0CJPGdEnd8AeuAE6jkz8O/zEvUrgU1pas
      ZXPFZo65jy14rqWoBaPaSFVBFYlcgucHnpdb1WKWanM160rX0T3bTTInM0hb7K04Zodom+rg
      qnoTq8whTPZySgwS66tN/EPlIH+/qYq3z/RzKrBwT5fKiiQyOVpKzPzdZjnV/MDADMVmHb1z
      OQFfvLqZeocRvUbJde2l/PTgMJmchNWoIZrMolYKXNdexs4lJZy4KJjOoldTP6cDmPDFiSQz
      jPsTeMJyb2EqlKTHFZZtBy8VyifBlmYHTrMOq0FDrzvMqXFZD5AVJSQJxvxxul0hjBoVo744
      KqXAK90eblxezuqaQtbUFjLqk82/gvE0y6tsFBm17OufIRDP4I0k2dhgp8Kmz3fG1UqBZEbk
      jCvEJ7fUy1LN97B0LNCpuGl5OW+e9dJeYWF5pRVfLM2KKitToSQHBmb4zi3tlJj1GLRKrl9W
      Tuek7HcqCAL3VM3SkuyE/ldkxweAdByMdqzVm1ga8XNZwEuxQsOta7/EG5MHeW7gOTJiJp8y
      CnIl8R9W/ANj4TFiWdkFrtRYykx8hiWOJXxny3ew6WzsGt6FL+nj/vb7ubvlboxqIxvKNqBS
      qBgKDtE108Vz/c/x+tjrVJorqTLPry5+4AQwqAxUFlRycPLgJcOsKwsq+fbmb7PEvoTOmc55
      6ZEWjQV/0s94ZJxKcyXbq7eTzCX5zLLPoFPpeHnoZTaVbyKRTeBL+qgsqOTu1rs5kguzx+Yg
      Zi1jNNvLLW213D30La5MvUnt6DMoIy400Ql+H21F4sKyVmTSoFDI5qwqpSyUnwzEOTgwg0mr
      YmLO/iOZEXmpY4q3h/283uflvg017GgrYX//DOvqZIOsllIz339jkGWVVmxGDRIyocygVfLN
      v5ENX7Oi7MiWyoisq7fjMMnBdhIsSIUEQIDPXtHIziWlvDzHybkUwknZL/TL1y5mVbWNgeko
      6+qLeK1nmpe73BQa1XP2KPJ7VRUa6HaFkYAl5VYWlRRweiKITq2kwqbnhuXlHBmcJRBPIwgC
      p8YDtFdYMWiUeaGMRqVgdU1hvqtt1KqYjaRlbYFC4P9sbyKZFdne6uS1nmm+u6eft4d8WPRq
      drSVcnTYR7lNz+WmCZyn/gPBUAgxHyCBsxXqtqLo+T1Vg/tx+Meocfcw6jvLL2LnmE0FKNYX
      o1Fq8tXGxUWLub35dkLpEGatmW+s/wbDoWHubb0Xb9zLL7p/QedMJ4emDhHNRElmk2yp2IJW
      paVAU8DPzvyMsfAYoiT7jAZTQQ67DnNl1ZVYtdYPPwEEQaDWUsuakjVMx6cJp8IoBAVGtZHW
      olY+texTNBc2Y9VaWVe2Lh9ff1XNVawvXc++yX1kxSzTsWm6Zro4PXM6H5EaSofyDtKrnKtQ
      KpRsq9qGICh4ZvhlepJeurIhcjoLTQEXhqImaL0BjHbK3W9gszvpzFYhCLIQ5bu3LGVDvT3v
      HvGLw6P8/rSLQqOGdfVFBOaS2odmY/nBl8jkcJp16NWyL397hYUTowFMOjXhVJZxX5wxf5zI
      HMU3EE9TZNLyxlk5rPqe9TVYDWrG/XIk00Pbmym16Hitx7Og3l5u1bO5yUGpRc9jB4cvuU06
      j2Aiw73ra/jhviFOTwTpmgxhN2lxh5NU2gxU2GSnhTG/nNf10dWVWPRqKmwGfnl4lMlAgngq
      y8/vW81sJMWoL86Vi51cschBnzuMQaOi0Kjhvg211NmNeW+ht4d9DHqj/PstS9nT62E2miae
      znHOG2VPr4cmp5lXu915mea4P87p8QATgQQzkRQHfWbWNZTgrGuH8uWy98/mh0BvgWOPkd9k
      SiK2mJ/u4nrSWhNZKYs/6aelsIUl9iV0eDvYNbyL8cg4mVyGems9b02+hS/po2OmA0/cQygV
      YlHhInxJH964lxfOvUCHtwOzxszjPY8v2JYnc0mKDcWscK748BPg/CQoMZZwXf113NhwI9uq
      t+GJeeia6WLv2F5OTp+k3dHOMc8xnut/jmQuyT2t99Bka2Lv2F4yYoYSQwnehJdkLklGzBDP
      yOy9aCbKhrIN5KQcJzwnODB5gFdGXmFd2ToGAgOsK13HPzbciun0b1C4O8FSDtFpEoYy9qk2
      EVMXcseaSnlZtuioKjTQ6Czg0QNDhBOyYGY2mkaSJHrdEZpKTHjmaA7noVcr2dU1RTCRoUCn
      xmbUYNLKOmL5/164FvF0Tg6fFgQQYFmllRdOuZgMJOiYCGLQyvyZkdlY3idfQKDRaaLGbuTR
      /UO8dW4mr2V4L0gSLKu0MBGIMxGIo1Up5qoyWcKJDDV2A/3TchUpkcnR645wzhvBG0nm7cmz
      osRUMMnjR0bzvQ2LXk08nePYiJ8xX5zeqTBOi46OiSAmrRzLVFyg45Nb6pmJpumaDGI1aPjc
      lQ0MzMkvE+lcnrRXZNLMCzGM5lQU6QU21Jjh2P/AbD8MviG7/c3ML5KoFWo6S5qYVanYXL6Z
      Pn9f3l/qXPAcGTHDUsdSwukwQ8EhBoIDTEWnaCpsIpaJsb1Gpue8OPgiiWyCRDbBSHiE097T
      85RgF6OlqIX1Zev/tAmQnwgI6NV6do/s5qm+p0iJKTJiBlfUxXRcvsMPh4bz3d89Y3uYjk2z
      rHgZX1//dXJSjkg6wudWfI60mOYt11vMxGfQqrSkc2maC5vRqXR4417aitqot9UTTUcx+gap
      HzyAkEtBwg9ilgPJer4x2MhUMMnwHH//88908PPDI/hjabonw/NYoYtLzdyzvhq9WolSIRBN
      5ea6tmYevLyB/f0zpHMi/nia0Vm5li0nMS4Mdk5lRe5aW4WjQEuJRZ/X6QLkRJHHj4wy6I1R
      VWTgE5tr6Z2r86ezstVKVaEBz3tEKF0MhSDQPRWitcyM3aSleyqMJMkin1Aiw9raIsKJDHet
      rSaclIM8NtTbcQUSSMDW5mIm/PF85UaSkLMPsmKevZrJidyzoQZRlLhvYw1PHB5lOpxibV0h
      3a4Q6ZzIV69rYW/vNMdGAoz54sTSWba1OPHH0myaS8q8+F57mXGcNa5fQXBs7qKkwFQCiaD8
      8xyCtgpO1axhMDpJn7+PmcQMM4kZRsOj6FV6WgpbyEpZJCTKTeWE02GsOisqhYpoJopWqUWj
      0PDmxJvzrptGqUFCWrBlFxC4r/U+ai21+cf+pAlwHo/3PM5waHjeY6Ik0u5o56z/LBqlhqqC
      Kt5xv0NWyhLPxNGpdPym7zcEU0HUCjWBZABv3IvD4OCr675KMBXkuOc4GqWGEmMJ26u3oxAU
      PH/ueU5Gx6nQF6MzVzBUVI29diuuYIqXAjKfvtCo4fhIgP7pCOFkltFZOcjuPIFLpRB4YEs9
      d66p4uRYkAMDM4iixKZGOz+6cwUSMBlIcOViJzevqGDMH2fnklJOjwfn+exfjHKrnmRGFpV4
      wsm8G8JVLSUcGZqdK39K6DUqOidDJDI5igt0fOv6NlrKzBw69/78Go1KQYFWxfBsDKtBQ1YU
      5wlc5NdWUqBTc+OKcjrGQxSbdZz1RFhaaUFKJLUHAAAgAElEQVQpCFgMGgwa5TyqdoXVgCuY
      mLs2EiVmHbu6phiYjuaLBCqFbCv/u1MuZqNpJgIJuiZD+YO9KMm28oPeKM0lBVgNGiaDCQRg
      UZGS/2N/B2uBQVZ+iRkkhYqZlR9joKQJe3QGBQoCRTX8qroNY3Ervf7eBRqTrCgbmo0ER9hZ
      tzOvJvTEPPQH+knlUkxGJ+me7ZariRdVi5Y5lnHn4jt5x/3OvMd31u7k460fR6m4UN378J2R
      i798U/mCxyRJYig4RIO1gc8u/ywOg0NOgEyFaLQ2sndsb77EdWDyADtrd2LRyMamh1yHZAsL
      pZpr667luf7n8nGWiwoXUWwo5g+Cgt9kYpyZOcMt2lUUVaT4utZLR6yQWytdfK/XAMh0BZVS
      QXuFFUEQyIkSkWSG6VCSn701zHf3XHCldgUT6DVKelxhet1hqgr1HB6apdZu5O821fJqj+eS
      /HyFIJvMHjo3y8FzM6ypKcSsU7OjrYSdS0o5MjSLO5TkqhYnNoMc2J3OiDQ6Tfz2xARvnZtl
      RbVtXtLlu9FYbKLOYaSy0MCyuUrWxWXaWrsRnUpWcT13YpKT4wEUAjywpZ5IMsvBAdk+5XNX
      NOA06+iaDLKh3k5DsYnHD8s3iBKzDkeBhtd65ME3MhvjsXtWsrTCylNHL8SSmnWqOVVYJv/3
      372umk9eXk9TsUmWh05HKbPq+P5lElV//KN88N3wWQhO0GXQ8+DoM0RyKVZUNfJva7/Knfs+
      SyjQxS2OpnluDhcjk5O3QKFUiLen3iaejeddSM4jno1zS+Mt/O7c78iIGcqMZXxp9ZdotDXS
      XNgsh7RnE6wtXcv2mu3z7BXhz1wBqs3VHPccz6fx2fV2HHoHHTMdBFIBljuXM5uYRZAEVpes
      5strv0y/vz/vz1hjriGdS9Mf6CeZlV3l1pSsQZREnux9ks3lm6ksqORXvb/CprWxo3YH3piX
      KnMVzYXNpLNJphLTfMn7OldruqgsUNBmDNGTq8Sg17G2roiXu9yyqaxaiS+WpssVpNcdWeCE
      fL4HEEzIKjCtWslsNEXvnB2KJ5RccJhdW1fIR1dX8vSxcbYtdvLmWS+ecIq3h3zsO+slK0qs
      rSskJ0o8f3KSqiIjK6ptjPnl8IqV1bY5YlrykszOZZVWzHo1r/VMk8qJvNbtwRNK8rebavNu
      2KlMjl53mM1NdtbXFfHOsJ8io4aHdyyi1KJjf78XpSCwqdHB569sJJLM8oeOKcb9cbY0OdjX
      7yWSzLKoxJx3nzbrVHx5Zwt2kwajRkXHZBCnWcfX/6aF65eWM+6LI0HeCkUhCJRY9Pz7ngH6
      3GECsTTXhJ6hvGUTmBwQmiBYVMMP1Sl6A/KNx53yo9YX0uE7gyiJFOuLF+wmzkOSJNrsbbwy
      +gpbK7fyyMZH2Dexbx6jwKCSGQbbq7fzjfXf4NPLP41db0cQBEqNpWyu2MzWqq002ZpQCgv7
      On/WBCjQFLCtehvNtmY2lm/k/iX3MxWbYjQ0il6t57jnOK+NvsZQaIgeXw/T8WmOe46jU+po
      sDXwncu+wzvud+axRxPZBP6knyWOJVxecTlP9DzBVGxKzhpW6jjgOiCnhNia+EpSyVU9r6LQ
      GBHWPYgQ9eII93Br7GnubkxTvfwq9g2GWFtbiN2kZdwfZ2mFdS7iZ/6As+jVXNNWSrcrTJnN
      wD/uWMRLHTJPaNKf4JZVlfiiaRQKAcucN8+a2iI6J0N4wkk2Ndg5NHjhTr62roirW508fniM
      IpOWO9ZUcXo8yKpqG65AgupCA/F0judPTqJRKfjkljp8sTQqpUBNkZFMViQzd9A0alVsaXLQ
      7ZLlkP91+zJeODXJuC/OTETODPZH0wgKgYk5gXvvVJjVNYXcuLyCF05PcqB/hjfOetnbKzNW
      PeEkKqXAmppCrllSilopcFmjg+lIkttXV7Gq2sZZT5gHf32KsVm5wpTOily/vJyqQgNHhnwc
      Hwmwt2+aP55x81LnFCql7CZXazfxsZ2XU3Dyx9D/R1LJEJ+XPAykLoSoaBTy/lyURG5qvImt
      VVt5ZeSVS44ztVJNLBPj6uqrWVS4iEZbIyenTzIdn0aURHRKHY22RgBubLyRVSWrUArKS3Z8
      3wt/1gQQBAGD2kBTYROtRa0UaAp4ZeQV4pk4S+xL6PPPTwAcDg6zo3YHAgIZMSOLFMQ0yawc
      vr2zbie1llqMGiOz8VkmIhOoFCrcMTc6pY5CXWE+EFkKTXDrwGGEqFe2UlRpIJOAvpdQpEIo
      PF08cq6S0YyNljILr3Z7kCSJ+y+ro95hWhCO3eQsYN/ZGVJZeY99dMRPcs55DuT9rl6j5NaV
      FRjnEiT/0DGVD8HY1GjPO08btUoeuaGNAwOz9E9HuLypmA0NsnXIRCDBbDSF06Jjwh+XXSAE
      yOYkJvwJSq16rmop4UD/DOFklmA8w84lpZz1hLluaRkfXV3Fv+7uQ5QkKm0GGopNCMhh2efP
      GMmsyGQgwZtnvagUAifmzHRDiYzcaJv7mx0FWhqdBejnzgedkyHOusMcH/FzejxI91Q471gn
      STDqi1Fm1fOtl3sZno3NO/DKDtAZHqyd5uv653CO70YIuyAVwauA522FfG71w4yGRknn0tzb
      di/nAucoMZYgIXF5xeWcmjmFLzH/e1EIirz///6J/bzlegt/ys/+if1srdxKnaWOh1c/zAvn
      XkCn0vHZ5Z/N63z/FPxZE+DdkJA4PHUYd8yNUqG8oPm96Pkvrv4i19VdxwvnXuAt11sMB4dZ
      5VyVnwxn/WfxJXxsrdpKp7cTV8xFS2EL/3ft/6Xd0c5xz3GyYpbN5RvZEovKg19rBkulXGKb
      vbC3l+quQF3awu5uD4k5Po4rmOCWlRW8M+JHkiTMejXlVj3LKq2cHr/gTZTNSTx8dTNZUaLW
      bmRLs5w9/Ouj4/S6w4z743zzb1rZ3OhgcEa2P/nCVU3kRNmHx6JX8703zpETJc55o3P2h3Kq
      YiydY3gmSiyV45olJRg0So6O+OeSVlJ57v55eMJJhmZipLIioiTxao+HWDqHTq3gX29cgt2k
      4bUezwISyvl4ohKLjnBS5j05CrT4o2kqbAbMOjWv9XjomAjiKNByaFA+tJ8vBsRS2XlbRYUg
      MB1KMvAeOoScJBHNKrkj+BO0gXO4W6/ngCLFZNsNdJPEl/BxfPq4HK0VGsIVcbHMIZPUjrqP
      giCL1WcTs2TFLAWaAhYVLqJ7thutUotZa8akMeX7USPhETq9ndRYaigzlWFSm9hSuWXB/v7D
      4M86BL8bCkHBtqptSNLCEAOQ92m15lpcURczCZmXIyExGZ1kR80OslIWb9xLOpcmkU1wLngO
      CYlMLsOesT3sHduLQlBwW/NtTMemebRhFWtKmulTK1mbFWgITCEUt8hmS0YHO1sKubyqmNMj
      04TnGBzecIpPPHGCrCjn3a6rK+K1bg+TgTgqhZAns7WVm7ljbRVFJg0PPdfJO8M+aoqMpOdW
      hHg6hy+Wot5hYtKf4BeHR9nfP8O4P05WlDg86EOvVhJP50hlc3k/0wuQvX+AeXkAAFaDhkUl
      ZrpdIaqLjEyHk9hNGga9UbzhJOvriyi36nnzrBd3ODmnfb70d+KNJPnV367hX3af5cDADMlM
      DqVCYG1tIZ2TwXzWcPcl6NGrqm0cGJBXIgFYWmFlNvbeMkyA0aSRycV3kc718IrNylOBJCvT
      HsbD40xFLkgzBQTWla7jk0s/yf3t99Ph7eD18dfzwvcH9j5ANBPFn/Rj1VqpLKikw9tBm72N
      XUO7aLW30mBtQCWo+P6p76NWqtlRs+N9P9v74S+yAkxFp/jigS9yYvoE0/Fpyk3leVmbTqXj
      i6u+yOqS1SRzyfzhWSko+Uj9R7hj0R38tPOnJHNJ1paupXOmE2/cS07KYVQb6fH1kMwlSefS
      ZCX57uAoWoS3sJr/HHoeybmYy3IKhGQQFl0H4+9A3y7Uw6+zslRDSFfG8oYKikzavHVJIpMj
      m5Pwx9KolbKfZqFRg1qpYFuLk8ZiEx0TIV7v85ITJVZU2/DMpThaDWpuXlHBTDSVN4hNzw0m
      kLdLt62spNSip9ymf08KcWTuznxs5ALldWdbCbetruToiF+WVhrVWA2audp7jrvXVXP/5joG
      psM89c44U8HEgoTK87AZNPTOpcWkcyLinEdPz1QY7RzJ73zkUTor5kuc1YUGah0mFILAzvZS
      qgqNbGiw0+0Kved7gewQvXNNDd/OdaPVmmmzt7GmdA2emId7W+8lko5gUptYXLSY4fAwhyYP
      5ZVeLw+9TLmpnEg6wp6xPYiSSE6U5Y83N91MRsygElRYtBbsBjsvD72MSWOSb6YS3N9+P82F
      zX/KkM3jL7ICxDKxfOctnUtTpC9iqWMpxzzHMKlNJLOyfeKnXpdpE0vsSygzldHuaOcrh78C
      yIkfu4Z2MR2fptZSy/Li5RQbimXBTFq+8HqVnpHQCP6kn0Q2wZaKLXx06QPQ9XsY2ANlK+Tz
      gJiBghIWW3P8IPEYsa0/Yd+kNNfsymHSqml0yh3hJRUWtrc6MWpVvNw5xRlXiD09Hr5zy1IW
      lRTIzZ4GO1PBBIl0jng6x5ee76K5pIAdrSX0ecLEUlmsBg3BRIY1NYX88vAoV7eVUKB978tr
      1Ki4eWUF7wz76HaFaSg28cnL6/ns06cZno0xPBtjaaWFCX+cSpsejUrBs8cn+EPHFGO+GLG5
      PC69Wjkv++w86uxGDpybWfC4hDxhv3BVE99/4xwD01HW1BYSiKUZnInyteta+OnBIYLxDPdu
      qOGmHx3hD50unAXvnZADYNdkCSpDiJKYD6HbMyoP5uXFy3mu/zncMTc1lhpyYk7Wkfu6uafl
      HtaVreOY5xhqhTp/SHYaneiUOuot9XR6O3lx8EVERNqK2riy6kpqLbWoFCq2VW1jQ9mGDztU
      F+AvsgIUaArISBnC6TBX11zN9Q3X88vuXzKTmMGf9HNk6gjjEdkmxR1z0znTyXBYLn0dnDxI
      ob6QIn0RJ6dPkhWzpMU04VSYveN7sels2LQ2DGoDtzXfRiwT4/DUYWYTsySyCf7Bugxh8HU5
      Wunyf4TYDHjPgq0GsXQ5T0k7+MJrPo4O+7huaRmrqgvluB5XeI4qkKBnKkznnBMEwGxUDqTu
      ngoRS+Xy9XqNSslEIE46KzIVTPLAljruv6yOzskg922oyauvtreUcHLMTzIrV50uxfkpNmv5
      /WkXg95o3u/TN6fkmg6nEAS4cXkFy6tslFv1nHGFWFFtI5bKYTVoSM2ZbjU5TYQT2fy2SinA
      urpCVtYUcnT40oKKnCRRXKDj+Ggg7xIdS+cIxDP4Y2nOTUeJJDPU2o30usMIuRT3VnjoCOnJ
      iAsrLAJwc6WLZ8OPMRr3MBwaxqwxo1VpkSSJjJhh77hMiQkkA5g1ZgKpACpBRSKXoGe2h+HQ
      cJ7CfGvzrfT5+8iKWe5suZMfnv4h4cycg0ZW1pcHkgGuqbmGv13yt3/W4fc8/iIrgEap4cGl
      D3Jf633olDoe63qMQCow73cOuw7zyx2/5NtHv00oHSKUDqEUlPz31v/mZ2d+hivqwq63E0wF
      abY1MxgcJCtm0Sq03L7odn54+of8pPMnWDSWPE+8JjILT90q3/EBlGrwj8gc9KE3OGfZyCPH
      MvntiffEBFfNtfDPQwKOjfipLzbNxRvJ6TF97nCeA5TMiFQVGbhlRQUPP98l29IIsl9/Ip3D
      qtfw6P5hkpkcV7eWsK/fy0QgwUQgwZraQs7MVWlAHiwqpcDA9Pz9eySZ5bcnJqmw6fnIXKyo
      SiFwbGROk1ygo8Sso6m4AEEB3ZNhjo36aXQW8MBl9Tx1bByrXk2ZVYdBo8Kif+9BYdapWVNb
      yKvdbmKpHItLzVj1Gsb9MbKimOcpfee1fpDgXxaPs63vK+hKH+Z7MyvmWaRoFHB9ySybVxl5
      qffC4964l0AqQCKbQCEoKDGW4Ev4aHe002htpKqgipyU45jn2Lx401QuxZGpI+yo2UGdpQ6T
      2kRLUQvumBsJiWJDMQ3WBj6z7DPUWes+7BB9T/xFJgCQZ4gC+QbZxZCQiGfirHCuYDg0jF6l
      Z3XJataWruXU9Cl2jeyiwlTB8uLl5MQcG8o2EM/GcUfdvHDuBUqMJRjUBhLZBLc23YpJbeJW
      Vz/C+G8uvMnQfpksB4CANybOswWJp3McH50/MeXPJjtP/92mWn5xaISV1TZ2n5lfydKplDI9
      YiLI8ycnuaK5mNoiI/c/eWKeOewzx8fzbFSQG2lXtzrJ5CRi6Sw1RUZ+c3T8PUXtk4EE5TY9
      iXSOI0M+VlTZGJqJ4gom6HPLeQDZnMi/3NjG1/+mBb1GyZdfOMPhc7OsqpETL/s9EawGNbVz
      tujvhlqp4N9fO4tSIXDNkhK6JoNMBZN8dE0V2ZwcuCeJIldY3AyJZVQ7i1Dp7uK+inJWT/Sw
      u9vDWMEqCqsWc4X0DpsKPKjN69lZso5d7iOoFCrWlKxh77hcvJCQaCls4abGmxAlkYf2P0SL
      vYV0Lr2gswvymXIoNMRZ/1me6H2CMmMZ19Zdi0apodfXmzdn/vamb6NVaRf8/z8Ff7EJcDHW
      lq7l2f5n5z1m1VppKWqhzd5GPBNnOj7NdHyaQDLA6+Ovs7FsIyqFiqf6ngLk/f4z1z7D7pHd
      HHIdIpVLYdPa6JntySfMTFvKKCMfgYvkaCJ+9SNkjj2GORFiWfQdFpnrORuWL9Ka2kKKjJpL
      +ofWFMlBc4PeKMNzNow9UyH54KtXc9+GGgwaJdmcSDor8sbZaWLp7LzBD/Jq0eQ0UWLW0TER
      os5hZDqcYmA6QiCeZqQwlt+uvBf6PRH+6SOt/P6UiwMDM2yoLyIQS6NRKfIM05c63TSXmDnn
      jc7Fq8qCl/PVrHAiw1d2LubF0y6ODPtAklet1nILg9PR/Ip0YjTAbDRFKivy3PEJtEr4ZftZ
      ikxqmo1xFOog7P0atN+G8sC3aQ9P0Q4QfRI2vA5jwJ4fwuHv8k1DIXdsfZj/DJxi98huKgsq
      uaziMoZCQxxyHeILK7+ASWNiuXM5JrUpL1p5d8C1KIkcc19YGUZCI9SYa7i75W7emnyLjJih
      z9cnU+//lxPgL3IGeDdqzDWkxXTen9GqtfLIxkeot9bz8MGH2TO2h8noJAcnD9Lj6+H25ts5
      OX2S/kB/PsYmK2bpmOkgko6woXwD+yf2M5uYZVPFJpLZJC8MvkA3KdZUb8WYiqKs2cyxFbfy
      UMf3eCrlQqO10Oru5KoVtZRnPVxVmuTLd+2gQhVgz2CMVPbCHdisU6FRKTk9HmQmmkIpCHxs
      ncwcjaVy1DlM6DVKrAYNjx8ZxRdNI0qyfcqlBrNJp8IVTBCcE+dXFxnJimI+5vSDNLnZnMSO
      1hJeOO1i3B/nxuXlfPvmdjI5kT29Mm9Hp1bwvdfP8cIpFwVaFfXFJtorLFgNahLpHOvqi/i7
      zbW83jeNWqlgVbWNcX8ChSAQS2fz5xKdWolJp8KkVfF3xQM8vEJkWbaT4o4fI4wcgJEDUNIO
      xYvB3SEXGUDedqp0cPC7eYankEmg9Z3jl6oUgUwEEZFeXy9KQcn/bP8faiw1vDj4Is8PPM9I
      aIT1Zesxa82Mhcfyf7tCUKBRahaE2gVTQcwaM7FMLC+cWupY+id1fS+Fv8oEUAgK1pWuo85a
      x1h4jAZrA+2OdkZDozzW9di8352KTrHKuYqR0IisD5gL115cuJiWwhYGAgNMRieJZqKUm8oZ
      j4wTSAUwqo1olVp+5DvBqarlXLXzx3zt5Hfp8/cRzUTpFKMMN29D7znObeNPsTS0D3VxI2Ud
      32fRola8imIMGiWXNzuIpXKcHPMzE02xod6O06Jj9xkPfR6ZO+QKJnh7yMfvT7uwGtRkchKN
      zgJuXVXJsRHfgkZUo9PE2Gw8v8dvcBj5wZ0ruLa9lJOjgQUuEguvn8zhqS4ysKHBzsYGOy92
      uJgMJlhaYeXhHYvY1+/Ns0NFJMqsevafncEdTHLbqiri6RyHB30kMzkUCoF4JsdkIEEyk2ND
      gz1fASux6DjnifC5lhgfV/yRkkILwjs/ks9RAEiQisDKj8PkSUic30IK0HAljOx/12dX0l+z
      DqXWxF2L7qLYUExWyuYNal8ZeYX+OV7QeVe40fAoToOTpsIm7mu9j6HQEKHUwv5EPBsnlUvx
      gyt+wJqSNSiE//1Y/atsgQAGg4M88s4jBFNB+gP9nPKe4vKKyy8pnn/67NN5df8nlnwCf8JP
      Kpdie832fPsbZBOuL63+EqIksmt4V/4uMR4Z5wv7vjDPvEtCYnv1drTTo/l3HPFn+Inuqxzt
      ChNNRbEa1DjNOnTqKOc3Uq5ggkl/4pIO07FUln5PhLvX1/B/r1lEJicy4InwSrc7P9grbXpu
      XVmBUhA4OuJHMydk+dj/HM0Hb38QjFolT749xmQgzi0rK7jlJ0fmaYwPDHixXmTIq1Up6ZwI
      IiGLYN7om6ay0IDNoOYnd68kmcnxUscUmayIQiBvdego0DLkjfGPbSE+HvofFK6ToNHAu7+j
      TBze+g+ovwKsVeSCY0zVb6Zo3QMYTj8JoQvODOMFdg76uvjKuq8xGh7lpaGXiGfjHHIdokBT
      wGUVl1FuKicn5lAr1DzR+wQA7fZ2fnDlD5AkidPe0/NWBQAFCmrMNQwGB/nKoa/wTxv+iRpL
      zYe6nu+Hv8oKAPDq6Ku8Pv56/t/pXJoyUxmuqGseR1spKLml6RYGg4PoVXrWlKzh6bNP0+fv
      4+T0SXJiLj+wVQoVG8s2ctZ/lt7ZXgo0BTTbmik1leJP+GlztBFOhZGQKNIXccxzjKy9Eb9a
      Q7jiPh48XcvbYxFCieycK3OGE6MBFAqBpZVW6uxG+j0RMu8jVZSAc9MRVtcWUe8wcnmznOs7
      6otxebODqiIDPz04THuFhVKLnuuXlfNatwd3SA6sOB8acakJdh4rq23U2I1oVEpe6fYs2DIF
      4hlMWhWXNcpWKte0leKLpfPVmWWVVjY32jk4MEu/J0omJ/GtXb2UWeTwjPNieV80jVLKcl21
      SKMwBZWroGQpDO9b+KHSEZjuwX/5l/iUYobvB07z0shulq7+NFlvH3qVjo4CG1+z6FDqZav8
      H57+IYnchTNSOpfGHXVzc+PNPLjsQZQKJW9PvQ1AmamMK6qu4M3xN5lNzDIaGp13NljlXIUr
      6mIqOoU75saut7PSudDq8E/FX20CTMen2TO6J/9vAYGPt32cJlsTXTNd5KQcSkHJTY03cW/r
      vbhjbj7W8jGqCqrYNbQLERG1Qs2nln+KicgECkHB+tL1PNv/LCenTxLPxNlWsw1/Ul4hmgub
      OTB5gNaiVkbDozgMDlLZFJ9f8zAnFTp+3tPK8Oyltx7RVJZ1dTLF9zyB7P2QyUmo5zw4z3oi
      fPXFbnyxNEMzMcosOhqKTdyysoKfHRwhmsoyG03nqRS1diPLq6wMzVyaV3M+VGJZpZUCnWoe
      T+li+OdYmjPRNL3uMDcsK6fUoqPGbuSaJaX808u9+X7GyGyMmUiKQCKTJ68Z1RJfMu7mX5f5
      aV66FmF4P4Sm5K1P3C8P+POw1oAoQibKr3I+/hAdJCeJRDNROhJufqPJoVv7ID8RZxmcy/jt
      9fUSTi90k0uLaWw6G29OvIlNZ8Out6NT6fjk0k/y1UNf5emzT9M720tWytJS1ML2mu1MRafI
      SBkqCiqYiEygVWq5seFGGmwNH/hdfRD+ahOg1FiKO+ZmIjKBgMDiwsU8uOxBNldsZnvNdppt
      zQyHhhkJjTAWGWP38G6yYpZiQzHhdBiLxoJKocKf9LPCuQKloKTN3pZPqhSREwWnolMICKwv
      W48n5qHB2iDb4lVupc/Xx6npU6y23s5zR4O8z00XdzAhG159wP78PLRq2RLkpweHOTZXWpUk
      OYn9iY+vob7YxMoqG7etksNBhmeiFBo0rKiycWRoljKrHp1akY9aMmpVrKiyceeaKo6O+Cgu
      0OIJp95zooBccTpf9Wktt7Cuzs7JsQA9U2FcF1W6rmkr4b6NNbx1boZxf4JKq4Znl3WyKfB7
      NLEphGwKup6B8CRMd0PVWmi7BdQ6eXuTiUE2BYuu5Y3qZXT5evKv7TA4WFq8nOOzHcSyccLp
      MCpBhdPonJfLezFSuRT9gf4863cmMUMkHblgbjt3ro2kI6wpWQPA5orNPND+ANXmam5ouIEt
      lVvmKbv+XPzVJoBKIQudlzuXs39iP1OxKdxRN1dUXoFdbyeSjvD02acJp8MYVAaMGiNds128
      Of4m3rhXzhZAxJf0EUqFGAuP4TQ6mYhMkMwl0Sl1SEiMhkdJ5pJkpSwlxhIGg4OUG8vp8fUw
      FhljJj5DJFTJiPv9vUZzooSAsEAw814oLtBx88pyznmj8yjWi0vMXLG4GKVCoNZhkjO0lArc
      YTlTq8yqk1NcBn2Ydeq5EIoCzHORTPv6Z7hxeQW3r66kZypE73t4csqd4nIm5vIJ9vV72dXl
      pr3CypYmB+mcOBdyIVey+jyy5XsmK7LCGuW22R+hXrxDDiSf7ob4xaQ9AW75BXj7YPxt2dlB
      EiEwQkn7newLDhDLxtAqtTy08iEOTB6gx9dDnaUOh8HBV9Z9hZaiFg5MHFhw5lMpVCyxL6G5
      sJkbG27ErrejV+nxJrxMRefnGWSlLEsdS7HqrNzTcg8Og4M2exu1ltq/yOCHv+IEEAQBlULF
      VHSK3w78FlEScUVd7KjZwVBoCE/MgzvqRquSM8V6fD0X3KMleeAXG4u5tvZa3hh/g48u+iiH
      pw5TaizFqrPyuRWfo9RYyjGPbMZ1Xd11rHauZjg0jN1gRyEoiKajFGgLcKpWMOgyvO/n1agU
      VBcZ5iUivh+WVVqoc5jIiRKhRIZoMktlkQEB+PH+QXadcdNaZqHTFeKhZzvodUeY8MvJ9Cat
      CqNORW2Rke6pMO2VVnRqZb6ePxtL8+tx2UIAACAASURBVPvTLvwxWfRyqbLp4lIzp8YCxNM5
      vnBVE8OzMXI5iYZiE88en8Afz3DT8nKCiQxnPRHcoQQmrZpvLfHyt7PfwZLyQPkKuPY/QFDA
      8P4LL169EWovg6OPygzb85ByCOUrSRQvIpKOcHfL3dzYeCPxjKw5Xle2Dq1Sy9bKrbwx/gaT
      0UmS2Qvif4WgoMxURlbM8s8b/xmFQm6SrSlZQyqXkkNULsJ5M6zf9v+WNkcb9db6D/Xd/Cn4
      q1WBzmNR4aJ8ObTaXM3Xj3xdHuxijiJ9Efe13scrI68ssMADGA2NYtFaaClq4YTnBIOBQbJS
      FgGB10Zfo9HaSIO1gTpLHaXGUh7tfJSp2BSRTISVzpWMhEYQEEiqBjBonPO49u9GmT7HHVVB
      et2KD6zTKxUC0+EUt/7kCJmcRLOzgGceWMeJ0QBffbEbkPlEX37hDILAPBZlTpTY1TXFQ1c1
      cc/6GlJZkb29Hgq0asw6FVlRYkuTgzFfjEUlBbSUWfinl3ry9AQBqLEbuXF5OU8fGycYS/Kd
      V8+SzIh8++YlPHFkNK9jngolLkrYEchlUqwc+B6O9FySytGfyq/Y9QwR52LG00EWF1SjGN4H
      P14nJzpehJyg5D/Gd/NSZgYJiUc7HyWWifG7c79jXek6ft37ayLpCMOhYU57T+dD1Pv8fXJ9
      X6HJUyAe2PsAo+HRuU8mUG2uxq635wseWqWWMlMZkiTx+RWf/4sceC+Fv8zt/n1g1pp58pon
      efKaJ3HoHZz2npYD0KQc3riXx7oeWyCgOY+MmKHaXM2XVn2JXp98MAK5xHlwQrbUy4pZ+gP9
      /KjjRygFJQoUpHNpfAkfWpUcwtAZfJX22vfe2ysEifKqSTYZOrmi+tJ5XxdjaZmJ0dlYfqL0
      T0c4PuLH967oIlcwccnAi0xOdnSYDCR4qXOKcELuNXzx6ma+99HlxFJZRAk2Nzq4rr2Ur/9N
      C2VWPRa9ms9d2YjTrOVfd/dxWa2RZza6icZiTIcTxF19bLLH0asVGLVKruYd7irzYNQo0asV
      3NigooyLGKJSDiIusFTwvMXCR60qhtQqSMfker++EBq2gdoAehsjy27ldTGS39YksgkOTh7E
      aXBi1pjRqXQY1AbsOjsqQSX/rLcjSRJOg5PVJav5xvpvMBmZzA/+89/naHiUAk0B9y+5n41l
      G/nZ9p+hV+rpD/RzfcP1Mkv0/Q5xfyb+6isAyGzRYkMx3b7uBc+FUiGKDZcOxCjSFVFiLGE6
      Nr2gMyghUWOuwRV1cUvTLQwHh/Plz8HgIG+MvwHIFhkfa7mTY64Xqa+4khGXBVHKkyfQqCSq
      K8eYVP2BCf02vtnqISVUc3A4vEBsohBgbamCr5W8xSdDy7m4PiMIAo3OArQqBamsiCDADUsc
      vD3oZeBduyqlQuDIkI/pkNx1zkkSgiAnWZ4Y9fP8XLhdLJXltkAlX33xTH6yPXpgiCKjBo1S
      oHLyjzSd+S++v+aHTPqiXP3OvyJoTaxefj/q0BgtkRNIRgdbasrJFrfS0v8T1NZS8IYASVbU
      RaahdClbSxaj0euoUVhh7BiSmCPXdhOKtQ+gCE+B2oCUDiC8cg9ctJCaNCasWismjYkKUwVG
      tZHxyDhX11yNN+FlLDxGlbmKRDbBUGiIfRP7Fjg6n8doaFT2+kz4+Pv2v+ee1nv4r5P/xVXP
      X4VZY+Yj9R/hU8s+dUmf/z8Xf7UzwLsRz8R5fuD5BSa7ChTc3nw7nphnntpfrVBTaipl3/g+
      dCod7pg7L7IBsGgt3NBwA+6Ym+vqrkOpUDIdn2Zn3c48XwTkFPvx8DiSkMbDXmyWMOsr2lGo
      /ahMZykqP0JU9yb/bKhl49EnMA++zDbDIJWb7iCWEUAQMGuVLCqEBxojfNG8j4rsKA57EYd8
      ZrISbGkoIiNK/OfeAewmLfdtqOETm2u5L/Qoqsm3OZxrJSddaNmvrbYw5osy5Qvx+bY0w0kj
      KoUiT8E+X4kqteo5dG52notcTpSosan59eVRrlhSjcLbR6XoojVxAlVoFGU2Rml6FKf3MAp7
      IwopS/HEK5QUO1HG3LJdSSYO9ib5Lu8bBHcn1qEDtBtKUaz/DGOVK/iRIsKvsl4Gg8M0lK7E
      YLBj1piZSc5w1ncWERGb1sa19dfyu4HfoVVqUSrkaCytUstscpZeXy8SEnqVnj5/H964F6Wg
      XNDkuhg2nQ2tSsvm8s3848F/JJgKIkoiiWyCjpkO4tk4G8s2/q8pEOfx/2wC6JQ6zgXPMRAY
      mPd4ibGET7R/gmWOZbIgQqlhcdFi7lp8F/sn9jMeGccT8/CFVV9gLDwmhyGbSmkpamF58XKW
      OJbwjSPf4C3XW4yGRollY5QaS5mMTqJSqLhr8V0MBeXWejwbRaGZpa4sQXfy1yyt1qHXpbim
      dAO3dO1GmZTb75qYi7YqBzdqjnLbUjt3FvZRw+/Jqc8RLa7BYamhNfw2d9TEuL1Fxx0NWX7U
      Ba5QikxO5Fv1/aye+g2K2T5a9AEaBRdRwUShTuDmyghfDXyVm3mDm4tGWTfw72jaPsLuUQlX
      MMFsNE25Vcc1VSKfWOPgpb7IAnc6dS7BZwL/hlqQYOQtWQ8d84JzCWiMcg2/dKnM0bFWyeEU
      A6+CyQkVq2DgFXmbk7yIbiCJ4O4i6FzMp87+nLeCZ5mKTdE508lQcIgrq65Eq9TSZGsilo0R
      TAUpNhSTFtPUmGtY6VzJHwb/QHNhMxqFhj5fH+WmclSCivvb78cT8/CxxR+joqCCI1NH3nOc
      GNVG/Ak/3oR33jbpPMYj49zQcAMG9fsXNT4s/p9sgQCUCiUPrXyIdC7NIdchOcFbAn/Szz2v
      3CP/jvD/t3fmgVGV5/7/nNlnMlsm22RfCISwJJCw74TFpfxQqNpa9dYdsVao3trbeu+t3e61
      Wq9WsVZrrb1a5daKgoKKCBLWQNgSIIGQhayTZDKZSWZff38cc2RIQL21rvf7V3LmzJl3zrzP
      eZ/3eb7P95EzL2sea8vWYtaYWV+/Hk/YQ6oulSPdR0jVpZJnyuOKUVfwq6pfse7ourg65Bgx
      DnQdIMeYw/T06TT0NzAQHCAai1KWVsbp/tNk6DNI0iQxM2Mm95bfS5+/j/cbNg3fhHefRF7/
      BpFAPwdKV/AT23qC7hDzTMn4Ri0ju/soOZZk8hxHiMmyuCvdwO8DVmYZe8it/DEQAn0aitV7
      uGzrv3HZsZ+ATAODFgT/B+G+kB7SJrC9W0ck+uHKqJOF+VfLeyQU/ojxGX56TvXEDa1M14vK
      0ynWPvDBuGVKGLVQnNgNW3lfo6TOkMY8RxtjXb3IQ16iPSfpSswi9Tt/RfnGmngDAIhFqD32
      PI3B5rjDh7oPUeeoo3Wgld/X/F4KV3a6OznxQU5gV8cuxieNZ2XhSl6uf5ksQxaRWIQCUwG/
      2PcLXEEXGfoMflD+A9YdXTei3L5RZSRTn8kDsx5gff36Ya+D2IjlYlL9nxSf2QoAoFPqqMip
      YEneEtoG2mgZaJFCn/DhZuit5reIEmVv516W5i7lcM9hqmxVnB04yxnnGSrbK1mUs4hsQza1
      9lrRmM7BlaOuZHHuYvZ27sUXEqXXixKLOGg7SJ4pjxgxdrfvpt5RT0lKCZW2KgpTS0mxnUCI
      RghmlhNd8RTyvLk8Fenh2cZXGZc0Ho1C1DWq6z/FQ737yPANUFz7GuHkQka59nNVeTazcnTI
      T29G6uacNg7BeRbBVoMgkyOkTQTnB6prKUVgP80xUwVH7B/GtccrOljZ9zRKSy6TkiPs75Fj
      94l7gBJzkIcjv8YQ7BWjNPnzRR3+cVeK6su9p9g46yZ+62tEYc6nRm8mOXM6gquNlrSx3B7t
      oKTwUjLOHhCVNc7D6ZwytvrjgxJymZw+Xx8v1r04IkkNRPauzWOT1L9dARfd3m46PZ1EohHC
      sTB2n529nXupyKmQCp6GYFQZuTT/Uqnew+6zSyHuc5FlyOKGcTegkn90sOLj4DM1AAEBuSCn
      qquK544/d8GuMoFIgE53J/dNvY8tzVuGSecFIgF6fb0kaZPwhX1x1WcKmYIbxt1ARXYFJSkl
      rD+1nmUFy8gz5XG87ziLchaRZchiT+ce+vx9vNf6HmcHzrI1YEMz+bt0FszmCa2MPfZadNYS
      dtuPoZApuGXCLRhVRtbXr6c8rZwUXSopGVORZ01hXdhGgcKIJexHOP2WGDVRGyDggpMbRQpx
      7ixILxE3nn7Xh1nWxDwKC4s44THh8MMofYj7lS+RlZGJcPRFTKf+ytWFMaZNyOBK5Q7uTT6K
      sfcAAjExQxsYENma6aVEvXaOKAVe1KsZ/OAeqZQ6NjiO8keZh9rEdCz6dE65mpmdMRN1y16E
      D1a+GOC35NM69bvUDjTGqSvrlDqaXE0j9oc4H+6Qm9mZs8k2ZNM22IZVZ2VmxkwmJk/E5rHR
      7GpGJsgYnTiahdkLUcgULB+1nOvHXc++rn1U26qpyKlgduZsKtsr47LJSpmS+6bex/jk8V++
      PcAQorEov9j/iwuGPofgDrlJ1aVywHYgbpUYgjfkRS1Xk6RNwhvyEovF0Cl1LMldwrVjr0Wj
      0GDWmKntrRV7EXfswh/xc6j7EK2DrVw15iraBtukJ1owGqQr4mXJxH9ie3slZ5xneKPpDU73
      n6bH28PO9p3km/Ixqo0ka5Mxqo08W/cCW9yNzB/1DeaU3oSidR/UbSKs0OAbfwXKtmqEaBjC
      fpFTr08Fg1WkHDjbxc2oIR2DTsPSzt9xSaaPOVlnsQrtmAQ52E8jxKIowh5Ojipkc/gkrYZE
      sv2D6KMxurPLeWvsAopm/gBZYICuWatZ3V9F9AOpkNP9p1EpVDQ4zxAhht3fh0ahYTA4yO6w
      A582keQYCKoE9mi1PGBO4DV7NcTE5iY5xhzK08qx++wXlBsfCTaPjVUlorxJXV8dDc4GXAEX
      V46+kmhMpLAUmAskXdghScwlOUu4Zuw1TEmbgk6h45K8S5ALcpQyJROTJ3Lf1PtYkL3gU6FB
      D+Ez2wMMYYjW8HFQa6+9aOzXE/Jw0nESi8bCnZPu5MW6F9l2dhud7k4enPsgm5s3U9leGbfS
      xIjRPtg+rGINxLyDVqFFEASUMmWcxpEn5KHR2ciC7AXsbNuJwy9StgORAIe7D7Ovcx8qj42f
      Fi7kdZmX08EW7rVkkTnQiyx3FvQ3Q90mvAXz8CrUhArmkGhvRK0xIbRVYfK1ovfruEWRRfro
      qdyTNo+E/mY0/kG26RM4ToDtAw1sc51ie1o6T1/5ew55OtjbuZtROj1jZ6wmVa7i2+NuoH2w
      nY2NG+nydMW5CgpBgTXBSiQWIdeYT6OliD8IW0jVJFE/2EIYPwTFzK1GrmFN2RqMKqMUUv64
      8IV9vNbwGkd7j0q5m3Z3O43ORjwhD4e6D3HAdoAkjbiCaxVaFucu5rL8y+LqfC0aC2vL136i
      z/6k+MwNIBwNj/hEHwnJ2mTsWvuIq4VepUer0BKNRfGH/bzT8g49XnGzWN1dzW+qf8MB24EL
      ulnukButXItckBOJRaTJ8fSxp8Ww6QiG1+Xp4rFDjzE3ay6FiYW0DbahV+lpG2yTdE6fHLUc
      jUJDd99Jbk/UMj+3gpqQk8tTxjAqvYiXcNEsj5JvTqWwYDK3hrU4/A6M3l468qZy08Rv8vjR
      dazo3IvZoqUidTbNchk9PUekjXqj387qo4/S5GwiGA2yp3MPpSml3DnpTjY1bqJloIUZ6TNI
      1iaTa8zFrDajlqtJ1CRyou8EgXAAp99Jj6+HWVlzeL/tfc53bvwRPxsbN1KSUkIoGkIpU3Lr
      xFslGftOdyfT06dj89hQyVWY1CZO9p1EISiweUUJ8/PrfZ0Bp7TihqNhriu+jhxjDlPSpmBU
      Gz/WnPi08Zm7QCqZis1Nm4epRoyEb4/9NpNTJ1PdXR3nf8oFOfOz53NJ3iUYVAauKbqGRldj
      nKF4Qh5JhW4kCAgka5O5a/JdyAQZwWiQBGUCk1ImIRNk+CNi95ohA5IhY0XhCsZaxuIOuqls
      r6Q4qRitQisxGgF6fb3iky8a5tLRV/Jy+zZsAQeH/d3IrCVEZHK+M/6fmJ9TwW+OPEGHOYNH
      bZXsS8nm1UAnJ/rrqXPUEYgEcBHhmKcDrUrPopxFFCUW0R/oxxV00ePtkZpHhKNh2t3t1Npr
      RYmaaIjVpas51HOIPZ176Pf3s3zUcjY3bcbus7MgZwGn+k/hCriYnDZZXGlHeFAIgoBZbabe
      UY9CUDA/ez4DwQFGm0ejkquYap2KQlAwIXkCRrWRosQiaTNs0VjIMeZIPeM0cg13lt5JnjEP
      h9/BnMw53DThJsYljfu763r/HnzmK4BSruTygst54sgTFz3PqDIyK2MWza5mSpJLaOhvIEGZ
      gFFtpNvTzftt71PZXsninMXMzJhJjb2Gmt4aQtEQeqWehdkLean+pYt+BsCsjFm8WPciHe4O
      OtwdHOk5wqSUSVgTrAQjQUnJ2KKx8PqZ1ylNLcUddHPbxNvY0baDY73HGJs4lnmZ89jduRtv
      yEs4GsYddGPVWVHJVJLxvtf6Hq6AC4PKgMPvIN+UjyfkwaQ2o9QmkarSS+WCQ4gRQy6T893x
      30Wj0KBRaPhD7R9G/C6NzkbuLrub6dbp2P12KXjgj/g50XeCgeAAkViEvZ17WVG4AkEQgxJa
      hXZEScv0hHSStEnSOE45TrGxcSPlaeVMt07HHXSTqEmkx9uDTCYjFAlhTbAiCILkvjx19ClU
      chUrRq+gqquKt5vfJkWXwq0Tbx2xcfVnjc/cAACuHXstu9p3xbXFPBcyQcb1467nF/t/wUHb
      Qel4rjGX+dnzefzw49IT682mN7F5bRy0HWRxzmIa+hu4reQ2xieP55XTrwxTHDgXmYZMau21
      tA1+yHiMxqLIBBllqWXolXpyjbm8fuZ19Eo9OqOOFYUr0Cv1ZOgzKDAXMBgcJM+UJ3UkDEVD
      zEyfic1r48ljTwJQYCqQuO9DVVDOgJNbJ97Kn0/+GavOiivoIlkrcmjOh0FpQKMQldmO9R67
      4PeJEWNf5z7ebBSby2XqM9Er9ajlakLREEtyl9DobCRKlDlZc3iu9jmqbFVMSJrAkZ4jcauA
      Sq5ibuZcqS9vKBpiY+NGQMwLHOo+dMFxgEhm+1Hlj+j2dmNQGZicOlnad7mCLl6uf5kfT//x
      Ra/xWeAzd4FAvDnzsuZhc9toHWyNS0LplXrunnw3XZ4u3j37btz7bF4bZ/rP4A3HE8wuzbuU
      mRkz2dG2Q6w78HSxNG8pZwfOSr75SLiu+DpUchU72uJLAK0JVhblLGKsZSxlaWVUd1czyjwK
      mUzGy/Uvs7FxI5saN+EKuihKLGJry1amW6fT6emkLLWMB2Y9wOtnXqfX10soGmJs0lj8YT9r
      y9Zy3H4ch9/BslHL6PX1olFoyDPlUWQposHZQKG5MC5IIBfkTEyeSFWXmAc539U7Hya1ibMD
      ZwlGg6RoUyhOKqbOUUdRYhFmjRm5TI4v5OMvdX/BH/Hz7aJvc3n+5dT110ktRdMT0knXp1PZ
      XkmNvQYQV5GPiyG3cOjBEowEaR1sxRv2SkY2PX06M9JnfOxr/qPwuRgAiLHlxbmLJd+2PK2c
      5aOW0+5up3WglUPdhy5407UKrbTBMqlM3DvlXmakz+Ct5rfoD/QTjATZ3LSZpblLcfgdOPzx
      EoECAkmaJA53H6aurw6lTCkZlUqmQiFT8NdTf2Vry1YEQWBV6Sr+fOLPHOs9hj/iJxKL4I/4
      aXQ2YvfZuX/G/Vw95mr6/H14w15MahOekIcmVxMGlUHsYBjysSR3CW82vUkwGhTj34XL2dYq
      Rq0mpUzicPdhAhGx8aBFbSFRk0imPpM9nXs43ndc8ueHIivnY2jlmpUxiz5/H93ebuZmiU/x
      N5reIBQNcU/5Pfzx+B8JRAJS66DK9kqyDdnEYjFMahMqmQqH30Gfv4+B4ABFliIcfseIlPWR
      cEneJWQkZFDv+LAr5ITkCdww7gbaBtuYkT6Du8vulla1zxNC7INwh8fjQa1Wo1B8Ll4RICa4
      frDjB4SiIRr6G0ZUmMsx5PDj6T/m1dOv4gw4CUZFdbFkbTLlqeUkqBLwhrz89fRfuWbMNaJE
      n7+fLk8XZ5xniMQi3DLxFl5veF1iJd428TbSE9LpD/Qz2jyaf9/77xLxLkmTxPjk8VS2V15w
      3CsKV5Cpz2Td0XWAKAf/2MLHOOU4xdHeo8zNnMvO9p3SU3HIQE7YT3Bv+b2YNWamWafx4IEH
      2d62HYWgYGbGTArNhWxp3jKsgVyaLm3YMRAFhpO0SUxKnUSjs5Eebw9quRqlTMmJvhMkaZLI
      NGTS7GxmMDRIqjaVQDSAK+BiStoU8k352Dw2Ot2daJVajtuPo5Kp0Kv0CAi4Aq4LGt8Q0hPS
      sWgsJKoTaXA20O3tJlmbzBMVTzAhecLFJ8DngM9vto8AtVzNowsfJRaL8fiRx3nh5AvDzlmS
      u4TZGbMZnzSeVe+uiutGU22r5nuTvsfWs1uZkjaF0/2n2dK8hTGJY9Ar9RLb9HdHf4dKJsbH
      dQod0ViUt1vept/fz2DmIGm6NMkAUnQpnLCfGDaOc1HVVRUn0eENe2kZaGFn+06qu6txBVw0
      9DfgCrpQy9X87f/9jQ53B+uOrhOLSsIe9Eo9k1InkaBMQCVXUdVVxWBocHjThxjcMO4Gnjr6
      FIIgEIwEUclVWDQWBoODqOQq1tevRy7ImZs1V5KUGW0eDYK4n1i3SOTiFFuKefb4s+zv2s8t
      E25ha+tW2gbbmJkxkxnpMxAQSFAm8OTRJ5mcOpkMfQZ/qP3DiE3tdAodywqW0e3tZmf7TuSC
      nF/P+zWjTKPI0Gd8qhTmTxNfKAMA0QgAVpeupsXVwq6OXYDotmToMwhGg+zr2ke3p3tYKyZ/
      xM8rp19BJsiQCTLmZc2j1l5L62BrXGneUO5g2ahlzM6YzX9U/QeDITHT2eBsYPmo5RRZimh2
      NXPThJt4YO8DFx2zL+JjdsZsDncfxh/xk2/Kp8/Xh1kjNniYmzVXiu5EY1FsHhvFScV0ubvw
      hMXoizvk5mjPUR6Z/wgv1b9EsjaZBVkLaHI18djhx6TPSk0Qs+MWrQW9Uo835GVJ3hKanE1E
      iXK4+7DkzugUHzImk7RJhKIherw9bG7ezOrS1aw/tZ7NTZuZkzmHqdapPFT9EC0DLZSmlDLF
      OgWjSozNl6eVIwgC/rAftVzNqw2vYvfZSdYmk6xNZpxlHFa9WLfR6e5ELVeTpktjtHn0pyJg
      +4/EF84AhmBQGfhtxW+p7RWjNOFomIcOPsQLJ19gff16SlJKRnxfOBbmu8Xf5dWGV+n39/Or
      Ob9i9bbVw08UkFTohib/EM4OnGVV6SrWbF9DZXslZrV5RImPIeiVenZ37ibPlIdZbcaqs/Lf
      J/+bcDTM9cXXc/WYq2lyNomNAhUa/nnnP5NlyBrm4rlDbrEJnKeb5aOW8+7Zd2l3t1ORU4FZ
      ZeZIzxGKk4qptdcyJ3MOGxo2EIgEUMqUOPwihfjSvEupsdeIK07AxXTrdKwJVqq7q+lwdwCi
      kR+3H6fZ1Ywv7OPNpje5pugariu+jmeOPUOCKoH9nfuZYp2CRWNBLpNj99n52b6fsadjD6Fo
      CJkgQ6PQ8K/T/5UeXw/3vH+PxNLMN+Xz24W/Jc+Y9wl+8c8HX1gDAJH8VJZWRllaGW80viFt
      VEPREKFICBkyosRvzJK1yTxd8zQOv4PT/adxh9xEoiNnnv0RP0a1EQEhLgRoUps42i225enz
      9V2UeyIgUJFTweHuw8iQMTdzLs+feF6aDK+feZ1QNMTmps2o5CqUISWuoAtfv2/Y5woI9PnE
      zesDex+QXDalTMnasrVsOLOBBdkLuH/Z/fR6e+nydBGMBHH4HUxLn0Zlm8hhGtp8DoYGyTfl
      syR3CVuat8SNu8n54QZdq9Dyl5N/4f329/GFfbxU9xIv1Ymr0JqyNSwrWMZzx5+T3CkQV7KG
      /gYern6YUCQUR1FudjXTPtge15H9i4rPLQr0SWFQGXiv9T3cITcGpYGfzf4Z3rA3rsesXqln
      5eiVHOo+JEWJrAlWsgxZI5bhRRHdkSx9Fu2D4uvpCelcUXgFjx1+jEvzLkUtV6OSqQhFQ7iD
      8Ro9AgIGlQGT2sTcrLlU2apodDWilCulPUSmPhOjykh9vzgp52fPJxqLMjNjJuFoOC4jPto8
      mmxDNmvK1vB2y9tSGWg0FqU0pRRnwIlSrsSoMvKT3T8RO6x7utEoNOiVegZDg4RjYXp9vZJh
      BSIBNjZuJBgJxkVxUnQp/G7x7yhKLMIVcLGzY+cwtqc37GVXxy4S1YlsbtocV5E3BLvPTjgW
      jqvmA1iUu+gfouLwaeMLvQKci/SEdJ6/9HkOdR+iOKmYUaZRFFuKmZkxk2O9x7D77Ozv2s8z
      Nc+Qok0hHA1j0VhYXboalVxFo7NRoisICCzIXoAn5KF1oJV1i9bR5xP1hyamTGQgMECOIYe3
      mt/CmmDl2rHXMnh6EG/IK2oahQaRIUMuk2Pz2Hj37LtUdVVJbtI38r+BJ+RhfNJ4FmQv4KDt
      INmGbHQKHVPTpnLj+BtJ06Xx490/xhV0YVQZSdOlEYgEONl3kpsn3MyEpAmSUJRarsagMnDG
      eYYzzjMc6T5Cj0/kPYUJc9B2kLLUMtoG2+j2djM/az6ugAu5TI7T7+SWCbfgj/h5+tjTBKNB
      tAott5fczpjEMQTCAf6z6j8veN/D0TBP1Tw1TC5Uej0WZkH2Av6n/n+k1TjHkENZatmn9dP/
      Q/GFCoP+PfivQ//Fn47/CRAjHeFYmFUlq2gbbKOqqwpfxIdWrmVh9kJmZMxgcupkNjRsYNvZ
      bZjUJialTmJF4Qp0Sh1rd6yNK9szq80YVUbCMbFjzUBwgPHJ4znlOEU0FqU/0E9FdoWUdBuT
      OIZNjZu4acJNVHVV0dDfIGWkv0xTnQAACuRJREFUBQSStEksyV3Cvs59yGVy5mbOZW/nXmSC
      TGoanqpLJUGZgCfkYVzSOPZ37UclU2FQGSTZ+HPxzdHfpMvTRb2jnqlpUyU+kTfs5YXLXiDf
      lE+9o55mVzNjEseIiT1BxuOHH78gteJcZOgzhglXgZjl/vOlf2Zn+062t24nWZvM9eOu/1K4
      P/AlWgE+CnMz57KhYQP+sJ9vFHyDRlcjG85soHUgPhM8GBpkStoU7t99f5x47872nWw6s4m1
      5WuH0Q2cASdXj7mauVlzuXv73bgCLmweG2a1mYqcCt5sehOFTMH3J3+fyamT8Yf9DAQHeLnu
      5WHJvBgx7D476+vXMyl1EhOTJ3Kq/xQGlQFXwEW9U3SVmlxNLM5ZjDXBytaWrZSklODwOzjR
      d2KYqyJDRrOrGYvGwpOLnuTn+35O62CrKB+/6En0Kj0DgQFRcj5pXNx7h8hqH4WF2QupbK+M
      o40YVAbumnwXJrWJKwqv4IrCKz7Wtb5I+MoYwFTrVF5Z9gr+iJ9cYy41vTXctvW2YedtO7sN
      vVIfN/mH0DzQzBNHnkAuDJfdyzJkMSllEotzFvN2y9sUmgvp9nbzTM0zRGIR2gbb2HZ2G48u
      fJRMvcgxuhh9IEaMoz1H8YQ8yJDhCrqGnV/nqOPmCTdjUBlYU7aG6zZfh8PvkEiCPd4eaQXx
      hX0c7jnMKtkqFucupsfbg1Ku5Of7fk6nuxO9Ss/l+Zdzd9ndUisrgGRN8se6v3My5/Ctom/x
      WsNrnHGeIS0hjeWjln8qTSo+T3xlDAAgXZ8u/e0OuYfVCgP4w/5hHKNzMZSqP7eQRqfQUdVV
      JbZybX4Tf9jPjrYdqGSquNqGYDTIs7XPMi5pHH2+4Vns8xEjRq+3l2eXPotSruSBvQ/ElQCm
      aFN4se5FWlwtFCUW8aNpP+Klupe4acJNWDQWTvWfQilTcrr/NNtbt5OqS6XD3cFN42+iyFIk
      ZdVBXMVeqn+JaCzKT6b/RJq087Ln8fyJ5y9YNzE0jvFJ40nUJHLPlHs+8nt9mfCVMoBzkWfM
      I0mTNKwmINOQOWJjtiHEYjFuK7mN6enTOdR9iAx9Bjtad7CleQvOgFNia0Zj0RGv0+Pt+UTl
      g86AE1fQRZ+vD5PaRKY+E3fQTZI2ifK0cra1bhMZpF372NW+i4HgANtbt7NyzEruKb+Hf9n1
      L3E0jXvev4c1ZWvoGOwYkQn7VvNbrCpdJbYq9feTrc9mad5S3ml5Z8TxCQjcXnL7F4K6/I/A
      lyYM+kmhV+nRq/RUd1dLE8GkMnH/9PtxBpxx4dNzYVab+f7k71OYWMg06zSmWKeglqvp8faw
      unQ1i3IXkaBM4I7SO+j19cb5xADTrNPodHcOCwteDDavjedPPE/zQDM6hY5HFjzCjrYd7Gjb
      gVyQ89C8h3ju+HNSlClGjJN9J2l0NUpy8UOIEZP6LwxVyJ2LcDRMrimXR6of4ZmaZ9hwZgNG
      lVjnfD7FQSPXsLZ8LdeOvfZTrcP9IuEruwLIBBkrR69kYvJE9nftRy7ImZM5h1xjLknaJCrb
      K4fJLQIUWYq4r/I+6vrq8IQ8qOQqsvRZfHPMN5mYMhGjysjczLkc7jmMUWWUuPIAqdpU7ii9
      gx/u/OEnGuuQghqIjUWO24/T6REjLq6Ai0Zn44iZ6AsR9Lxh7wW5NwqZgocOPBRHKbf77OSb
      8nlq8VPUO+pxBVxk6jNZmL2QVF3ql9rH/yh8ZcKgnwSxWIwdbTt48MCDErdeKVOiUWjwhXwj
      Mh4FBCalTuJns36GL+zjxrdvlJpAf2/S99jQsIFOdydmjZk0XVocFfhiMKqMUpgTRDr23WV3
      87fTf8PmsTE/ez6rSlZx1aarhmW9rQnWEYlpQ513tp3dFpdoU8rEJNpILFuANWVruGXCLV/p
      CX8+vrIu0MUgCAJ5pjyuGn0V87LmsSR3ieRWXKxg3+axcaLvBAKClCeIITbWGCLm+cN+kjRJ
      IgXjYxT/V+RUcHvJ7TQ4G9ApdCzMXsj6U+ux++ysHLOScUnj2Nu5V0q6DSFBkcDMjJkiHeK8
      zX6GPgN/2M9PZ/4UjUKDO+QmHAmTpE0S+yZcwD0zqUwszVv6tTKAr/5svwAEBHRKHZNTJ6NR
      aNjeuv1jFXzU9tbSMtCCVWcFIFGdyLfGfguN/MPijuWjlrNy9MqP9JtNahMd7g7ueu8u2gfb
      KbeWMy19GqFoiChRqrurebj6YV6ufxlfyMc95fdQYCqgwFTAFOsUtjRv4bri68jSZ6GUKdEr
      9ZQkl5CiTaHGXsOW5i1sbtpMj6eHdH06xZbiuBDoSOP5uuGr7+98BIZarp5fZnkhxIhRa6/l
      8YrHaR1spdhSTLYhG9V8lVTon2/KZ3nhcpQyJa82vDqs4FwmyCgwFdAf6Kemt0Y6/urpV3EH
      3awoXEG9o54ZGTN4+tjTAPT7+9nVsUtixrYPtjMlbQorR6+k0dnIWMtYjvQcIceYw7Vjr6Wh
      v4Ff7v+l5M41u5p5cO6DVLZXsu7oumHGrparWZy7+H99H7+s+NobgC/so65P7GBye8nt9PvF
      SXl24CxjLWNRyVXYPDZKkkvY07kHjUJDr7eXcCzMJXmXSNcRBIF2dzuekIe7tt/FysKV3Dzx
      ZiKxCAPBAXq9vQwEBzCqjHyjQOQKPXjgwbixxIixu2M3abo0qdSyx9tDs6uZQCQQJxAQjAY5
      1nuMOkcd35v8Pb6z+Tv4wj7eaXmHG8ffSGlKadxeJhKL4Av7+FbRt2h0NbK1Zau0eU9QJnDj
      +BuZZp32tXJ/4P8MQGR5htwSs7Pf38806zQSNYmUJJcwEBygNKUUvVKPWWOmZaCFIz1H4pih
      4WiY3x/7vfSkj8aibDizgeN9x6l31HPV6Ku4JO8Snq55mi53F0aVEYvGMuJ4vCEvK0avIN+U
      z5jEMfzbjH/DF/Zx8zs3jzj2qq4q0hPS0cg1+MI+dEodRpWRFF0Ki3MWSxnvOZlzKLYUo1ao
      +enMn3JZ3mXU2mtRyVVMs05jQvIEFLKv33T4+n3j8zDkO8eI0ehsZEPDBsZZxjE/ez6DwUFM
      ahM93h5isRj9/n7SE9I5KT+JXvlh18loLDosTBmNRdEr9eiVeoLRIA8ffFhys7ae3UqGPmPE
      8WiVWqZap0qcnaHCkwuFNR1+Bz/c+UPS9elcO/ZaZmbMlDLiD857kD0de4jGoszKmCUJUGkV
      WuZnz2d+9vy/7+Z9BfC1NwCtQkuRpYg6Rx0bGjYAcNJxkpOOkxd8T44hh0xDpvS/UqakIruC
      P534k3Qs15DLowsexR/xc9B2kE2Nm+KuIRfkjEkcM6xhyPys+cN49ApBwbKCZVKCawhmtZnL
      8y8XiW5Jxdxecntc+1C1XE1FTsUnuBtfP3ztDUAmyFhWsIx3Wt752I0XluYtxaw2S/8LgiD1
      rtrdsZtMQyZ3lN6BWSOek2/Kj0uYAZSklHDbxNt4pPoRanprEASBpblLuXPSnVJd9LnXv7Lw
      SpwBJ6+cfoWBwABZhizuKL2DBdkLmJ0xG7lM/qn1zv064WuZCDsfoUiI31T/hpfrX74oKQxg
      XNI4nqh44oKN/UZCNBblmZpn+GPtHwlGgxQlFvHYwsfI0GcQiobo8/UhIJCiS7lo6DQWi+EM
      OPGEPCRqEtEpdF+7Teunjf8zgA/gDrp55NAjvNbw2gUTWBOSJ/DL2b/8X5f69flEoakcQ87/
      Pa2/IPj/8Ee2wu3+wowAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Aid (Disbursement) by School/Type (Treemap)' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Aid by School Type By State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATjklEQVR4nO3daWwc53kH8P/sfV/ck+eS4k1K1ElK1kFJjo/UceLYcQok/VC0QVOgyJcC
      BQr0+Fb0U+ymX9Kih9s6dtrEduM6Vp1asijJsixZIkXxEO9jKXK5F6+9uVc/eG2T0WFLnN15
      d/b5AQa4I3LmAb1/vjPPzrwvl8vlciCkDHEcx0mELoIQIVEA8jKZjNAlEAFQAPIikYjQJRAB
      UABIWaMAkLJGASBljQJAyhoFgJQ12Wdf5HI5pNNpIWsRVDabRSqVEroMUmTbAlDOb4B4chNp
      xLdtU8gkkEtpkBQz7u5bIbKYHh2CP5xG1/590MgluOPxoLK2dtv5UiYZRSwjh16jAAAEg0Gs
      ra3CaTUinFbDZdXffbR0Av03BwGlGXs7myHhvvinVZ8Hd5Y34KyrhUIihdGgzZeTwsJSCJUO
      IwIrMTgdFfz+BvL+6pfX8OqNwLZtf/NcJ75/uK4gxyPC4ziOk929OYtPBidwuMWEd987C7VS
      A4Myg/nFZZgUGaSVWiwu+GGQhLCUq4JTkYChchdiK8sYOPcmzC37YbS3QZv2Q26uAhdeRjiW
      RPfpp2FOr2FsKQpHZhy/8c5DZ3Uht7IIaCuwPHoFZncXAksTmIpZ8EcvnAQArC17cKN/Aqpj
      XRgcWShYAEh5uuf4noqswBPVocMlhdzoRMC7BC7iwdkhLzaWPPCM3UZGq4M6F8HgmAfLi3fA
      yZWw7eqE7/YAQv4ZRKVWLNy+iamlIByqGIZGpzA8tYDQ0iy0tfsgC3tQadFgPqrF6sI4VGYH
      DNIU0lI1nE7H57VMToyBy8YxPrNUtF8KKR/3GAEk2H/kODo627Hhn4cyZcCmbjdqKi3Q1qah
      y4SQlevgrnMjEArDrtfAUl0LnUoPo0aJoz0HEZZaEF2eQW3PcXCbUdi1HKqsjbAp4oDGhs5m
      N+a0GRgdddjj8iKnOwyjfBMKhQp2ToLlQDhfSw42dwcO1rgwPTuPpXUP+ocnsa+jCRx3d+WE
      PKx7XAOUJ7oGKD8cx3EUgLzhWS82svJt2xqsOjiNKoEqIoVGAdhifX0dRqNR6DJIEZXGAzHZ
      NHy+ILLpJMaGb2F4bBqZAmT25fcn0PQXZ/DXbw/zvm/CLuYDsO734PKVa1gNhzDpCWFzaQRz
      a/w/vJLJ5ZDK5JDJ0oBYTpgPwNTEGJCJYnzWh8DSHAY9YTh1zJdNSsQ92qAsycFY2YznHqvG
      +OQMHus9DYc2g5X1GLRWndDFERFgPAAcGhsbAQBtbe2fbzULVQ4RHeoC5V2fXEQgKUGtWYOO
      KuoGlQNqg25BbdDyUxpt0FwGK6vryGaSmJuexvT8IgqR2d+MLPO+T8I+5gMQDizgg/MfIpbh
      oJBmMTQyhkIMWcl0tgB7Jaxj/CIYmJ4YQy4dwcRcAJmgH6dO90JCd8IRnjA+AuSgsrrxwref
      RS40Bd9aBLcGbiFFH1YRnjA+AnBobW0FABw40itwLUSMGB8BimdvjUnoEogAKAB5tRaN0CUQ
      ATB+CgRk0ymsrK5BZzJDKc0hlshAq+H/Hv1XLs/hndurvO+31P3sBz1wGdVCl1EwzAdg4MpF
      SEx2SIJhuGRr+HAuhW9/rRscz52gUDSJ6UCU132KQToj7oYD86dAq9EU2js7UWXT4+btGcS9
      kwglqWdP+MH8CNDZWofLfRdgdVahqnkvHq/W4fbSCqwNNqFLIyLAfACc7jY43W3btnXSndCE
      J8wHoFh6m+2ottOkW7/NqJF/+TeVMLobNI/uBi0/95kakS25bAbxeAIKlRoSZBFPJKFSayCV
      8NsFev2aB+9Pbmzb9sPeXXiqw8nrcQhbmA/ArasXEZFooNKaEffNQqHVIZLT4tSRveAzAktr
      cfR71rZtC4aTPB6BsIj5NmhgLYlD3d3Y5dJjI61A9+HHkNrwFeSWaFJ+mA9Aa2MlLvX1YS6Q
      QKNLh74PzqGycQ+vf/1J+WL+FKi6aQ+qmz57VY9mIYshosN8AIqlp74Cer1h27aOSsN9vpuI
      BbVB86gNWn5Kog1aLG8NLOLi7MQj/WxvsxW/f7Se54pIMTAfgJFrF+GNZqA32YCVSdxayOL5
      73wTFTp+P6GcCURwfjzw5d94Dw6DktdaSPEwHwBvKIoTTz+NRDgMdYMOcV2G9zc/KV/Mt0Eb
      6xy41NeHSY8fnEQOrVohdElERJgfAdzt++H+YlpQHNojXC1EfJgPQLF0VZuQkT3ao3+H3DRd
      b6miNmgetUHLD7VBtzgztIyri7M72sdLL3ZBwvNdqqSwmA/AuV/9JzJ6G9QGO5RxP+JZwNnQ
      hZZaK6/HGfWu41cDj9YG/cyPX+ziqRpSLMx3gSRyDY6cOI54wIPQpgy9J0+jykJLlxJ+MB8A
      ZJP4+NIl6F27YFVm0HehD/O+jS//OUK+AuZPgU49++KWV62C1UHEifkAFEuL04Bndu/s10GX
      v6WH2qB51AYtP6WxRFKRDC2uC10CEQDzp0AX3n0TmyoT9BYHlieHUeGqQvu+w7zfEDcbjOIY
      r3skpYD5ESALOQ6fOI6wbwHRaAwAIJNKBa6KiAXzAUgnw7hy8RKUZiek+Td+NBYTuCoiFsyf
      Aj3x/Pe/eNGzT7hCiCgxPwIUi01PT3WVI2qD5lEbtPzQ3aBbfDQdwljIV5B9/85uJ1qcNMUK
      i5gPwEf/9z9IqMywaqSQ2FvRWWspzHGmg3j1xs7uBr2fXXYdBYBRzF8DbKyvISNRQC3NIppM
      C10OERnmA6DUmHC4pwc6JYfJkZuYWSzMX2lSnpg/Bep9+hlwEkDXegTfbUxDImW+ZFJCmH83
      ST771JeTQKEo3JQoToMKu6sK0wUyqWkeI1ZRGzSP2qDlh9qgW/R7VjG7vvLQP9dZZUB3PS2u
      V6qYD4BvfgwjM14o9DY8trceH1wYwOnTRyHheaX4D8b8j9QG/cHxegpACWO+CzR8ew77utqQ
      3UzAOzkGqUKKYDwjdFlEJJgPgM2kxvjMIgLLXgzPLUKai2J0cEzosohIMH8KtLv7GMLhMPZ0
      dkLKcVAq5UgmN4Uui4gE8wHgJFIYjKZt25RK/u/cNKkVqLVoHvrnzBqarbqUURs0j9qg5Yfa
      oFuMLm1gaSq8o30cdJtRV6HlqSJSDMwHYKT/Ourb23H9xjCOH+0u2Nw7Z4a9O74b9KXvdlEA
      SgzzXSC/dwl+7wK4zRg8oYTQ5RCRYT4AADAxMYVUNoWpiUdbxZGQ+2H+FKj7xClkOQn0WjUi
      URoBCL+YD4BWr//8a53u4duUX5VKLoVxh3dtyqUlMaCSLagNmkdt0PJDc4Nu4dtICl0CEQDz
      p0DjQ7cQj4exGs+g0t2EljpXQY5zdTaE5hp7QfZN2MX8CLDkmYN3OYSunsOYvT0sdDlEZJgP
      AABks2mE/D5ARmuDEX4xfwq078hRpFMJBNeiOHq0R+hyiMgwHwCT5dOnrawOgQshokRt0Dxq
      g5Yfuht0i8W1OCZWxfGopVouRWeBpngRG+YDMD12G+kcUNvcBnUBF4b5+TVPweYGLbZGuw5n
      /7RX6DJKAvNdIM/0JGYmJ0HPwZNCYD4AAJDLZZGMx5HJZoUuhYgM86dAuw92YzMZw+LUGFQt
      7TDraCUXwh/mA2B1OAEAlbUCF0JEidqgeb7QKpRqcTzOKJVw0KtoQt4vQ23QLaLJNDbS/NwR
      WqFTwqKl6VJKAfMB8ExPIZFKwl6zC+vBIOrqqgtynFcuz/LWBv2zp1rwJ6caedkXKSzmAzA9
      NopINIz5tU1w0WjBAkDKU0m0QWUqPeyaFLwrcaFLISLD/AjQ1rUPmRxQ4XTCaCzMMqakfDEf
      AGd1zedfu+n0h/CM2qB5nuUgcnI1L/syaRQ7nmGCFB61QbeQSSWQybffbSeXSmCmdqaoMR+A
      Jc88TFYLVjfiiAbvICYxoqutARzPSyT9tG/qrjZod70Fv/jhEV6PQ9jCfBdo5PplvHf+Y2hU
      EgyNzUPGZUE3hhK+MB+AHCeHUQ2sx3M4fLgHM7cGEc3QZQvhB/OnQG17D8DmcmJpOYiVkBdV
      7XuglxZqknRSbpgPQE19AwCgwV0LuOmWUMIvaoPmTSz4keC2d3y0Shl22XQCVUQKjdqgW1h1
      Cmh1+ru2J1MPvuSWSjjIaFboksV8AAJeLwwWE/zLPugqXJAl1yE1WKGR8/ume/nsxCOvFP+X
      z7TzWgspHuYDMPjxBcTUVhw9chAjg/1ANosjR21Cl0VEgvkAZHKAQpLFZlaJWn0CK6YDkEqo
      C0T4wXwAmjv3wlFdhUXfClyuBiiV/NyvQwhQAgGob24FADTVf3qBSj0Zwidqg+bdmvFiPfPw
      fw+qTGo0UKu0JHEcx1EA8mhy3PJTEp8DrAaD0FuskHFZ+AMh2O2F6QD95NwkXh+4fxv09w7X
      UbtThJj/BOfm1Y8QzwCb0RVcPHseK8nCTI+YymSRSN3/vzTdgCdKzAfgM56JIUg0MgwOzYDe
      ioQvzAfAZreg/+rHWJfa8dy3nkOVAaAEEL4wfw3QeejYttfNzTThFOEPdYHyro3fgT9x/wHR
      bdXSqisiQ23QLagNWn5Kog26EgpAb6pAdC0IjcmGWPjTNyrfD8X/w4UZvDUc4nWfYtbs0OPV
      Pyz9ZWuZD8D5d95E26lncf3Xr6P3ez/CwJm30f3N76FSz++8O5FkCr4NfmaHLgcVWnEsVMJ8
      F8jscGJueABasxVrnlHEFFrc7B+lRhDhBfMjgLOmCfFICOq6GmxsKvDii9/B9OgosjmAno0n
      O8V8ANo7O+7a1tpOtyQQfjAfgGJ5ot2JlhqH0GWUDLGsgENt0Dxqg5afkmiDRiNhqDQ6JGNh
      cBIpItEYtHoTNDwvAvdvH83h3bH1B37P3z7fiQN1Fl6PS4TFfADOvPEz7H78W/jknddgq2mC
      3NGCRKgfTzz5JBQ8XgUHI0lM+MIP/J5okmYlFRvm26AVVXW4feU8jPZqcBwHd2MLlFwaWTpx
      IzxgfgRo370f2XQCcrkSqc0Upkc+QuuBY1BSD5TwgPkAOJ3Oba8ra2h+UMIf6gLlLfhC4BQP
      nnLFqlNC9VuryJDSVRJdoGLhOEByjxvsDCo5dCr6NYkV8/9nJ8eGUVnfCt/sCGQqPeYWFmFx
      1qGzid9ToX+8MH3PuUH//Out+OPeXbwei7CD+QCMXr+CMKfC0Adn4ahpQExph0POfNmkRDD/
      TtLbK+EZug6TzQmOk2D3gSNotFAHiPCD+QA0t+1BejMGhVKN1GYKcyOXEbE40dXZxP6HGIR5
      zAeguqZm2+u6BjofJ/yhNmje5B0/NiV3P+XkMKhg1Ynj6SeyHbVBtzBrFNBotff8t1gy/ZX2
      IZFw9DlBiWE+APMzk7BXNyC0OAWZUgedtQq6AtyK/pNzj7ZE0la9zTb8+x9081QRKQbmryMH
      Lp/H+Pw8zp15B4P91+GLCl0RERPmA2BwVMIz3A+j1fnl30zIQ2L+FKihsQObyTCUKg3S6QzM
      KqErImLCfADcDfVCl0BEjNqgecOzXmxkd/aYpUmjQLvLwFNFpNBobtAt6KH48lMSnwN4Fxdg
      sVdhzb8AqUINhc6CTGwdRksF+Fwu+OX3J/DaA5ZIeljv/OgYWp00GrCO+QBcOXcGjceexsD/
      /hKOmgaEtQ1w5ILoOfU1KHn8zCmTyyHF4zJINK6WBubboCaHC57hfugtdnASKVwGKTzBiNBl
      EZFgfgSoqW9FMrYGlUaPdCoDa30bVNkEzQtKeMF8AJqam+/aZu05JEAlRIyoC5R3fXIRgQcs
      kfSwjjVZoed59jrCL2qDbkFt0PJTEm3QUNAPg8mKyFoAGpMNq74FyLQVqDDpwOdlwE/7pvHG
      UGGWSDrRZMNLv7u3IPsmO8N8APrefQutJ7+BG7/+OVoOnEBKZUZ88CIOnX4SJh6nK4luphGM
      bPK2v602EqmC7JfsHPNtULPDifnhAWjNNqwG11Dd0ACbTo1Y+qs9pELIgzA/ArhqmhGPhqB2
      16HCVYvxgQ8h01nh0NBjimTnmA9AW8f25ZDsvSeFKYSIEvMBKJanOpzoqCvMQzeVpgfPOUqE
      Q23QPGqDlh+O4zjmL4LDG+tIZ3KIhNeQSqUQ8PsRS/LfVXnl8hwe/3Ef/u7sBO/7JuxiPgDv
      vfU6ppaW8d//8U/45OrHuDE+j8lpD+/HCUWTmA5EEQjTavHlhPkAWBxOzA7fhNpYAVfzXtiU
      afiDIVopnvCC+YtgW2UDYhsBVLv2IOafw2o0BavDLnRZRCSYD8Cerq5tr+9eN56QR8d8AIql
      t9mOansF2ivpMcZyQm3QPGqDlp+SaIMmkwlkszlsJhNIJOKIRCKIJ/m/ae3SZJD3fRL2MR+A
      t1/7V0wtB/Bf//L3GJq6gzd+8Qbu+FZ4P85qrDB3ghK2MX8NUOF0YHb4JlT6CjhrdiHiXcCu
      GponlPCD+RHAbK+DRpZCQ2s7lDLAaKLzdMIf5keA/QcPbnttP3RAoEqIGDE/AhRLk10vdAlE
      ABSAvDYXBaAcMX8KVCxvDSzi4hw/d4K+sL8K39hTycu+SGExH4B3X/tnuI8+Be+0B2qEkZbK
      YXfvQZvbxutxZgIRnB/jZ3Lcg3VmXvZDCo/5AKiNFQguTCGZzCGlUOPrJ09gYyMsdFlEJJi/
      BtAZTGhrqkdWqoRLx6HvQh+WVhNCl0VEgvkRoPvEKQDAs063sIUQUfp/QcZuaO5S+2oAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Aid by School Type by State' width='192'>
      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
      +Hw+ent7UalU3Lx5k8rKStrb21GpVIRCIWZnZ0lPT79vi/rBWqChDjZytrHTUsezr32XZ7bl
      0NXSQfGeJnZsb+DYrhK6WnvZeORH8dUhEokQDAaxWCysra2J+9FLS0uUlJRQXFzM+Pg4VquV
      +fl5VldX0Wg0ojXK5owhCIKYTystLY1YLIZer6eqqorJyUnMZjMpKSkUFxd/zoLlUdlUuG6e
      X56bmxPr1NraSnZ2NlqtFqlUytLSEhkZGezcuRONRkM4HBYNrrKysti1axcLCwsYDAYcDgdV
      VVWkpqZit9sZGhpCrVY/doqkY8eOsXPnToxGI+vr6ywtLTE+Pk4odE9VoFQqOXHiBBaLheTk
      ZBQKBTqdjvn5eTIyMqitrSU3NxePxyMGM5OSkjh+/Dhzc3NoNBqSkpLEbDd6vR6bzcbU1JTo
      1gEP0QHiceF+zYcAggCS3y15JBIJQizGN+FN2mAwcPDgQT744APi8fh99ZZIJEgkEmQyGe+8
      8w7f//736ezspKurC5VKxbFjxxgeHiYSiYjyaovFwvj4OFqtlrS0NJqbm1Gr1cRiMfr7+2lo
      aHhiO24ymYwjR45w69Yt1tfXxftOTk4yMzPD3NwcIyMjpKSksH//foaHhxEEge3bt5Obmyt6
      H8E9Udkrr7zC3bt3xQYJ95wi2traRB3O4+Q3i0QidHR0kJubi8Vi4R//8R85ePAg586dE+NQ
      m5ljNpWr4XCYY8eOiY5yZWVlNDY20tPTI+qHlEolp06dYmZmhs7OTqqrq6moqGBubo6//du/
      5ZVXXqGrq0sUCz5wCZRZtR35L28zOGHCNdpDKLeRbTu3cv7mDbKpYuTOKFUN30H3yI/iq0Mk
      EmFhYYGtW7cyMDBAamoqHo8Hs9nMyMgIoVCIxsZGbty4QWZmJlKpFIPBIK7pN8PtMplMtBHZ
      XErE43Fyc3PRaDREo1GCwaCoe3kSbGZeLC8vZ2hoiLy8PNxuNzk5OTzzzDMsLy+LSx63241M
      JqOtrQ2dTsfa2hrFxcW43W7x3WVzBM3KymJqagqv10tdXR1lZWWMjY3hcrkeWQ8kCAI3b94k
      GAxSXl4uShySkpIwGAwEg0Ex4Z1EIhG1/ZvnF2QyGQMDA4TDYVE/5PV6RQe/9PR0lEolBoMB
      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
    </thumbnail>
  </thumbnails>
</workbook>
